{"version":3,"sources":["ui/EditModal/EditModal.module.css","ui/Card/Card.module.css","ui/DeliveryModal/DeliveryModal.module.css","services/firebase.js","context/auth-context.js","ui/Input.js","pages/Login.js","ui/IdleTimeoutModal.js","helpers/IdleTimerContainer.js","context/orders-context.js","ui/Counter.js","components/Navbar.js","api/OrderDB.js","ui/Card/Card.js","ui/Backdrop.js","ui/DeliveryModal/DeliveryModal.js","components/Dashboard/OrderMaintain.js","api/ItemDB.js","components/Manual/ManualBilling.js","pages/Dashboard.js","components/FoodItems/Food.js","ui/Charts/LineChart.js","ui/Charts/PieChart.js","ui/Tables/Tables.js","helpers/ExportToExcel.js","components/Orders/Orders.js","reusable/Card/Card.js","components/Grocery/Grocery.js","components/FoodItems/AddNew/PreviewCard.js","components/FoodItems/AddNew/AddNewForm.js","reusable/Modals/AlertModal.js","components/FoodItems/AddNew/AddNew.js","components/Grocery/AddNewItem/PreviewCard.js","components/Grocery/AddNewItem/AddNewForm.js","components/Grocery/AddNewItem/AddNewItem.js","ui/EditModal/EditModal.js","ui/EditModal/GroceryEditModal.js","ui/Snackbar/Snackbar.js","reusable/Modals/DeleteConfirmModal.js","reusable/Items/Items.js","pages/Profile.js","reusable/DeliveryCard.js","pages/Delivery.js","api/DeliveryDB.js","components/Sidebar.js","pages/Home.js","ui/404Error.js","App.js","index.js","pages/Login.module.css"],"names":["module","exports","restaurant","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","auth","messaging","getToken","setTokenFound","currentToken","vapidKey","console","log","enablePersistence","experimentalTabSynchronization","then","catch","err","code","AuthContext","React","createContext","user","id","name","location","role","email","img","phone","isLoggedIn","setUser","setIsLoggedIn","logout","AuthContextProvider","props","useState","useEffect","userId","localStorage","getItem","collection","doc","get","data","e","Provider","value","status","children","Input","Form","Group","className","controlId","Label","label","Control","type","placeholder","onChange","Value","isText","Text","text","Login","authCtx","useContext","error","setError","password","userCred","setUserCred","isTokenFound","token","setToken","tokenFunc","changeHandler","event","val","target","prevState","style","Alert","variant","onSubmit","preventDefault","signInWithEmailAndPassword","userCredential","uid","setItem","fcm_token","update","history","push","Button","IdleTimeOutModal","Modal","show","showModal","onHide","handleClose","Header","closeButton","Title","Body","Footer","onClick","handleLogout","IdleTimerContainer","idleTimerRef","useRef","timeoutDuration","ref","timeout","onIdle","timeoutModal","current","reset","timedoutHandler","onActive","OrdersContext","orderData","online","dinein","ready","cancelled","setOrderData","OrdersContextProvider","Counter","orderContext","telephone","Overlay","logoutHandler","Navbar","isOverlay","setIsOverlay","src","alt","href","to","activeClassName","noOfDaysInNormalYear","noOfDaysInLeapYear","billPaidOrder","order","isAdded","orderType","items","daitem","its","item","updateitem","itemName","Name","itemId","itemPrice","itemSize","noOfQuantity","itemQuantity","order_items","actualPrice","totalPrice","timestamp","Date","getTime","date","day","getDate","month","getMonth","getFullYear","orders","FieldValue","arrayUnion","set","createDocumentIds","days","year","docIds","i","getOrders","setOrders","ty","datee","onlineStat","Array","fill","dineInStat","onlineRevenue","dineInRevenue","forEach","o","hour","parseInt","getHours","length","updateOrderStatus","isUpdated","dBoyId","userStatus","Card","classes","Backdrop","onClose","position","top","left","width","height","zIndex","background","ModalOverlay","deliveryUsers","setDeliveryUsers","list","unsubscribe","where","onSnapshot","docs","dUser","currentOrders","user_id","orderId","address","userDetails","userAddress","ui","map","statusUi","styles","free","assign","assignDeliveryUser","span","busy","span1","title","user_username","textDecoration","row","marginBottom","no","user_phone_number","ord","class","modal","assignmodal","hname","hno","hstatus","hassign","hcurrentOrder","DeliveryModal","ReactDOM","createPortal","closeModal","document","getElementById","OrderMaintain","assignModal","setAssignModal","undefined","deliveryAssignHandler","pathname","includes","getDeliveredOrders","hours","mins","getMinutes","timePeriod","userName","order_address","payment","isPaid","noOfItems","addOutOfStock","branch","unit","minimumUnit","addItem","price","category","bucketName","storageRef","storage","subCategoryTimestamp","file","imgRef","child","put","getDownloadURL","nameSearch","createNameSearchArray","Bestseller","Type","actual_price","categories","currency","current_price","currentPrice","dealoftheday","dealOfTheDay","description","desc","image","isproductavailable","isProductAvailable","product_id","productId","quantityPerUnit","shop_name","name_search","bestSeller","BranchName","actualUnit","add","docRef","pName","toLowerCase","sum","ManualBilling","manual","setManual","generate","setGenerate","titles","setItems","listPromises","tit","Promise","all","res","getMultiTitleItems","onChangeHandler","removeOrder","htmlFor","marginRight","padding","createOrder","disabled","ongoingOrders","cursor","setCurrentOrder","justifyContent","alignItems","currentOrder","autoComplete","outline","priceUi","min","removeItem","size","paymentMethod","window","alert","generateBill","addTelOrders","Dashboard","ordersContext","setType","allOrders","newOrders","preparingOrders","onDeliveryOrders","deliveredOrders","food","grocery","setOutOfStockItems","telephoneBillNoFood","telephoneBillNoGrocery","manualBillNoFood","manualBillNoGrocery","setOngoingOrders","cancelReason","deliveryCharge","discount","latitude","longitude","tax","userid","navigator","serviceWorker","onmessage","notification","localForage","findIndex","v","messageType","store","addNotification","message","body","insert","container","animationIn","animationOut","dismiss","duration","onScreen","statData","sort","a","b","Function","listFood","index","splice","localforage","listGrocery","sendNotificationToDeliveryUser","dGuy","registration_ids","vibrate","sound","show_in_foreground","priority","content_available","user_token","headers","Headers","Authorization","fetch","method","JSON","stringify","response","json","updateOrder","updatedOrder","allIndex","newIndex","prepareIndex","path","newItem","l","updatedItem","sumPrice","cquarterPrice","chalfPrice","cfullPrice","time","newData","Food","LineChart","labels","stat","filter","config","datasets","borderColor","tension","options","chart","Chart","destroy","PieChart","backgroundColor","hoverOffset","Tables","textAlign","textTransform","ExportToExcel","apiData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","Orders","itemType","setFilter","setStat","showTable","setShowTable","toISOString","split","max","labelName","checked","emptyData","noOfDays","isLeap","checkLeapYear","listOrders","values","getMonthOrders","listStat","monthStat","monthNo","noOfOrders","getYearOrders","updateItem","fontSize","PreviewCard","foodType","url","altName","fullPrice","AddNewForm","quarterPrice","halfPrice","draftHandler","required","clearHandler","DeleteConfirmModal","AddNew","offer","currencyCode","onSale","quaterPrice","cquaterPrice","setPrice","setAlert","$","prop","AlertModal","ename","files","URL","createObjectURL","priceItem","parseFloat","priceItemChangeHandler","quantity","units","pop","AddNewItem","isAddItem","pricee","quarter","half","full","setQuantity","singlenum","accept","on","click","change","this","reader","FileReader","onloadend","css","result","readAsDataURL","backgroundImage","paddingTop","btn","isUpdate","right","col","paddingRight","input","select","number","single","check","EditModal","singlerow","GroceryEditModal","snackbar","el","createElement","y","innerHTML","append","setTimeout","replace","confirmDelete","Items","deleteModal","setDeleteModal","updateModal","setUpdateModel","getItems","it","updateItemHandler","updatedData","refFromURL","delete","deleteItem","isDeleted","Profile","prfl_img","mno","setNewData","newPassword","confirmPassword","setPassword","x","toggleClass","for","authUser","snapshot","imgUrl","updateUser","onAuthStateChanged","updatePassword","DeliveryCard","users","user_image_url","user_locality","acceptHandler","rejectHandler","removeHandler","Delivery","newD","verified","rejected","deliveryList","dguy","verification","setList","confirm","acceptDeliveryUser","isAccepted","rejectDeliveryUser","isRejected","updatedUser","u","removeDeliveryUser","Sidebar","Grocery","Home","showTimeoutModal","setShowTimeoutModal","isTimedout","setIsTimedout","useHistory","signOut","IdleTimeoutModal","bool","PageNotFound","defaultOptions1","loop","autoplay","animationData","pagenotfound","rendererSettings","preserveAspectRatio","App","component","exact","render","rootElement"],"mappings":"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","file":"static/js/main.0634cee7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"EditModal_modal__2yVmc\",\"row\":\"EditModal_row__2OiVa\",\"right\":\"EditModal_right__38gzX\",\"col\":\"EditModal_col__oZn6w\",\"input\":\"EditModal_input__2FwlV\",\"select\":\"EditModal_select__2dxIW\",\"number\":\"EditModal_number__1EfNZ\",\"btn\":\"EditModal_btn__18Nbr\",\"single\":\"EditModal_single__1If5m\",\"check\":\"EditModal_check__8Huuq\",\"label\":\"EditModal_label__39ZhB\",\"singlerow\":\"EditModal_singlerow__1w74i\",\"singlenum\":\"EditModal_singlenum__3QHmL\",\"singleprice\":\"EditModal_singleprice__1zjvQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__dwJ2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"DeliveryModal_modal__2NSac\",\"assignmodal\":\"DeliveryModal_assignmodal__2g9rr\",\"row\":\"DeliveryModal_row__24Ihd\",\"hname\":\"DeliveryModal_hname__hz91m\",\"hno\":\"DeliveryModal_hno__3ZOc7\",\"hstatus\":\"DeliveryModal_hstatus__3O2-a\",\"hassign\":\"DeliveryModal_hassign__2yYbC\",\"hcurrentOrder\":\"DeliveryModal_hcurrentOrder__3nyCV\",\"name\":\"DeliveryModal_name__2s8OA\",\"no\":\"DeliveryModal_no__3zRfB\",\"status\":\"DeliveryModal_status__2qO82\",\"assign\":\"DeliveryModal_assign__1E-Fs\",\"span\":\"DeliveryModal_span__2_NkE\"};","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/analytics\";\nimport \"firebase/storage\";\nimport \"firebase/messaging\";\n\n// config for institute\nconst config = {\n  apiKey: \"AIzaSyCmOWm_VEzYodG_PzusXD61HmEkSyV1Kcw\",\n  authDomain: \"thalaivan-restaurant.firebaseapp.com\",\n  projectId: \"thalaivan-restaurant\",\n  storageBucket: \"thalaivan-restaurant.appspot.com\",\n  messagingSenderId: \"1084918476722\",\n  appId: \"1:1084918476722:web:1502d45a5f59d483977eab\",\n  measurementId: \"G-ZKVE7EMKFJ\"\n};\n\nconst restaurant = firebase.initializeApp(config);\n\nrestaurant.analytics();\n// firebase.analytics();\nconst db = restaurant.firestore();\nconst auth = restaurant.auth();\nconst messaging = restaurant.messaging();\nconst publicKey =\n  \"BLA1gt_4yje_f8ttbbDAToMEeN1BT9qygiB5Bc8ShJh0qc_cTBcZUznZNd5A1XBla2lX-IMyLJhFzjIezu58jEI\";\n\n// notifications\nexport const getToken = async (setTokenFound) => {\n  let currentToken = \"\";\n  try {\n    currentToken = await messaging.getToken({ vapidKey: publicKey });\n    // console.log(\"Current Token\", currentToken);\n    if (currentToken) {\n      setTokenFound(true);\n    } else {\n      setTokenFound(false);\n    }\n  } catch (error) {\n    console.log(\"An error occurred while retrieving token.\", error);\n  }\n  // messaging.onMessage((payload) => {\n  //   console.log(\"onmes---\");\n  //   // resolve(payload);\n  // });\n  return currentToken;\n};\n\n// messaging.getToken().then((currentToken) => {\n//   if (currentToken) {\n//     console.log(\"token\", currentToken);\n//   } else {\n//     // Show permission request.\n//     console.log(\n//       \"No Instance ID token available. Request permission to generate one.\"\n//     );\n//   }\n//   /** When app is active */\n//   firebase.messaging().onMessage(\n//     (payload) => {\n//       console.log(payload);\n//     },\n//     (e) => {\n//       console.log(e);\n//     }\n//   );\n// });\n\n// getToken();\nexport const onMessageListener = () =>\n  new Promise((resolve) => {\n    messaging.onMessage((payload) => {\n      console.log(\"onmes\");\n      resolve(payload);\n    });\n  });\n\n// offline support\ndb.enablePersistence({ experimentalTabSynchronization: true })\n  .then(() => {\n    console.log(\"Woohoo! Multi-Tab Persistence!\");\n  })\n  .catch((err) => {\n    if (err.code === \"failed-precondition\") {\n      // Multiple tabs open, persistence can only be enabled\n      // in one tab at a a time.\n      // ...\n      console.log(\n        \"multiple tab is opened please close this tab and use only one tab, when offline\"\n      );\n    } else if (err.code === \"unimplemented\") {\n      // The current browser does not support all of the\n      // features required to enable persistence\n      // ...\n      console.log(\n        \"Current Browser or its version doesn't support offline mode\"\n      );\n    }\n  });\n\nexport { db, auth, firebase, messaging };\n","import React, { useEffect, useState } from \"react\";\nimport { auth, db } from \"../services/firebase\";\n\nconst AuthContext = React.createContext({\n  user: {\n    id: \"\",\n    name: \"\",\n    location: \"\",\n    role: \"\",\n    email: \"\",\n    img: \"\",\n    phone: \"\"\n  },\n  isLoggedIn: false,\n  setUser: (user) => {},\n  setIsLoggedIn: () => {},\n  logout: () => {}\n});\n\nexport const AuthContextProvider = (props) => {\n  const [user, setUser] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    let userId = localStorage.getItem(\"userId\");\n    if (userId !== null) {\n      // auth.onAuthStateChanged((user) => {\n      //   if (user !== null) {\n      //   }\n      // });\n      db.collection(\"admin\")\n        .doc(userId)\n        .get()\n        .then((doc) => {\n          setUser(doc.data());\n          setIsLoggedIn(true);\n        })\n        .catch((e) => console.log(e));\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, []);\n\n  const setMyUser = (user) => {\n    console.log(\"Setting User\", user);\n    setUser(user);\n  };\n\n  const setLoggedIn = (status) => {\n    setIsLoggedIn(status);\n  };\n\n  const logoutHandler = () => {\n    console.log(\"logout\");\n    // return true;\n    // auth\n    //   .signOut()\n    //   .then(() => {\n    //     // Sign-out successful.\n    //     console.log(\"signed out successfully...\");\n    //     // alert(\"signed out\");\n    //     return true;\n    //   })\n    //   .catch((error) => {\n    //     // An error happened.\n    //     console.log(error);\n    //     return false;\n    //   });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: user,\n        setUser: setMyUser,\n        isLoggedIn: isLoggedIn,\n        setIsLoggedIn: setLoggedIn,\n        logout: logoutHandler\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst Input = (props) => {\n  return (\n    <div>\n      <Form.Group className=\"mb-3\" controlId={props.id}>\n        <Form.Label>{props.label}</Form.Label>\n        <Form.Control\n          type={props.type}\n          placeholder={props.placeholder}\n          onChange={props.onChange}\n          value={props.Value}\n          name={props.name}\n        />\n        {props.isText && (\n          <Form.Text className=\"text-muted\">{props.text}</Form.Text>\n        )}\n      </Form.Group>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Button, Alert } from \"react-bootstrap\";\nimport AuthContext from \"../context/auth-context\";\nimport { auth, db, getToken } from \"../services/firebase\";\nimport Input from \"../ui/Input\";\nimport style from \"./Login.module.css\";\n\nconst Login = (props) => {\n  const authCtx = useContext(AuthContext);\n  const [error, setError] = useState();\n  const [userCred, setUserCred] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [isTokenFound, setTokenFound] = useState(false);\n  const [token, setToken] = useState(false);\n  console.log(\"Token found\", isTokenFound);\n\n  // console.log(\"navigator\", navigator.onLine);\n  useEffect(() => {\n    let data;\n    async function tokenFunc() {\n      data = await getToken(setTokenFound);\n      if (data) {\n        setToken(data);\n        console.log(\"Token is\", data);\n      }\n      return data;\n    }\n    tokenFunc();\n  }, [setTokenFound]);\n\n  const changeHandler = (event) => {\n    let val = event.target.value;\n    setUserCred((prevState) => {\n      return {\n        ...prevState,\n        [event.target.name]: val\n      };\n    });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    // firebase signin auth\n    auth\n      .signInWithEmailAndPassword(userCred.email, userCred.password)\n      .then((userCredential) => {\n        // setOpen(true);\n        // Signed in\n        let userId = userCredential.user.uid;\n        console.log(\"userId\", userId);\n        localStorage.setItem(\"userId\", userId);\n        // props.history.replace(`/home?userId=${userId}`);\n        db.collection(\"admin\")\n          .doc(userId)\n          .get()\n          .then((doc) => {\n            console.log(doc.data());\n            let user = doc.data();\n            if (user.fcm_token !== token) {\n              user = {\n                ...user,\n                fcm_token: token\n              };\n              db.collection(\"admin\")\n                .doc(userId)\n                .update({\n                  fcm_token: token\n                })\n                .then(() => {})\n                .catch((e) => console.log(e));\n            }\n            console.log(\"user\", user);\n            authCtx.setUser(user);\n            authCtx.setIsLoggedIn(true);\n            // sessionStorage.setItem(\"userId\", userId);\n          })\n          .catch((e) => console.log(e));\n        props.history.push(\"/home\");\n      })\n      .catch((e) => {\n        console.log(e.code);\n        if (e.code === \"auth/wrong-password\") {\n          setError(\"Incorrect password. Try again.\");\n        } else if (e.code === \"auth/network-request-failed\") {\n          setError(\"Internet connection is down!!!\");\n        } else {\n          setError(\"User doesn't exist. Please do register.\");\n        }\n      });\n  };\n\n  return (\n    <>\n      <div className={style.Login}>\n        {/* <Snackbar open={open} handleClose={handleClose} /> */}\n        <h1>Login</h1>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        <form onSubmit={submitHandler}>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            label=\"Email address\"\n            id=\"email\"\n            placeholder=\"Enter email\"\n            text=\"We'll never share your email with anyone else.\"\n            isText=\"true\"\n            onChange={changeHandler}\n            value={userCred.email}\n          />\n\n          <Input\n            type=\"password\"\n            label=\"Password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={changeHandler}\n            value={userCred.password}\n          />\n\n          <Button className={style.Button} variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n          <Button type=\"reset\" className={style.Button} variant=\"primary\">\n            Clear\n          </Button>\n          <br />\n          <br />\n          <br />\n          {/* <p style={{ display: \"inline\" }}>Don't have an account? </p>\n          <a className={style.Link} href=\"/signup\">\n            Register\n          </a> */}\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\n// import { propTypes } from \"react-bootstrap/esm/Image\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst IdleTimeOutModal = (props) => {\n  return (\n    <Modal show={props.showModal} onHide={props.handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>You Have Been Idle!</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>You Will Get Timed Out. You want to stay?</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"danger\" onClick={props.handleLogout}>\n          Logout\n        </Button>\n        <Button variant=\"primary\" onClick={props.handleClose}>\n          Stay\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default IdleTimeOutModal;\n","import React, { useRef, useState } from \"react\";\nimport IdleTimer from \"react-idle-timer\";\n\nconst IdleTimerContainer = (props) => {\n  const idleTimerRef = useRef(null);\n  const [timeoutDuration, setTimeoutDuration] = useState(1000 * 60 * 15); // 10mins\n\n  const onIdleHandler = () => {\n    console.log(\"user is idle...\");\n    if (props.timeout) {\n      props.handleLogout();\n    } else {\n      props.timeoutModal(); // opens the modal\n      idleTimerRef.current.reset();\n      props.timedoutHandler(true); // after the modal, if they are not responding then\n    }\n    // props.timeoutModal(); // opens the modal\n  };\n\n  const onActiveHandler = () => {\n    console.log(\"user is active...\");\n    props.timedoutHandler(false);\n  };\n\n  // const onActionHandler = () => {\n  //   console.log(\"user action...\");\n  //   props.timedoutHandler(false);\n  // };\n\n  return (\n    <IdleTimer\n      ref={idleTimerRef}\n      timeout={timeoutDuration} // {1000 * 60 * 15}, {1000 * 5 * 1}\n      onIdle={onIdleHandler}\n      onActive={onActiveHandler}\n      // onAction={onActionHandler}\n    />\n  );\n};\n\nexport default IdleTimerContainer;\n","import React, { useEffect, useState } from \"react\";\n\nconst OrdersContext = React.createContext({\n  orderData: {\n    online: 0,\n    dinein: 0,\n    ready: 0,\n    cancelled: 0\n  },\n  setOrderData: (orderData) => {}\n});\n\nexport const OrdersContextProvider = (props) => {\n  const [orderData, setOrderData] = useState({\n    online: 0,\n    dinein: 0,\n    ready: 0,\n    cancelled: 0\n  });\n\n  // useEffect(() => {\n  // }, []);\n\n  const setMyOrdersData = (orderData) => {\n    console.log(\"Setting orderData\", orderData);\n    setOrderData(orderData);\n  };\n\n  return (\n    <OrdersContext.Provider\n      value={{\n        orderData: orderData,\n        setOrderData: setMyOrdersData\n      }}\n    >\n      {props.children}\n    </OrdersContext.Provider>\n  );\n};\n\nexport default OrdersContext;\n","import React, { useContext } from \"react\";\nimport OrdersContext from \"../context/orders-context\";\n\nconst Counter = (props) => {\n  const orderContext = useContext(OrdersContext);\n  // console.log(\"orderData\", orderContext);\n  return (\n    <div className=\"row header-count\">\n      <div className=\"inner-div\">\n        <div className=\"card\">\n          <h5>Online Orders:</h5>\n          <p className=\"count\">{orderContext.orderData.online}</p>\n        </div>\n      </div>\n      <div className=\"inner-div\">\n        <div className=\"card\">\n          <h5>Telephone:</h5>\n          <p className=\"count\">{orderContext.orderData.telephone}</p>\n        </div>\n      </div>\n      <div className=\"inner-div\">\n        <div className=\"card\">\n          <h5>On-Delivery:</h5>\n          <p className=\"count\">{orderContext.orderData.ready}</p>\n        </div>\n      </div>\n      <div className=\"inner-div\">\n        <div className=\"card\">\n          <h5>Cancelled:</h5>\n          <p className=\"count\">{orderContext.orderData.cancelled}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Counter;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Counter from \"../ui/Counter\";\nimport Search from \"../ui/Search\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../context/auth-context\";\n// import OrdersContext from \"../context/orders-context\";\n\nconst Overlay = (props) => {\n  return (\n    <div className=\"content\">\n      <ul>\n        <li className=\"inner-list\">\n          <p>Welcome {props.authCtx.user.name} !</p>\n        </li>\n        {/* <li className=\"inner-list\">\n                  <a href=\"#\" className=\"list-link\">\n                    <i className=\"fas fa-cog\"></i>Settings\n                  </a>\n                </li> */}\n        <li className=\"inner-list\">\n          <div className=\"list-link\" onClick={props.logoutHandler}>\n            <i className=\"fas fa-sign-out-alt\"></i>Logout\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nconst Navbar = (props) => {\n  const [isOverlay, setIsOverlay] = useState(false);\n  const authCtx = useContext(AuthContext);\n\n  // useEffect(() => {\n  //   console.log(\"authCtx\", authCtx.user);\n  // }, [authCtx.user]);\n\n  const overlayHandler = () => {\n    setIsOverlay((prevState) => {\n      // console.log(userDetail, \"overlay\");\n      return !prevState;\n    });\n  };\n\n  // const [orderData, setOrderData] = useState({\n  //   online: 0,\n  //   dinein: 0,\n  //   ready: 0,\n  //   cancelled: 0\n  // });\n\n  return (\n    <section className=\"nav-bar\">\n      {authCtx.user !== null && (\n        <div className=\"navbar\">\n          <div className=\"logo\">\n            <img className=\"img-fluid\" src=\"/images/logo.jpg\" alt=\"Logo\" />\n          </div>\n          <Counter />\n          {/* <Search /> */}\n          <ul className=\"nav-item\">\n            <li className=\"list-item\">\n              <a className=\"list-link\" href=\"#l\">\n                <i className=\"far fa-bell\"></i>\n              </a>\n            </li>\n            <li className=\"list-item\">\n              <button\n                type=\"button\"\n                onClick={overlayHandler}\n                className=\"btn collapsible\"\n              >\n                <div className=\"flex\">\n                  <img\n                    className=\"img-fluid\"\n                    src={authCtx.user.img}\n                    alt=\"profilepic\"\n                  />\n                  <p className=\"aname\">\n                    {authCtx.user.name}\n                    <i className=\"fas fa-angle-down\"></i>\n                  </p>\n                </div>\n              </button>\n              {isOverlay && (\n                <Overlay\n                  authCtx={authCtx}\n                  logoutHandler={props.logoutHandler}\n                />\n              )}\n            </li>\n            <li className=\"list-item\">\n              <Link\n                to=\"/home/profile\"\n                activeClassName=\"active\"\n                className=\"list-link\"\n              >\n                <i className=\"fas fa-cog\"></i>\n              </Link>\n            </li>\n            {/* <li className=\"list-item\">\n              <a className=\"list-link\" href=\"#l\">\n                <i className=\"fas fa-cog\"></i>\n              </a>\n            </li> */}\n          </ul>\n        </div>\n      )}\n\n      {/* <!-- Header Ends --> */}\n    </section>\n  );\n};\n\nexport default Navbar;\n","import localforage from \"localforage\";\nimport { CardColumns } from \"react-bootstrap\";\nimport { db, firebase } from \"../services/firebase\";\n\nconst noOfDaysInNormalYear = {\n  \"01\": 31,\n  \"02\": 28,\n  \"03\": 31,\n  \"04\": 30,\n  \"05\": 31,\n  \"06\": 30,\n  \"07\": 31,\n  \"08\": 31,\n  \"09\": 30,\n  10: 31,\n  11: 30,\n  12: 31,\n};\nconst noOfDaysInLeapYear = {\n  \"01\": 31,\n  \"02\": 29,\n  \"03\": 31,\n  \"04\": 30,\n  \"05\": 31,\n  \"06\": 30,\n  \"07\": 31,\n  \"08\": 31,\n  \"09\": 30,\n  10: 31,\n  11: 30,\n  12: 31,\n};\n\n// program to check leap year\nconst checkLeapYear = (year) => {\n  //three conditions to find out the leap year\n  if ((0 === year % 4 && 0 !== year % 100) || 0 === year % 400) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst genrateBillOrder = (order) => {\n  console.log(\"orderdb genbil\", order);\n\n  //local storage code\n};\n\nconst billPaidOrder = (order, type, location, isAdded) => {\n  console.log(\"billPaidOrder\", order, location, type);\n  console.log(\"->\", order.items);\n  let orderType;\n  if (type === \"food\") {\n    orderType = \"FoodOrders\";\n  } else {\n    orderType = \"GroceryOrders\";\n  }\n\n  let daitem = order.items;\n  let its = [];\n  for (let item of daitem) {\n    let updateitem = {\n      itemName: item.Name,\n      itemId: item.id,\n      itemPrice: +item.itemPrice,\n      itemSize: +item.itemSize,\n      noOfQuantity: +item.itemQuantity,\n    };\n    its.push(updateitem);\n  }\n\n  let data;\n\n  if (type === \"food\") {\n    data = {\n      ...order,\n      order_items: its,\n      actualPrice: order.totalPrice,\n      status: \"delivered\",\n    };\n  } else {\n    data = {\n      ...order,\n      order_items: its,\n      actualPrice: order.totalPrice,\n      status: \"delivered\",\n    };\n  }\n  data.timestamp = \"\" + new Date().getTime();\n  const date = new Date();\n  let day = date.getDate();\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n  let month = date.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  // delete items bcs we have order_items\n  // console.log(\"data-updated\", data, `${day}.${month}.${date.getFullYear()}`);\n  delete data.items;\n\n  // let orderRef = [];\n  // let df = orderRef.push(data);\n\n  db.collection(orderType)\n    .doc(\"branch\")\n    .collection(location)\n    .doc(`${day}.${month}.${date.getFullYear()}`)\n    .update({\n      orders: firebase.firestore.FieldValue.arrayUnion(data),\n    })\n    .then(() => {\n      isAdded(true);\n      console.log(\"Dine in Item updated\");\n    })\n    .catch((e) => {\n      // console.log(e, \"errorrrrs\");\n      db.collection(orderType)\n        .doc(\"branch\")\n        .collection(location)\n        .doc(`${day}.${month}.${date.getFullYear()}`)\n        .set({\n          orders: [data],\n        })\n        .then(() => {\n          isAdded(true);\n          console.log(\"Dine in Item created\");\n        })\n        .catch((e) => {\n          // console.log(e);\n          isAdded(false);\n        });\n    });\n};\nconst createDocumentIds = (days, month, year) => {\n  let docIds = [];\n  for (let i = 1; i <= days; i++) {\n    let doc = \"\";\n    if (i < 10) {\n      doc = \"0\" + i + \".\" + month + \".\" + year;\n    } else {\n      doc = i + \".\" + month + \".\" + year;\n    }\n    docIds.push(doc);\n  }\n  return docIds;\n};\n\nconst addTelOrders = (order, type, location, isAdded) => {\n  console.log(\"..............>>\", order, location);\n  console.log(\"->\", order.items, type);\n  let orderType;\n  if (type === \"food\") {\n    orderType = \"FoodOrders\";\n  } else {\n    orderType = \"GroceryOrders\";\n  }\n\n  let daitem = order.items;\n  let its = [];\n  for (let item of daitem) {\n    let updateitem = {\n      itemName: item.Name,\n      itemId: item.id,\n      itemPrice: item.itemPrice,\n      itemSize: item.itemSize,\n      // noOfQuantity: item.itemQuantity\n    };\n    its.push(updateitem);\n  }\n  // console.log(\"itss\", its);\n  let data;\n  if (type === \"food\") {\n    data = {\n      ...order,\n      order_items: its,\n      actualPrice: order.totalPrice,\n      status: \"booked\",\n    };\n  } else {\n    data = {\n      ...order,\n      order_items: its,\n      actualPrice: order.totalPrice,\n      status: \"booked\",\n    };\n  }\n  data.timestamp = \"\" + new Date().getTime();\n  const date = new Date();\n  let day = date.getDate();\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n  let month = date.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  // delete items bcs we have order_items\n  delete data.items;\n  console.log(\"ordersss\", data);\n\n  db.collection(orderType)\n    .doc(\"todayOrders\")\n    .collection(location)\n    .doc(data.id)\n    .set(data)\n    .then((docRef) => {\n      isAdded(true);\n    })\n    .catch((e) => {\n      console.log(e);\n      isAdded(false);\n    });\n};\n\nconst getDeliveredOrders = (type, location, setOrders) => {\n  let ty = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n  } else {\n    ty = \"GroceryOrders\";\n  }\n  let date = new Date();\n  let day = date.getDate();\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n  let month = date.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  let year = date.getFullYear();\n  date = day + \".\" + month + \".\" + year;\n  db.collection(ty)\n    .doc(\"branch\")\n    .collection(location)\n    .doc(date)\n    .get()\n    .then((doc) => {\n      let orders = doc.data().orders;\n      setOrders(orders);\n    })\n    .catch((e) => {\n      console.log(e);\n      setOrders(null);\n    });\n};\n\n// // read all - food & grocery\nconst getOrders = (date, type, location, setOrders) => {\n  // let list = [];\n  let ty = \"\";\n  // let date = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n    // date = \"02.11.2021\";\n  } else {\n    ty = \"GroceryOrders\";\n    // date = \"03.11.2021\";\n  }\n  let datee = new Date();\n  let day = datee.getDate();\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n  let month = datee.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  let year = datee.getFullYear();\n  date = day + \".\" + month + \".\" + year;\n  // console.log(\"date\", date);\n  // let listStat = new Array(10).fill(0);\n  let onlineStat = new Array(10).fill(0);\n  let dineInStat = new Array(10).fill(0);\n  db.collection(ty)\n    .doc(\"branch\")\n    .collection(location)\n    .doc(date)\n    .get()\n    .then((doc) => {\n      let orders = doc.data().orders;\n      // console.log(\"o\", orders);\n      // let monthStat = doc.data().month;\n      let onlineRevenue = 0;\n      let dineInRevenue = 0;\n      // console.log(orders);\n      orders.forEach((o) => {\n        let hour = new Date(parseInt(o.timestamp)).getHours();\n        if (o.type === \"online\") {\n          onlineRevenue += o.totalPrice;\n        } else {\n          dineInRevenue += o.totalPrice;\n        }\n        // console.log(hour);\n        if (hour >= 6 && hour < 8) {\n          if (o.type === \"online\") {\n            onlineStat[0]++;\n          } else {\n            dineInStat[0]++;\n          }\n        } else if (hour >= 8 && hour < 10) {\n          if (o.type === \"online\") {\n            onlineStat[1]++;\n          } else {\n            dineInStat[1]++;\n          }\n        } else if (hour >= 10 && hour < 12) {\n          if (o.type === \"online\") {\n            onlineStat[2]++;\n          } else {\n            dineInStat[2]++;\n          }\n        } else if (hour >= 12 && hour < 14) {\n          if (o.type === \"online\") {\n            onlineStat[3]++;\n          } else {\n            dineInStat[3]++;\n          }\n        } else if (hour >= 14 && hour < 16) {\n          if (o.type === \"online\") {\n            onlineStat[4]++;\n          } else {\n            dineInStat[4]++;\n          }\n        } else if (hour >= 16 && hour < 18) {\n          if (o.type === \"online\") {\n            onlineStat[5]++;\n          } else {\n            dineInStat[5]++;\n          }\n        } else if (hour >= 18 && hour < 20) {\n          if (o.type === \"online\") {\n            onlineStat[6]++;\n          } else {\n            dineInStat[6]++;\n          }\n        } else if (hour >= 20 && hour < 22) {\n          if (o.type === \"online\") {\n            onlineStat[7]++;\n          } else {\n            dineInStat[7]++;\n          }\n        } else if (hour >= 22 && hour < 24) {\n          if (o.type === \"online\") {\n            onlineStat[8]++;\n          } else {\n            dineInStat[8]++;\n          }\n        } else if (hour >= 0 && hour < 6) {\n          if (o.type === \"online\") {\n            onlineStat[9]++;\n          } else {\n            dineInStat[9]++;\n          }\n        }\n      });\n      // monthStat.sort((a, b) =>\n      //   a.monthNo > b.monthNo ? 1 : b.monthNo > a.monthNo ? -1 : 0\n      // );\n      // for (let i = 0; i < monthStat.length; i++) {\n      //   listStat[i] += monthStat[i].noOfOrders;\n      // }\n      // console.log(\"list-data\", listStat);\n      if (orders.length === 0) {\n        setOrders(\"empty\");\n      } else {\n        let listStat = {\n          onlineStat: onlineStat,\n          onlineRevenue: onlineRevenue,\n          dineInStat: dineInStat,\n          dineInRevenue: dineInRevenue,\n        };\n        setOrders(orders, listStat);\n      }\n    })\n    .catch((e) => {\n      let listStat = {\n        onlineStat: 0,\n        onlineRevenue: 0,\n        dineInStat: 0,\n        dineInRevenue: 0,\n      };\n      console.log(\"getFo\", e);\n      setOrders(\"empty\", listStat);\n    });\n};\n\n// get orders for whole month\nconst getMonthOrders = (type, location, filter, setOrders) => {\n  // current month\n  // previous month - differnt year\n  let date = filter.value.split(\"-\");\n  let year = date[0];\n  let month = date[1];\n  let days;\n  let noOfDays;\n\n  let ty = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n    // date = \"02.11.2021\";\n  } else {\n    ty = \"GroceryOrders\";\n    // date = \"03.11.2021\";\n  }\n  let list = [];\n  let listPromises = [];\n  // leap year or not\n  let isLeap = checkLeapYear(parseInt(year));\n  if (isLeap) {\n    days = noOfDaysInNormalYear;\n  } else {\n    days = noOfDaysInLeapYear;\n  }\n  if (new Date().getMonth() + 1 == month) {\n    // current month\n    noOfDays = new Date().getDate();\n  } else {\n    // other month\n    noOfDays = days[month];\n  }\n  let docIds = createDocumentIds(noOfDays, month, year);\n  // console.log(\"docIds\", docIds);\n  docIds.forEach((id) => {\n    listPromises.push(\n      db.collection(ty).doc(\"branch\").collection(location).doc(id).get()\n    );\n  });\n  let listOrders = [];\n  // creating empty arrays\n  // let listStat = new Array(noOfDays).fill(0);\n  let onlineStat = new Array(noOfDays).fill(0);\n  let dineInStat = new Array(noOfDays).fill(0);\n  let onlineRevenue = 0;\n  let dineInRevenue = 0;\n  Promise.all(listPromises)\n    .then((values) => {\n      values.forEach((val) => {\n        // console.log(\"data\", val.data());\n        let data = val.data();\n        list.push(data);\n      });\n    })\n    .then(() => {\n      if (list.length === 0) {\n        setOrders(\"empty\");\n      } else {\n        // console.log(\"else\", list);\n        for (let i = 0; i < list.length; i++) {\n          // console.log(\"list\", list);\n          if (list[i] !== undefined) {\n            let orders = list[i].orders;\n            listOrders = [...listOrders, ...orders];\n            // if(list[i])\n            orders.forEach((o) => {\n              if (o.type === \"online\") {\n                onlineStat[i]++;\n                onlineRevenue += o.totalPrice;\n              } else {\n                dineInStat[i]++;\n                dineInRevenue += o.totalPrice;\n              }\n            });\n          }\n        }\n        // console.log(list);\n        let listStat = {\n          onlineStat: onlineStat,\n          onlineRevenue: onlineRevenue,\n          dineInStat: dineInStat,\n          dineInRevenue: dineInRevenue,\n        };\n        setOrders(listOrders, listStat);\n      }\n    })\n    .catch((e) => {\n      let listStat = {\n        onlineStat: 0,\n        onlineRevenue: 0,\n        dineInStat: 0,\n        dineInRevenue: 0,\n      };\n      setOrders(\"empty\", listStat);\n      console.log(e);\n    });\n};\n\n// get orders for whole year\nconst getYearOrders = (type, location, filter, setOrders) => {\n  let ty = \"\";\n  let date = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n    // date = \"02.11.2021\";\n  } else {\n    ty = \"GroceryOrders\";\n    // date = \"03.11.2021\";\n  }\n\n  let list = [];\n  let listOrders = [];\n  let listStat = [];\n  let listPromises = [];\n  let year = filter.value;\n  let docIds = createDocumentIds(31, \"12\", year);\n  // console.log(\"docIds\", docIds);\n  docIds.forEach((id) => {\n    listPromises.push(\n      db.collection(ty).doc(\"branch\").collection(location).doc(id).get()\n    );\n  });\n\n  Promise.all(listPromises)\n    .then((values) => {\n      values.forEach((val) => {\n        // console.log(\"data\", val.data());\n        let data = val.data();\n        if (data !== undefined) {\n          list.push(data);\n          // let order = val.data().orders;\n          // let statData = val.data().month;\n          // listOrders.push(order);\n          // listStat.push(statData);\n        }\n      });\n    })\n    .then(() => {\n      // console.log(\"list\", list);\n      if (list.length === 0) {\n        setOrders(\"empty\");\n      } else {\n        list.forEach((l) => {\n          listOrders = [...listOrders, ...l.orders];\n        });\n        let monthStat = list[list.length - 1].month;\n        monthStat.sort((a, b) =>\n          a.monthNo > b.monthNo ? 1 : b.monthNo > a.monthNo ? -1 : 0\n        );\n        for (let i = 0; i < monthStat.length; i++) {\n          listStat[i] += monthStat[i].noOfOrders;\n        }\n        // console.log(\"list-data\", listStat);\n        setOrders(listOrders, listStat);\n      }\n    })\n    .catch((e) => console.log(e));\n};\nvar unsubscribe;\n\nconst removeListener = () => {\n  try {\n    if (unsubscribe instanceof Function) {\n      unsubscribe();\n    } else {\n      console.log(\"Not a function\");\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst getTodayOrders = (date, type, location, setOrders) => {\n  let ty = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n    // date = \"02.11.2021\";\n  } else {\n    ty = \"GroceryOrders\";\n    // date = \"03.11.2021\";\n  }\n  let list = [];\n  unsubscribe = db\n    .collection(ty)\n    .doc(\"todayOrders\")\n    .collection(location)\n    .onSnapshot(\n      (docs) => {\n        docs.forEach((doc) => {\n          list.push(doc.data());\n        });\n        setOrders(list);\n        list = [];\n        console.log(\"unsub\", unsubscribe);\n      },\n      (e) => console.log(e)\n    );\n  // db.collection(ty)\n  //   .doc(\"todayOrders\")\n  //   .collection(location)\n  //   .get()\n  //   .then((docs) => {\n  //     docs.forEach((doc) => {\n  //       // console.log(\"doc\", doc.data());\n  //       list.push(doc.data());\n  //     });\n  //     setOrders(list);\n  //   })\n  //   .catch((e) => console.log(e));\n  // db.collection(ty)\n  //   .doc(\"todayOrders\")\n  //   .collection(location)\n  //   .onSnapshot((docs) => {\n  //     docs.forEach((doc) => {\n  //       list.push(doc.data());\n  //     });\n  //     setOrders(list);\n  //     list = [];\n  //   });\n};\n\nconst updateOrderStatus = (type, location, order, status, isUpdated) => {\n  let ty = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n    // date = \"02.11.2021\";\n  } else {\n    ty = \"GroceryOrders\";\n    // date = \"03.11.2021\";\n  }\n\n  // let orderStatus = status;\n  let data = \"\";\n  if (status === \"preparing\") {\n    data = {\n      status: \"preparing\",\n    };\n    db.collection(ty)\n      .doc(\"todayOrders\")\n      .collection(location)\n      .doc(order.id)\n      .update(data)\n      .then(() => {\n        isUpdated(true);\n      })\n      .catch((e) => {\n        console.log(e);\n        isUpdated(false);\n      });\n  } else if (status === \"assigned\") {\n    data = {\n      status: \"assigned\",\n      dBoyId: order.dBoyId,\n    };\n    db.collection(ty)\n      .doc(\"todayOrders\")\n      .collection(location)\n      .doc(order.id)\n      .update(data)\n      .then(() => {\n        db.collection(\"DeliveryUsers\")\n          .doc(\"Branches\")\n          .collection(location)\n          .doc(order.dBoyId)\n          .update({\n            userStatus: \"Assigned\",\n          })\n          .then(() => {\n            isUpdated(true);\n          })\n          .catch((e) => {\n            console.log(e);\n            // isUpdated(false);\n          });\n      })\n      .catch((e) => {\n        console.log(e);\n        isUpdated(false);\n      });\n  }\n  console.log(\"updateOrderStatus\", location, order.id);\n};\n\n// Get Orders Based On Parameters\n// const getOrdersBP = (type, location, setOrders) => {};\n\nexport {\n  getOrders,\n  getTodayOrders,\n  getMonthOrders,\n  getYearOrders,\n  updateOrderStatus,\n  addTelOrders,\n  genrateBillOrder,\n  billPaidOrder,\n  removeListener,\n  getDeliveredOrders,\n};\n\n// const updateOrderStatus = (date, type, location, order, status) => {\n//   console.log(\"updateOrderStatusDB\", order, status);\n//   // if u have listener then no need to get orders again\n//   // now we will get the order and update immedietly\n//   // let list = [];\n//   let ty = \"\";\n//   // let date = \"\";\n//   if (type === \"food\") {\n//     ty = \"FoodOrders\";\n//     date = \"02.11.2021\";\n//   } else {\n//     ty = \"GroceryOrders\";\n//     date = \"03.11.2021\";\n//   }\n//   getTodayOrders(date, type, location, (orders, manualBillNo) => {\n//     if (orders === \"empty\") {\n//       console.log(\"No Items!!!\");\n//     } else {\n//       console.log(\"ordersINDB\", orders, manualBillNo);\n//       let index = orders.findIndex((o) => o.id === order.id);\n//       let updatedOrder = {\n//         ...order,\n//         status: status\n//       };\n//       orders[index] = updatedOrder;\n//       db.collection(ty)\n//         .doc(\"branch\")\n//         .collection(location)\n//         .doc(date)\n//         .update({\n//           orders: orders\n//         })\n//         .then(() => {\n//           console.log(\"successfully updated!!!\");\n//         })\n//         .catch((e) => console.log(e));\n//     }\n//   });\n// };\n\n// const getTodayOrders = (date, type, location, setOrders) => {\n//   // let list = [];\n//   let ty = \"\";\n//   // let date = \"\";\n//   if (type === \"food\") {\n//     ty = \"FoodOrders\";\n//     date = \"02.11.2021\";\n//   } else {\n//     ty = \"GroceryOrders\";\n//     date = \"03.11.2021\";\n//   }\n//   // let date = new Date();\n//   // let day = date.getDate();\n//   // if (day < 10) {\n//   //   day = \"0\" + day;\n//   // }\n//   // let month = date.getMonth() + 1;\n//   // if (month < 10) {\n//   //   month = \"0\" + month;\n//   // }\n//   // let year = date.getFullYear();\n//   // date = day + \".\" + month + \".\" + year;\n//   // console.log(\"date\", date);\n//   db.collection(ty)\n//     .doc(\"branch\")\n//     .collection(location)\n//     .doc(date)\n//     // .get()\n//     // .then((doc) => {\n//     .onSnapshot((doc) => {\n//       let orders = doc.data().orders;\n//       let manualBillingNo = doc.data().manualBillNo;\n//       // console.log(\"o\", orders);\n//       // let monthStat = doc.data().month;\n//       if (orders.length === 0) {\n//         setOrders(\"empty\");\n//       } else {\n//         setOrders(orders, manualBillingNo);\n//       }\n//     });\n//   // .catch((e) => {\n//   //   console.log(\"getFo\", e);\n//   //   setOrders(\"empty\");\n//   // });\n// };\n","import React from \"react\";\n\nimport classes from \"./Card.module.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.Card} ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;\n","// import styled from \"styled-components\";\n\nconst Backdrop = (props) => {\n  // const BackDrop = styled.div`\n  //   position: fixed;\n  //   top: 0;\n  //   left: 0;\n  //   width: 100%;\n  //   height: 100vh;\n  //   z-index: 1000;\n  //   background: rgba(0, 0, 0, 0.75);\n  // `;\n\n  return (\n    <div\n      onClick={props.onClose}\n      style={{\n        position: \"fixed\",\n        top: \"0\",\n        left: \"0\",\n        width: \"100%\",\n        height: \"100vh\",\n        zIndex: \"1000\",\n        background: \"rgba(0, 0, 0, 0.75)\"\n      }}\n    />\n  );\n};\n\nexport default Backdrop;\n// import styled from \"styled-components\";\n\n// const Backdrop = (props) => {\n//   const BackDrop = styled.div`\n//     position: fixed;\n//     top: 0;\n//     left: 0;\n//     width: 100%;\n//     height: 100vh;\n//     z-index: 1000;\n//     background: rgba(0, 0, 0, 0.75);\n//   `;\n\n//   return <BackDrop onClick={props.onClose} />;\n// };\n\n// export default Backdrop;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./DeliveryModal.module.css\";\nimport Card from \"../Card/Card\";\nimport Backdrop from \"../Backdrop\";\n// import $ from \"jquery\";\nimport { getDeliveryUsers } from \"../../api/DeliveryDB\";\nimport AuthContext from \"../../context/auth-context\";\nimport { db } from \"../../services/firebase\";\n\nconst ModalOverlay = (props) => {\n  const [deliveryUsers, setDeliveryUsers] = useState(null);\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    let location = authCtx.user.location;\n    // console.log(\"location\", location);\n    // getDeliveryUsers(location, (users) => {\n    // location = location[0].toUpperCase() + location.substring(1);\n    let list = [];\n    var unsubscribe = db\n      .collection(\"DeliveryUsers\")\n      .doc(\"Branches\")\n      .collection(location)\n      .where(\"verification\", \"==\", \"verified\")\n      .onSnapshot((docs) => {\n        docs.forEach((doc) => {\n          let dUser = {\n            ...doc.data(),\n            currentOrders: [],\n          };\n          props.orders.forEach((order) => {\n            if (dUser.user_id === order.dBoyId) {\n              dUser.currentOrders.push({\n                orderId: order.orderId,\n                address: order.userDetails.userAddress,\n              });\n            }\n          });\n          list.push(dUser);\n        });\n        console.log(\"deli\", list);\n        console.log(\"orders\", props.orders);\n        setDeliveryUsers((prevState) => {\n          return [...list];\n        });\n        list = [];\n      });\n    return () => {\n      unsubscribe();\n    };\n    // });\n  }, [authCtx.user.location]);\n\n  let ui = null;\n  if (deliveryUsers === null) {\n    ui = <p>Loading!!!</p>;\n  } else if (deliveryUsers.length === 0) {\n    ui = <p>No delivery users available!!!</p>;\n  } else {\n    ui = deliveryUsers.map((user) => {\n      let statusUi = null;\n      if (user.userStatus === \"Online\") {\n        statusUi = (\n          <>\n            <p className={styles.status}>\n              {/* <span className={styles.busy}>On Delivery</span> */}\n              <span className={styles.free}>Available</span>\n            </p>\n            <p\n              className={styles.assign}\n              onClick={() => props.assignDeliveryUser(props.order, user)}\n            >\n              {/* <span className={styles.span}>Assign&nbsp;&#10003;</span> */}\n              <span className={styles.span}>Assign&nbsp;&#10003;</span>\n            </p>\n          </>\n        );\n      } else if (user.userStatus === \"Offline\") {\n        statusUi = (\n          <>\n            <p className={styles.status}>\n              <span className={styles.busy}>Offline</span>\n            </p>\n            <p className={styles.assign}>\n              <span className={styles.span}>Offline&nbsp;&#10003;</span>\n            </p>\n          </>\n        );\n      } else if (user.userStatus === \"RideOn\") {\n        statusUi = (\n          <>\n            <p className={styles.status}>\n              <span className={styles.free}>Ride On</span>\n            </p>\n            <p className={styles.assign}>\n              {/* <span className={styles.span}>Ride-On&nbsp;&#10003;</span> */}\n            </p>\n          </>\n        );\n      } else if (user.userStatus === \"Assigned\") {\n        statusUi = (\n          <>\n            <p className={styles.status}>\n              <span className={styles.free}>Assigned</span>\n            </p>\n            {props.order.dBoyId === user.user_id ? (\n              <p className={styles.assign}>\n                <span\n                  className={styles.span1}\n                  title={`This order is already assigned to ${user.user_username}`}\n                  style={{ textDecoration: \"underline\" }}\n                >\n                  Can't Assign\n                </span>\n              </p>\n            ) : (\n              <p\n                className={styles.assign}\n                onClick={() => {\n                  props.assignDeliveryUser(props.order, user);\n                }}\n              >\n                <span className={styles.span}>Re-Assign&nbsp;&#10003;</span>\n              </p>\n            )}\n          </>\n        );\n      }\n      return (\n        <div\n          className={styles.row}\n          style={{ marginBottom: \"5px\" }}\n          key={user.user_id}\n        >\n          <p className={styles.name}>{user.user_username}</p>\n          <p className={styles.no}>{user.user_phone_number}</p>\n          {statusUi}\n          <p className={styles.no} title>\n            {user.currentOrders.length > 0\n              ? user.currentOrders.map((ord, i) => (\n                  <>\n                    <p\n                      title={ord.address}\n                      style={{ textDecoration: \"underline\" }}\n                    >\n                      {ord.orderId}\n                    </p>\n                    {/* {i < user.currentOrders.length - 1 ? \";\" : \"\"} */}\n                  </>\n                ))\n              : \"Empty\"}\n          </p>\n        </div>\n      );\n    });\n  }\n  return (\n    <div class={styles.modal}>\n      <Card>\n        <div className={styles.assignmodal}>\n          <div className={styles.row} style={{ marginBottom: \"10px\" }}>\n            <p className={styles.hname}>Delivery Person</p>\n            <p className={styles.hno}>Mobile Number</p>\n            <p className={styles.hstatus}>Status</p>\n            <p className={styles.hassign}>Assign</p>\n            <p className={styles.hcurrentOrder}>Current Orders</p>\n          </div>\n          {ui}\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nconst DeliveryModal = (props) => {\n  // console.log(\"edit\", props.item);\n  return (\n    <>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.closeModal} />,\n        document.getElementById(\"backdrop-root\")\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay\n          onClose={props.closeModal}\n          // title={props.title}\n          assignDeliveryUser={props.assignDeliveryUser}\n          // updateItem={props.updateItem}\n          order={props.order}\n          orders={props.orders}\n        />,\n        document.getElementById(\"overlay-root\")\n      )}\n    </>\n  );\n};\n\nexport default DeliveryModal;\n","import React, { useEffect, useState } from \"react\";\nimport { getDeliveredOrders } from \"../../api/OrderDB\";\nimport DeliveryModal from \"../../ui/DeliveryModal/DeliveryModal\";\n\nconst OrderMaintain = (props) => {\n  const [assignModal, setAssignModal] = useState(false);\n  const [orders, setOrders] = useState(undefined);\n\n  const deliveryAssignHandler = (order) => {\n    setAssignModal(order);\n  };\n\n  useEffect(() => {\n    if (location.pathname.includes(\"delivered\")) {\n      getDeliveredOrders(props.type, props.location, (orders) => {\n        console.log(\"delvieredOrders\", orders);\n        setOrders(orders);\n      });\n    } else {\n      setOrders(props.orders);\n    }\n  }, [props.orders]);\n\n  return (\n    <>\n      {assignModal && (\n        <DeliveryModal\n          orders={props.orders}\n          order={assignModal}\n          assignDeliveryUser={(order, user) => {\n            props.assignDeliveryUser(order, user);\n            setAssignModal(false);\n          }}\n          closeModal={() => setAssignModal(false)}\n        />\n      )}\n      <div class=\"order-head row\">\n        <p className=\"oid\">Order ID</p>\n        <p className=\"uname\">User Name</p>\n        <p className=\"add\">Address</p>\n        <p className=\"date\">In Time</p>\n        <p className=\"cat\">Category</p>\n        <p className=\"amount\">Amount</p>\n        <p className=\"tq\">Qty</p>\n        <p className=\"tp\">Total Price</p>\n        <p className=\"status\">Status</p>\n      </div>\n      {orders === undefined || orders === null\n        ? \"No Orders\"\n        : orders.map((order) => {\n            let timestamp = new Date(parseInt(order.timestamp));\n            let year = timestamp.getFullYear();\n            let month = timestamp.getMonth() + 1;\n            if (month < 10) {\n              month = \"0\" + month;\n            }\n            let day = timestamp.getDate();\n            if (day < 10) {\n              day = \"0\" + day;\n            }\n            let hours = timestamp.getHours();\n            let mins = timestamp.getMinutes();\n            let timePeriod = \"AM\";\n            if (hours > 12) {\n              timePeriod = \"PM\";\n              hours = hours - 12;\n            }\n            if (hours < 10) {\n              hours = \"0\" + hours;\n            }\n            if (mins < 10) {\n              mins = \"0\" + mins;\n            }\n            return (\n              <details className=\"order-view\" key={order.orderId}>\n                <summary className=\"row\">\n                  <p className=\"oid\">#{order.orderId}</p>\n                  <p className=\"uname\">\n                    {order.userDetails?.userName ||\n                      order.order_address?.userName}\n                  </p>\n                  <p className=\"add\">\n                    {order.userDetails?.userAddress ||\n                      order.order_address?.userAddress}\n                  </p>\n                  <p className=\"date\">\n                    {`${day}-${month}-${year}`} {hours}:{mins} {timePeriod}\n                  </p>\n                  <p className=\"cat\">{order.type}</p>\n                  <p className=\"amount\">\n                    {/* {order.payment.isPaid ? \"Paid\" : \"Not Paid\"} */}\n                    {/* <span className=\"paid\"></span> */}\n                    {order.payment.isPaid ? (\n                      <span className=\"paid\">Paid</span>\n                    ) : (\n                      <span className=\"pod\">POD</span>\n                    )}\n                  </p>\n                  <p className=\"tq\">{order.noOfItems}</p>\n                  <p className=\"tp\">\n                    <i class=\"fas fa-rupee\"></i>\n                    {order.totalPrice}\n                  </p>\n                  <p className=\"status\">\n                    {/* <span className=\"new\"> */}\n                    {order.status === \"booked\" ? (\n                      <span className=\"new\">NewOrder</span>\n                    ) : order.status === \"preparing\" ? (\n                      <span className=\"prepare\">Preparing</span>\n                    ) : order.status === \"assigned\" ? (\n                      <span className=\"ready\">Assigned</span>\n                    ) : order.status === \"accepted\" ? (\n                      <span className=\"ready\">Accepted</span>\n                    ) : order.status === \"rideon\" ? (\n                      <span className=\"ready\">On-Delivery</span>\n                    ) : order.status === \"delivered\" ? (\n                      <span className=\"delivered\">Delivered</span>\n                    ) : order.status === \"rejected\" ? (\n                      <span className=\"cancelled\">Rejected</span>\n                    ) : (\n                      <span className=\"cancelled\">Cancelled</span>\n                    )}\n                    {/* </span> */}\n                    {/* <span className=\"prepare\">Preparing</span> */}\n                    {/* <span className=\"ready\">New Order</span>\n            <span className=\"delivered\">New Order</span> */}\n                  </p>\n                </summary>\n                <div className=\"details row\">\n                  {order.order_items?.map((item) => {\n                    return (\n                      <p key={item.itemId} className=\"item\">\n                        {item.itemName} x {item.itemSize}\n                      </p>\n                    );\n                  })}\n\n                  {order.status === \"booked\" ? (\n                    <button\n                      className=\"btn btn-dark\"\n                      type=\"button\"\n                      onClick={() =>\n                        props.updateOrderStatus(order, \"preparing\")\n                      }\n                    >\n                      Preparing\n                    </button>\n                  ) : order.status === \"preparing\" ? (\n                    <>\n                      <button\n                        className=\"btn btn-dark\"\n                        type=\"button\"\n                        onClick={() => deliveryAssignHandler(order)}\n                      >\n                        Ready To Deliver\n                      </button>\n                    </>\n                  ) : order.status === \"assigned\" ||\n                    order.status === \"accepted\" ||\n                    order.status === \"rejected\" ? (\n                    <>\n                      <button\n                        className=\"btn btn-dark\"\n                        type=\"button\"\n                        onClick={() => deliveryAssignHandler(order)}\n                      >\n                        Re-Assign Delivery Boy\n                      </button>\n                    </>\n                  ) : order.status === \"rideon\" ? (\n                    <>\n                      <button\n                        className=\"btn btn-dark\"\n                        type=\"button\"\n                        onClick={() => deliveryAssignHandler(order)}\n                      >\n                        Re-Assign Delivery Boy\n                      </button>\n                    </>\n                  ) : order.status === \"delivered\" ? (\n                    <span className=\"delivered\">Delivered</span>\n                  ) : (\n                    <span className=\"cancelled\">Cancelled</span>\n                  )}\n\n                  {/* <button type=\"button\" onClick={() => acceptHandler()}>\n                    Accept\n                  </button>\n                  <button type=\"button\" onClick={() => cancelHandler()}>\n                    Cancel\n                  </button> */}\n                  {/* <p className=\"cancel\">Cancel</p> */}\n                  {/* <p className=\"deliverydetails\">Akhil,&nbsp;8072711781</p> */}\n                </div>\n              </details>\n            );\n          })}\n    </>\n  );\n};\n\nexport default OrderMaintain;\n","import { db, firebase } from \"../services/firebase\";\n\nconst getItem = (title, type, itemId, location, addOutOfStock) => {\n  // console.log(\"ItemDB\", title);\n  // let list = [];\n  db.collection(type)\n    .doc(type + \"_Types\")\n    .collection(title) // BreakFast, PersonalCare\n    .doc(itemId)\n    .get()\n    .then((doc) => {\n      let item = doc.data();\n      console.log(\"itemm\", item, location);\n      if (item.branch[location].unit <= item.branch[location].minimumUnit) {\n        addOutOfStock(item);\n      } else {\n        addOutOfStock(null);\n      }\n    })\n    .catch((e) => console.log(\"getItem()\", e));\n};\n\nconst setItem = (title, type, item, location, addOutOfStock) => {\n  console.log(\"item\", item, title, type, location);\n  let data = {\n    ...item,\n  };\n  // let data = {\n  //   [location]: {\n  //     ...item[location],\n  //     unit: parseInt(item[location].unit),\n  //   },\n  // };\n  data.branch[location] = {\n    ...item.branch[location],\n    unit: parseInt(item.branch[location].unit),\n  };\n  if (type === \"Food\") {\n    if (item.Type === \"Breakfast\") {\n      title = \"BreakFast\";\n    } else if (item.Type === \"Lunch\") {\n      title = \"Lunch\";\n    } else if (item.Type === \"Dinner\") {\n      title = \"Dinner\";\n    }\n  } else {\n    if (item.Type === \"Rice\") {\n      title = \"Rice\";\n    } else if (item.Type === \"Fruits_Vegetables\") {\n      title = \"Fruits_Vegetables\";\n    } else if (item.Type === \"Summer_Drinks_Beverage\") {\n      title = \"Summer_Drinks_Beverage\";\n    } else if (item.Type === \"soaps\") {\n      title = \"soaps\";\n    } else if (item.Type === \"Pharmacy\") {\n      title = \"Pharmacy\";\n    } else if (item.Type === \"Organics\") {\n      title = \"Organics\";\n    }\n  }\n  db.collection(type)\n    .doc(type + \"_Types\")\n    .collection(title) // BreakFast, PersonalCare\n    .doc(item.id)\n    .update(data)\n    .then(() => {\n      console.log(\"success\");\n      addOutOfStock(true);\n    })\n    .catch((e) => {\n      console.log(\"setItem()\", e);\n      addOutOfStock(false);\n    });\n};\n\n// read all - food & grocery\nconst getItems = (title, type, setItems) => {\n  console.log(\"ItemDB\", title, type);\n  let list = [];\n  db.collection(type)\n    .doc(type + \"_Types\")\n    .collection(title) // BreakFast, PersonalCare\n    .get()\n    .then((docs) => {\n      docs.forEach((doc) => {\n        let item = doc.data();\n        item.id = doc.id;\n        list.push(item);\n      });\n    })\n    .then(() => {\n      setItems(list);\n    })\n    .catch((e) => console.log(\"getItems()\", e));\n};\n\n// get multi title items\nconst getMultiTitleItems = (titles, type, setItems) => {\n  // let titles = [...title];\n  let list = [];\n  let listPromises = [];\n  titles.forEach((tit) => {\n    console.log(\"tit\", tit, type);\n    listPromises.push(\n      db\n        .collection(type)\n        .doc(type + \"_Types\")\n        .collection(tit) // BreakFast, PersonalCare\n        .get()\n    );\n  });\n  Promise.all(listPromises)\n    .then((value) => {\n      // console.log(\"res\", value);\n      value.forEach((val) => {\n        val.forEach((res) => {\n          list.push(res.data());\n        });\n      });\n      return list;\n    })\n    .then((data) => {\n      console.log(\"2nd then\", data);\n      setItems(data);\n    })\n    .catch((e) => console.log(e));\n};\n\n// add item - food & grocery\nconst addItem = (item, price, type, authCtx, isAdded) => {\n  console.log(\"item\", item, type, price);\n  let title = \"\";\n  let priceData = \"\";\n  if (type === \"Food\") {\n    if (item.category === \"BreakFast\") {\n      title = \"BreakFast\";\n    } else if (item.category === \"Lunch\") {\n      title = \"Lunch\";\n    } else if (item.category === \"Dinner\") {\n      title = \"Dinner\";\n    }\n  } else {\n    if (item.category === \"Fruits_Vegetables\") {\n      title = \"Fruits_Vegetables\";\n    } else if (item.category === \"Rice\") {\n      title = \"Rice\";\n    } else if (item.category === \"Summer_Drinks_Beverages\") {\n      title = \"Summer_Drinks_Beverages\";\n    } else if (item.category === \"soaps\") {\n      title = \"soaps\";\n    } else if (item.category === \"Pharmacy\") {\n      title = \"Pharmacy\";\n    } else if (item.category === \"Organics\") {\n      title = \"Organics\";\n    }\n  }\n\n  let bucketName = type === \"Food\" ? \"Foods\" : \"Grocery\";\n  let storageRef = firebase.storage().ref();\n  let subCategoryTimestamp = +new Date().getTime() + \"-\" + item.img.file.name;\n  let imgRef = storageRef.child(`${bucketName}/${subCategoryTimestamp}`);\n  // console.log(\"submit\", subCategoryTimestamp, priceData);\n  imgRef.put(item.img.file).then(() => {\n    imgRef\n      .getDownloadURL()\n      .then((img) => {\n        let nameSearch = createNameSearchArray(item.name);\n        let data = \"\";\n        data = {\n          Bestseller: true,\n          Name: item.name,\n          Type: item.category,\n          actual_price: 0,\n          branch: {},\n          categories: [],\n          currency: \"\",\n          current_price: +item.currentPrice,\n          dealoftheday: item.dealOfTheDay,\n          description: item.desc,\n          image: img,\n          isproductavailable: item.isProductAvailable,\n          product_id: item.productId,\n          quantityPerUnit: 1,\n          shop_name: \"Thalaivar\",\n          unit: \"1\",\n          name_search: [...nameSearch],\n        };\n        data.branch[authCtx.user.location] = {\n          Bestseller: item.bestSeller,\n          BranchName: authCtx.user.location,\n          current_price: +item.currentPrice,\n          dealoftheday: item.dealOfTheDay,\n          unit: parseInt(item.actualUnit),\n        };\n\n        db.collection(type)\n          .doc(type + \"_Types\")\n          .collection(title)\n          .add(data)\n          .then((docRef) => {\n            console.log(\"docRef\", docRef);\n            db.collection(type)\n              .doc(type + \"_Types\")\n              .collection(title)\n              .doc(docRef.id)\n              .update({\n                id: docRef.id,\n              })\n              .then(() => {\n                isAdded(true);\n                console.log(\"Item added\");\n              })\n              .catch((e) => {\n                isAdded(false);\n                console.log(e);\n              });\n          })\n          .catch((e) => {\n            console.log(e);\n            isAdded(false);\n          });\n      })\n      .catch((e) => {\n        console.log(e);\n        isAdded(false);\n      });\n  });\n};\n\n// update item - food & grocery\nconst updateItem = (\n  item,\n  price,\n  quantity,\n  title,\n  type,\n  location,\n  isUpdated\n) => {\n  // console.log(\"--\", item, price, quantity, title, type, location);\n  // create name search\n  let nameSearch = createNameSearchArray(item.Name);\n  // without image\n  if (item.img === undefined) {\n    console.log(\"item.img-undefined\", item);\n    let data = {\n      ...item,\n      Name: item.Name,\n      description: item.description,\n      // category: item.category,\n      Type: item.Type,\n      // [location]: {\n      //   isproductavailable: item[location].isproductavailable,\n      //   Bestseller: item[location].Bestseller,\n      //   dealoftheday: item[location].dealoftheday,\n      //   unit: parseInt(item[location].unit),\n      //   minimumUnit: parseInt(item[location].minimumUnit),\n      //   quantityPerUnit: parseInt(item[location].quantityPerUnit),\n      //   price: priceData,\n      // },\n      name_search: [...nameSearch],\n    };\n    data.branch[location] = {\n      Bestseller: item.branch[location].Bestseller,\n      BranchName: location,\n      current_price: +item.branch[location].current_price,\n      dealoftheday: item.branch[location].dealoftheday,\n      unit: +item.branch[location].unit,\n    };\n    // if (type === \"Food\") {\n    //   data = {\n    //     ...data,\n    //     style: item.style,\n    //   };\n    // }\n    // // console.log(\"data\", data);\n    db.collection(type)\n      .doc(type + \"_Types\")\n      .collection(title)\n      .doc(item.id)\n      .update(data)\n      .then(() => {\n        let updatedData = {\n          ...data,\n          id: item.id,\n          image: item.image,\n          currency: item.currency,\n        };\n        isUpdated(updatedData);\n      })\n      .catch((e) => {\n        isUpdated(false);\n        console.log(\"updateItem()\", e);\n      });\n  } else {\n    console.log(\"item.img\", item.img.name, item.img, item.img.file);\n    // image\n    let bucketName = type === \"Food\" ? \"Foods\" : \"Grocery\";\n    let storageRef = firebase.storage().ref();\n    let subCategoryTimestamp = +new Date().getTime() + \"-\" + item.img.name;\n    let imgRef = storageRef.child(`${bucketName}/${subCategoryTimestamp}`);\n    // console.log(\"submit\", subCategoryTimestamp, priceData);\n    imgRef\n      .put(item.img)\n      .then(() => {\n        console.log(\"img ref put...\");\n        imgRef\n          .getDownloadURL()\n          .then((img) => {\n            let data = {\n              ...item,\n              Name: item.Name,\n              image: img,\n              description: item.description,\n              Type: item.Type,\n              name_search: [...nameSearch],\n            };\n            data.branch[location] = {\n              Bestseller: item.branch[location].Bestseller,\n              BranchName: location,\n              current_price: +item.branch[location].current_price,\n              dealoftheday: item.branch[location].dealoftheday,\n              unit: +item.branch[location].unit,\n            };\n            delete data.img;\n            // console.log(\"img\", img, data);\n\n            db.collection(type)\n              .doc(type + \"_Types\")\n              .collection(title)\n              .doc(item.id)\n              .update({\n                ...data,\n              })\n              .then(() => {\n                isUpdated(data);\n                // delete previous image from storage\n                let storaRef = firebase.storage();\n                storaRef\n                  .refFromURL(item.image)\n                  .delete()\n                  .then(() =>\n                    console.log(\"image deleted successfullty, MyBin.js[284]\")\n                  )\n                  .catch((e) => console.log(e, \"already deleted\"));\n              })\n              .catch((e) => {\n                isUpdated(false);\n                console.log(\"updateItem()\", e);\n              });\n          })\n          .catch((e) => {\n            console.log(\"img update\", e);\n            isUpdated(false);\n          });\n      })\n      .catch((e) => {\n        isUpdated(false);\n        console.log(\"put image\", e);\n      });\n  }\n};\n\nconst createNameSearchArray = (name) => {\n  let pName = name.toLowerCase();\n  let list = [];\n  let sum = \"\";\n  for (let i = 0; i < pName.length; i++) {\n    sum += pName[i];\n    list.push(sum);\n  }\n  return list;\n};\n\n// delete item - food & grocery\nconst deleteItem = (item, title, type, isDeleted) => {\n  db.collection(type)\n    .doc(type + \"_Types\")\n    .collection(title)\n    .doc(item.id)\n    .delete()\n    .then(() => {\n      console.log(\"successfully deleted\");\n      firebase\n        .storage()\n        .refFromURL(item.image)\n        .delete()\n        .then(() => {\n          console.log(\"image deleted successfullty from firebase storage\");\n          isDeleted(true);\n        })\n        .catch((e) => {\n          console.log(e);\n          isDeleted(false);\n        });\n    })\n    .catch((e) => {\n      console.log(\"deleteItem()\", e);\n      isDeleted(false);\n    });\n};\n\nexport {\n  setItem,\n  getItem,\n  getItems,\n  addItem,\n  deleteItem,\n  updateItem,\n  getMultiTitleItems,\n};\n","import localforage from \"localforage\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { getMultiTitleItems } from \"../../api/ItemDB\";\nimport {\n  addTelOrders,\n  genrateBillOrder,\n  billPaidOrder,\n} from \"../../api/OrderDB\";\nimport AuthContext from \"../../context/auth-context\";\n\nconst ManualBilling = (props) => {\n  const authCtx = useContext(AuthContext);\n  const [manual, setManual] = useState(null);\n  const [generate, setGenerate] = useState(null);\n  useEffect(() => {\n    let titles = [\"BreakFast\", \"Lunch\", \"Dinner\"];\n    // let titles = [\"Lunch\", \"Dinner\"];\n    console.log(\"type\", props.type);\n    let type = \"Food\";\n    if (props.type !== \"food\") {\n      type = \"Grocery\";\n      titles = [\n        \"Fruits_Vegetables\",\n        \"Rice\",\n        \"Summer_Drinks_Beverages\",\n        \"soaps\",\n      ];\n    }\n    getMultiTitleItems(titles, type, (res) => {\n      let list = [];\n      res.forEach((item) => {\n        item.branch[props.location] !== undefined && list.push(item);\n      });\n      props.setItems(list);\n    });\n  }, [props.type]);\n\n  const onChangeHandler = (event) => {\n    let name = event.target.name;\n    let value = event.target.value;\n    if (name === \"manual\") {\n      setManual(value);\n      console.log(value);\n    } else if (name === \"gennbill\") {\n      setGenerate(value);\n    }\n  };\n\n  const addteleorder = () => {\n    addTelOrders(props.currentOrder, props.type, props.location, (isAdded) => {\n      if (isAdded) {\n        // db added\n        window.alert(\"Successfully Added!!!\");\n        removeOrder(props.currentOrder.orderId, props.type);\n      } else {\n        // error not adding\n        window.alert(\"Not Added... Try Again!!!\");\n      }\n    });\n  };\n\n  const generateBill = () => {\n    // console.log(\"hjlllll\");\n    // setGenerate(\"gennbill\");\n    // genrateBillOrder(props.currentOrder);\n    props.generateBill();\n    // if (props.type === \"food\") {\n    // let foodOrderList = [];\n    // localforage\n    //   .getItem(\"food-order\")\n    //   .then((value) => {\n    //     console.log(\"fOrde\", value);\n    //     if (value === null) {\n    //       // new order\n    //     }\n    //   })\n    //   .catch((e) => console.log(e));\n    // }\n    // localforage.setItem(\"food-order\", props.currentOrder);\n  };\n\n  const removeOrder = (orderId, type) => {\n    props.removeOrder(orderId, type);\n  };\n\n  const paidOrders = () => {\n    // console.log(\"hjlllll\");\n    billPaidOrder(props.currentOrder, props.type, props.location, (isAdded) => {\n      if (isAdded) {\n        window.alert(\"Successfully Added to local store!!!\");\n      } else {\n        // error not adding\n        window.alert(\"Not Added... Try Again!!!\");\n      }\n    });\n  };\n\n  return (\n    <div className=\"manual row\">\n      <div>\n        <input\n          type=\"radio\"\n          id=\"dineIn\"\n          name=\"manual\"\n          value=\"dineIn\"\n          onChange={onChangeHandler}\n        />\n        <label htmlFor=\"dineIn\">&nbsp;Dine-In</label>\n      </div>\n      <div style={{ marginRight: \"auto\", padding: \"0 5px\" }}>\n        <input\n          type=\"radio\"\n          id=\"telephone\"\n          name=\"manual\"\n          value=\"telephone\"\n          onChange={onChangeHandler}\n        />\n        <label htmlFor=\"telephone\">&nbsp;Telephone order</label>\n      </div>\n      <div className=\"col-12\"></div>\n\n      <div className=\"billno\">\n        <button\n          type=\"button\"\n          className=\"add\"\n          onClick={() => props.createOrder(manual)}\n          disabled={!manual}\n        >\n          New Order <b>+</b>\n        </button>\n        <h4>Ongoing Bills</h4>\n        <div className=\"scroll\">\n          {props.ongoingOrders.map((order) => {\n            return (\n              <div\n                key={order.orderId}\n                className=\"card\"\n                style={{ cursor: \"pointer\" }}\n                onClick={() => props.setCurrentOrder(order)}\n              >\n                <p className=\"bno\">{order.orderId}</p>\n                <p className=\"number\">{order.userDetails.phone}</p>\n                <p className=\"tq\">{order.noOfItems}</p>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"billdetails\">\n        <div\n          className=\"row\"\n          style={{ justifyContent: \"space-between\", alignItems: \"center\" }}\n        >\n          {/* {console.log(props.currentOrder)} */}\n          <p className=\"bno\">{props.currentOrder.orderId}</p>\n          <p className=\"text\">Bill Details</p>\n          {props.ongoingOrders.length > 0 && props.currentOrder.orderId !== \"\" && (\n            <>\n              <input\n                list=\"searchItem\"\n                name=\"searchItems\"\n                id=\"searchItems\"\n                autoComplete=\"off\"\n                placeholder=\"Type to search...\"\n                onChange={props.onChange}\n                style={{ outline: \"0\", cursor: \"pointer\" }}\n              />\n              <datalist id=\"searchItem\">\n                {props.items.map((item) => {\n                  return <option key={item.id} value={item.Name} />;\n                })}\n              </datalist>\n            </>\n          )}\n        </div>\n        <div className=\"row head\">\n          <p className=\"iname\">Item Name</p>\n          <p className=\"ino\">Item Size</p>\n          <p className=\"quantity\">Quantity</p>\n          <p className=\"rate\">Rate</p>\n          <p className=\"price\">Price</p>\n        </div>\n        <div className=\"scroll\">\n          {props.currentOrder.items.map((item, i) => {\n            let priceUi = (\n              <>\n                <p className=\"ino\">{item.itemQuantity}</p>\n                <input\n                  name=\"itemSize\"\n                  type=\"number\"\n                  className=\"quantity\"\n                  placeholder=\"0\"\n                  min=\"0\"\n                  value={item.itemSize}\n                  onChange={(e) => props.onChange(e, item)}\n                />\n                <p className=\"rate\">{item.itemPrice}</p>\n              </>\n            );\n            if (\n              // item.branch[props.location].actualPrice === -1 &&\n              item.branch[props.location].current_price === -1 &&\n              item.branch[props.location].length === undefined\n            ) {\n              priceUi = (\n                <>\n                  <p className=\"ino\">\n                    <select\n                      className=\"itemId\"\n                      name=\"itemQuantity\"\n                      value={item.itemQuantity}\n                      onChange={(e) => props.onChange(e, item)}\n                    >\n                      <option value=\"quarter\">Quarter</option>\n                      <option value=\"half\">Half</option>\n                      <option value=\"full\">Full</option>\n                    </select>\n                  </p>\n                  <input\n                    name=\"itemSize\"\n                    type=\"number\"\n                    className=\"quantity\"\n                    placeholder=\"0\"\n                    min=\"0\"\n                    value={item.itemSize}\n                    onChange={(e) => props.onChange(e, item)}\n                  />\n                  <p className=\"rate\">{item.itemPrice}</p>\n                </>\n              );\n            } else if (item.branch[props.location].length >= 0) {\n              priceUi = (\n                <>\n                  <p className=\"ino\">\n                    <select\n                      className=\"itemId\"\n                      name=\"itemQuantity\"\n                      value={item.itemQuantity}\n                      onChange={(e) => props.onChange(e, item)}\n                    >\n                      <option value=\"grams\">Grams</option>\n                      <option value=\"kilograms\">KiloGrams</option>\n                      <option value=\"litres\">Litres</option>\n                      <option value=\"kilolitres\">KiloLitres</option>\n                    </select>\n                  </p>\n                  <input\n                    name=\"itemSize\"\n                    type=\"number\"\n                    className=\"quantity\"\n                    placeholder=\"0\"\n                    min=\"0\"\n                    value={item.itemSize}\n                    onChange={(e) => props.onChange(e, item)}\n                  />\n                  <p className=\"rate\">{item.itemPrice}</p>\n                </>\n              );\n            }\n            return (\n              <div className=\"row item\" key={item.id}>\n                <p name=\"itemName\" className=\"iname\">\n                  {item.Name}\n                </p>\n                {priceUi}\n                {/* {console.log(\"itemsss\", item)} */}\n                <p className=\"price\">{item.itemSize * item.itemPrice}</p>\n                <i\n                  class=\"fa fa-minus-circle remove-item\"\n                  aria-hidden=\"true\"\n                  onClick={() => props.removeItem(item.id)}\n                ></i>\n              </div>\n            );\n          })}\n          {/* <div className=\"row item\">\n            <p className=\"ino\">243</p>\n            <input\n              type=\"text\"\n              className=\"iname\"\n              placeholder=\"Chicken Briyani\"\n            />\n            <input type=\"number\" className=\"quantity\" placeholder=\"0\" />\n            <p className=\"rate\">120</p>\n            <p className=\"price\">240</p>\n          </div> */}\n        </div>\n        {/* <button type=\"button\" className=\"add\">\n          +\n        </button> */}\n        <div className=\"footer row\">\n          <p className=\"iname\">Total</p>\n          <p className=\"quantity\">{props.currentOrder.noOfItems}</p>\n          <p className=\"rate\">=</p>\n          <p className=\"price\">{props.currentOrder.totalPrice}</p>\n        </div>\n      </div>\n      {props.currentOrder.type === \"dinein\" ? (\n        <>\n          <div className=\"billgenerate\">\n            <h4>Bill Status</h4>\n            <p className=\"bno\">\n              Order-Id:&ensp;<b>{props.currentOrder.orderId}</b>\n            </p>\n            <p className=\"number\">\n              Name:&ensp;\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={props.currentOrder.userDetails.userName}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"number\">\n              Phone:&ensp;\n              <input\n                type=\"tel\"\n                name=\"phone\"\n                size=\"15\"\n                value={props.currentOrder.userDetails.phone}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"address\">\n              Address:&ensp;\n              <textarea\n                name=\"address\"\n                size=\"15\"\n                value={props.currentOrder.userDetails.userAddress}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"tq\">\n              Total Quantity:&ensp;<b>{props.currentOrder.noOfItems}</b>\n            </p>\n            <p className=\"tp\">\n              Total Price:&ensp;<i className=\"fas fa-rupee\"></i>\n              <b>{props.currentOrder.totalPrice}</b>\n            </p>\n            <p className=\"tq\">\n              Mode Of\n              <br />\n              Payment:&ensp;\n              <select\n                name=\"paymentMode\"\n                value={props.currentOrder.payment.paymentMethod}\n                onChange={props.onChange}\n              >\n                <option value=\"cash\">Cash</option>\n                <option value=\"debit/credit\">Debit/Credit</option>\n                <option value=\"phonepe\">Phone-Pe</option>\n                <option value=\"gpay\">GPay</option>\n              </select>\n            </p>\n\n            {generate === \"gennbill\" ? (\n              <>\n                <button type=\"button\" value=\"paid\" onClick={paidOrders}>\n                  Paid\n                </button>\n              </>\n            ) : (\n              <>\n                <button\n                  type=\"button\"\n                  name=\"gennbill\"\n                  value=\"gennbill\"\n                  onClick={generateBill}\n                >\n                  Generate Bill\n                </button>\n                <br />\n                <button\n                  type=\"button\"\n                  name=\"gennbill\"\n                  value=\"gennbill\"\n                  onClick={() =>\n                    removeOrder(props.currentOrder.orderId, props.type)\n                  }\n                >\n                  Remove Order\n                </button>\n              </>\n            )}\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"billgenerate\">\n            <h4>Adding telephone orders</h4>\n            <p className=\"bno\">\n              Order-Id:&ensp;<b>{props.currentOrder.orderId}</b>\n            </p>\n            <p className=\"number\">\n              Name:&ensp;\n              <input\n                type=\"text\"\n                name=\"username\"\n                size=\"15\"\n                value={props.currentOrder.userDetails.userName}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"number\">\n              Phone:&ensp;\n              <input\n                type=\"tel\"\n                name=\"phone\"\n                size=\"15\"\n                value={props.currentOrder.userDetails.phone}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"address\">\n              Address:&ensp;\n              <textarea\n                name=\"address\"\n                size=\"15\"\n                value={props.currentOrder.userDetails.userAddress}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"tq\">\n              Total Quantity:&ensp;<b>{props.currentOrder.noOfItems}</b>\n            </p>\n            <p className=\"tp\">\n              Total Price:&ensp;<i className=\"fas fa-rupee\"></i>\n              <b>{props.currentOrder.totalPrice}</b>\n            </p>\n            <p className=\"tq\">\n              Mode Of\n              <br />\n              Payment:&ensp;\n              <select\n                name=\"paymentMode\"\n                value={props.currentOrder.payment.paymentMethod}\n                onChange={props.onChange}\n              >\n                <option value=\"cash\">Cash</option>\n                <option value=\"debit/credit\">Debit/Credit</option>\n                <option value=\"phonepe\">Phone-Pe</option>\n                <option value=\"gpay\">GPay</option>\n              </select>\n            </p>\n            <button type=\"button\" onClick={addteleorder}>\n              Move to preparing\n            </button>\n            <br />\n            <button\n              type=\"button\"\n              name=\"gennbill\"\n              value=\"gennbill\"\n              onClick={() =>\n                removeOrder(props.currentOrder.orderId, props.type)\n              }\n            >\n              Remove Order\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ManualBilling;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Switch, Route, NavLink, useHistory } from \"react-router-dom\";\n// import Orders from \"../components/Dashboard/Orders\";\nimport StockMaintainance from \"../components/Dashboard/StockMaintainance\";\nimport OrderMaintain from \"../components/Dashboard/OrderMaintain\";\nimport ManualBilling from \"../components/Manual/ManualBilling\";\nimport {\n  billPaidOrder,\n  getTodayOrders,\n  removeListener,\n  updateOrderStatus,\n} from \"../api/OrderDB\";\nimport AuthContext from \"../context/auth-context\";\n// import snackbarLink from \"../ui/Snackbar/SnackbarLink\";\nimport OrdersContext from \"../context/orders-context\";\n// import { onMessageListener, messaging } from \"../services/firebase\";\nimport { store } from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport \"animate.css/animate.min.css\";\nimport { getItem, getMultiTitleItems, setItem } from \"../api/ItemDB\";\nimport localForage from \"localforage\";\nimport localforage from \"localforage\";\nimport { db } from \"../services/firebase\";\n// import GUN from \"gun\";\n\nconst Dashboard = (props) => {\n  // const gun = GUN();\n  const authCtx = useContext(AuthContext);\n  const ordersContext = useContext(OrdersContext);\n  // const history = useHistory();\n  const [items, setItems] = useState([]);\n  const [type, setType] = useState(\"food\");\n  const [orders, setOrders] = useState({\n    allOrders: [],\n    newOrders: [],\n    preparingOrders: [],\n    onDeliveryOrders: [],\n    deliveredOrders: [],\n  });\n  const [outOfStockItems, setOutOfStockItems] = useState({\n    food: [],\n    grocery: [],\n  });\n  // for manual orders\n  const [manualBillNo, setManualBillNo] = useState({\n    telephoneBillNoFood: 0,\n    telephoneBillNoGrocery: 0,\n    manualBillNoFood: 0,\n    manualBillNoGrocery: 0,\n  });\n  const [ongoingOrders, setOngoingOrders] = useState({\n    food: [],\n    grocery: [],\n  });\n  const [currentOrder, setCurrentOrder] = useState({\n    food: {\n      actualPrice: 0,\n      cancelReason: \"\",\n      dBoyId: \"\",\n      deliveryCharge: 0,\n      discount: 0,\n      id: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      noOfItems: 0,\n      orderId: \"\",\n      items: [],\n      payment: {\n        isPaid: false,\n        paymentMethod: \"\",\n      },\n      status: \"\",\n      timestamp: \"\",\n      totalPrice: 0,\n      tax: 0,\n      type: \"dinein\",\n      userDetails: {\n        latitude: 0,\n        longitude: 0,\n        phone: \"\",\n        userAddress: \"\",\n        userId: \"\",\n        userName: \"\",\n      },\n      userid: \"\",\n    },\n    grocery: {\n      actualPrice: 0,\n      cancelReason: \"\",\n      dBoyId: \"\",\n      deliveryCharge: 0,\n      discount: 0,\n      id: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      noOfItems: 0,\n      orderId: \"\",\n      items: [],\n      payment: {\n        isPaid: false,\n        paymentMethod: \"\",\n      },\n      status: \"\",\n      timestamp: \"\",\n      totalPrice: 0,\n      tax: 0,\n      type: \"dinein\",\n      userDetails: {\n        latitude: 0,\n        longitude: 0,\n        phone: \"\",\n        userAddress: \"\",\n        userId: \"\",\n        userName: \"\",\n      },\n      userid: \"\",\n    },\n  });\n\n  navigator.serviceWorker.onmessage = (event) => {\n    // console.log(\"front\", event.data, event.data.messageType);\n    // console.log(\"front-history\", history.location);\n    let notification = event.data.notification;\n    let data = event.data.data;\n    if (data.type === \"food\") {\n      localForage\n        .getItem(\"outOfStockFood\")\n        .then((value) => {\n          if (value === null || value.length === 0) {\n            getItem(\n              data.category,\n              data.type,\n              data.orderId,\n              authCtx.user.location,\n              (item) => {\n                if (item === null) {\n                  console.log(\"In Stock\");\n                } else {\n                  console.log(\"Out Of Stock\");\n                  // add data local db\n                  setOutOfStockItems((prevState) => {\n                    let list = [...prevState.food, item];\n                    localForage.setItem(\"outOfStockFood\", list);\n                    return {\n                      ...prevState,\n                      food: list,\n                    };\n                  });\n                }\n              }\n            );\n          } else {\n            let index = value.findIndex((v) => {\n              return v.id === data.orderId;\n            });\n            if (index === -1) {\n              // if item is not there already\n              getItem(\n                data.category,\n                data.type,\n                data.orderId,\n                authCtx.user.location,\n                (item) => {\n                  if (item === null) {\n                    console.log(\"In Stock\");\n                  } else {\n                    console.log(\"Out Of Stock\");\n                    // add data local db\n                    setOutOfStockItems((prevState) => {\n                      let list = [...prevState.food, item];\n                      localForage.setItem(\"outOfStockFood\", list);\n                      return {\n                        ...prevState,\n                        food: list,\n                      };\n                    });\n                  }\n                }\n              );\n            }\n          }\n        })\n        .catch((e) => console.log(e));\n    } else {\n      localForage\n        .getItem(\"outOfStockGrocery\")\n        .then((value) => {\n          if (value === null) {\n            getItem(\n              data.category,\n              data.type,\n              data.orderId,\n              authCtx.user.location,\n              (item) => {\n                if (item === null) {\n                  console.log(\"In Stock\");\n                } else {\n                  console.log(\"Out Of Stock\");\n                  // add data local db\n                  setOutOfStockItems((prevState) => {\n                    let list = [...prevState.grocery, item];\n                    localForage.setItem(\"outOfStockGrocery\", list);\n                    return {\n                      ...prevState,\n                      grocery: list,\n                    };\n                  });\n                }\n              }\n            );\n          } else {\n            let index = value.findIndex((v) => {\n              return v.id === data.orderId;\n            });\n            if (index === -1) {\n              // if item is not there already\n              getItem(\n                data.category,\n                data.type,\n                data.orderId,\n                authCtx.user.location,\n                (item) => {\n                  if (item === null) {\n                    console.log(\"In Stock\");\n                  } else {\n                    console.log(\"Out Of Stock\");\n                    // add data local db\n                    setOutOfStockItems((prevState) => {\n                      let list = [...prevState.grocery, item];\n                      localForage.setItem(\"outOfStockGrocery\", list);\n                      return {\n                        ...prevState,\n                        grocery: list,\n                      };\n                    });\n                  }\n                }\n              );\n            }\n          }\n        })\n        .catch((e) => console.log(e));\n    }\n    if (event.data.messageType !== \"notification-clicked\") {\n      store.addNotification({\n        title: notification.title,\n        message: notification.body,\n        type: \"default\",\n        insert: \"top\",\n        container: \"bottom-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true,\n        },\n      });\n    }\n  };\n  // messaging.onMessage((payload) => console.log(\"payload\", payload));\n  // messaging.onBackgroundMessage((payload) => console.log(\"bac\", payload));\n\n  // onMessageListener()\n  //   .then((payload) => {\n  //     console.log(\"notificaion msg: \", payload.notification);\n  //   })\n  //   .catch((e) => console.log(e));\n\n  // useEffect(() => {\n  //   let foodList = [];\n  //   let groceryList = [];\n  //   localForage\n  //     .getItem(\"outOfStockFood\")\n  //     .then((value) => {\n  //       // console.log(\"outOfStockFood\", value);\n  //       if (value !== null) {\n  //         foodList = value;\n  //       }\n  //       localForage\n  //         .getItem(\"outOfStockGrocery\")\n  //         .then((value) => {\n  //           // console.log(\"outOfStockGrocery\", value);\n  //           if (value !== null) {\n  //             groceryList = value;\n  //           }\n  //           setOutOfStockItems({\n  //             food: foodList,\n  //             grocery: groceryList,\n  //           });\n  //         })\n  //         .catch((e) => console.log(e));\n  //     })\n  //     .catch((e) => console.log(e));\n\n  //   // console.log(\"foodList\", foodList);\n  //   // console.log(\"groceryList\", groceryList);\n  //   // get ongoingFoodOrders & ongoingGroceryOrders\n  //   localforage\n  //     .getItem(\"ongoingFoodOrders\")\n  //     .then((value) => {\n  //       if (value !== null) {\n  //         setOngoingOrders((prevState) => {\n  //           return {\n  //             ...prevState,\n  //             food: value,\n  //           };\n  //         });\n  //       }\n  //       localforage\n  //         .getItem(\"ongoingGroceryOrders\")\n  //         .then((value) => {\n  //           if (value !== null) {\n  //             setOngoingOrders((prevState) => {\n  //               return {\n  //                 ...prevState,\n  //                 grocery: value,\n  //               };\n  //             });\n  //           }\n  //         })\n  //         .catch((e) => console.log(e));\n  //     })\n  //     .catch((e) => console.log(e));\n  // }, []);\n\n  useEffect(() => {\n    console.log(\"useEffect [Dashboard.js] Orders\");\n    let user = authCtx.user;\n    var unsubscribe;\n    if (user !== null) {\n      let date = new Date();\n      let day = date.getDate();\n      if (day < 10) {\n        day = \"0\" + day;\n      }\n      let month = date.getMonth() + 1;\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n      let year = date.getFullYear();\n      date = day + \".\" + month + \".\" + year;\n\n      // getTodayOrders(date, type, user.location, (orderss, manualBillNo) => {\n      let ty = \"\";\n      if (type === \"food\") {\n        ty = \"FoodOrders\";\n        // date = \"02.11.2021\";\n      } else {\n        ty = \"GroceryOrders\";\n        // date = \"03.11.2021\";\n      }\n      let list = [];\n      unsubscribe = db\n        .collection(ty)\n        .doc(\"todayOrders\")\n        .collection(user.location)\n        .onSnapshot(\n          (docs) => {\n            docs.forEach((doc) => {\n              list.push(doc.data());\n            });\n            if (list.length === 0) {\n              setOrders(\"No Orders\");\n            } else {\n              console.log(\"orderss\", list);\n              let data = {\n                allOrders: [],\n                newOrders: [],\n                preparingOrders: [],\n                onDeliveryOrders: [],\n                deliveredOrders: [],\n              };\n\n              let statData = {\n                online: 0,\n                telephone: 0,\n                ready: 0,\n                cancelled: 0,\n              };\n              // allOrders\n              list.sort((a, b) => {\n                if (a.timestamp < b.timestamp) {\n                  return 1;\n                }\n                if (a.timestamp > b.timestamp) {\n                  return -1;\n                }\n                return 0;\n              });\n              data.allOrders = [...list];\n              // other orders\n              list.forEach((o) => {\n                if (o.status === \"booked\") {\n                  data.newOrders.push(o);\n                  // if (orders.allOrders.length !== 0) {\n                  //   console.log(\"orders snap\", orders.allOrders);\n                  //   let index = orders.allOrders.findIndex((ord) => {\n                  //     return o.orderId === ord.orderId;\n                  //   });\n                  //   if (index === -1) {\n                  //     // console.log(\"index\", index, o);\n                  //     snackbarLink(o, \"New Order\");\n                  //   }\n                  // }\n                } else if (o.status === \"preparing\") {\n                  data.preparingOrders.push(o);\n                  // } else if (o.status === \"ondelivery\") {\n                } else if (\n                  o.status === \"assigned\" ||\n                  o.status === \"ondelivery\"\n                ) {\n                  data.onDeliveryOrders.push(o);\n                  statData.ready++;\n                } else if (o.status === \"delivered\") {\n                  data.deliveredOrders.push(o);\n                }\n                if (o.type === \"online\") {\n                  statData.online++;\n                } else if (o.type === \"telephone\") {\n                  statData.telephone++;\n                }\n              });\n              setOrders((prevState) => {\n                return data;\n              });\n              ordersContext.setOrderData(statData);\n            }\n            // setOrders(list);\n            list = [];\n            // console.log(\"unsub\", unsubscribe);\n          },\n          (e) => console.log(e)\n        );\n    }\n    return () => {\n      if (unsubscribe instanceof Function) {\n        unsubscribe();\n      } else {\n        console.log(\"Not a function\");\n      }\n      // unsubscribe();\n      // removeListener();\n      console.log(\"cleanup for listener\");\n    };\n  }, [type, authCtx]);\n\n  const removeHandler = (id) => {\n    // console.log(\"remove\", id);\n    if (type === \"food\") {\n      setOutOfStockItems((prevState) => {\n        let list = [...prevState.food];\n        let index = list.findIndex((v) => v.id === id);\n        list.splice(index, 1);\n        localForage\n          .setItem(\"outOfStockFood\", list)\n          .then(() => console.log(\"food successfully updated!!!\"))\n          .catch((e) => console.log(e));\n        return {\n          ...prevState,\n          food: list,\n        };\n      });\n    } else {\n      setOutOfStockItems((prevState) => {\n        let list = [...prevState.grocery];\n        let index = list.findIndex((v) => v.id === id);\n        list.splice(index, 1);\n        localForage\n          .setItem(\"outOfStockGrocery\", list)\n          .then(() => console.log(\"grocery successfully updated!!!\"))\n          .catch((e) => console.log(e));\n        return {\n          ...prevState,\n          grocery: list,\n        };\n      });\n    }\n  };\n\n  // update outOfStock\n  const checkHandler = (item) => {\n    if (type === \"food\") {\n      setItem(item.category, type, item, authCtx.user.location, (isAdded) => {\n        if (isAdded) {\n          setOutOfStockItems((prevState) => {\n            let list = [...prevState.food];\n            let index = list.findIndex((v) => v.id === item.id);\n            list.splice(index, 1);\n            localForage\n              .setItem(\"outOfStockFood\", list)\n              .then(() => console.log(\"food successfully updated!!!\"))\n              .catch((e) => console.log(e));\n            return {\n              ...prevState,\n              food: list,\n            };\n          });\n        } else {\n          alert(\"Some error!!!\");\n        }\n      });\n    } else {\n      setItem(item.category, type, item, (isAdded) => {\n        if (isAdded) {\n          setOutOfStockItems((prevState) => {\n            let list = [...prevState.grocery];\n            let index = list.findIndex((v) => v.id === item.id);\n            list.splice(index, 1);\n            localForage\n              .setItem(\"outOfStockGrocery\", list)\n              .then(() => console.log(\"grocery successfully updated!!!\"))\n              .catch((e) => console.log(e));\n            return {\n              ...prevState,\n              grocery: list,\n            };\n          });\n        } else {\n          alert(\"Some error!!!\");\n        }\n      });\n    }\n  };\n\n  const createOrder = (manual) => {\n    // setManualBillNo((prevState) => {\n    //   if (type === \"food\") {\n    //     if (manual === \"dineIn\") {\n    //       return {\n    //         ...prevState,\n    //         // manualBillNoFood: prevState.manualBillNoFood + 1,\n    //         manualBillNoFood: new Date().getTime(),\n    //       };\n    //     } else {\n    //       return {\n    //         ...prevState,\n    //         // telephoneBillNoFood: prevState.telephoneBillNoFood + 1,\n    //         telephoneBillNoFood: new Date().getTime(),\n    //       };\n    //     }\n    //   } else {\n    //     if (manual === \"dineIn\") {\n    //       return {\n    //         ...prevState,\n    //         // manualBillNoGrocery: prevState.manualBillNoGrocery + 1,\n    //         manualBillNoGrocery: new Date().getTime(),\n    //       };\n    //     } else {\n    //       return {\n    //         ...prevState,\n    //         // telephoneBillNoGrocery: prevState.telephoneBillNoGrocery + 1,\n    //         telephoneBillNoGrocery: new Date().getTime(),\n    //       };\n    //     }\n    //   }\n    // });\n\n    let time = new Date().getTime();\n    if (type === \"food\") {\n      setOngoingOrders((prevState) => {\n        let list = [...prevState.food];\n        let newData = {\n          // orderId: \"FD\" + (manualBillNo.manualBillNoFood + 1);\n          actualPrice: 0,\n          cancelReason: \"\",\n          dBoyId: \"\",\n          deliveryCharge: 0,\n          discount: 0,\n          id: \"FD\" + time,\n          latitude: \"\",\n          longitude: \"\",\n          noOfItems: 0,\n          orderId: \"FD\" + time,\n          items: [],\n          payment: {\n            isPaid: true,\n            paymentMethod: \"cash\",\n          },\n          status: \"\",\n          timestamp: \"\",\n          totalPrice: 0,\n          tax: 0,\n          type: \"dinein\",\n          userDetails: {\n            latitude: 0,\n            longitude: 0,\n            phone: \"\",\n            userAddress: \"\",\n            userId: \"\",\n            userName: \"\",\n          },\n          userid: \"\",\n        };\n\n        if (manual === \"telephone\") {\n          newData = {\n            // orderId: \"FT\" + (manualBillNo.telephoneBillNoFood + 1),\n            actualPrice: 0,\n            cancelReason: \"\",\n            dBoyId: \"\",\n            deliveryCharge: 0,\n            discount: 0,\n            id: \"FT\" + time,\n            latitude: \"\",\n            longitude: \"\",\n            noOfItems: 0,\n            orderId: \"FT\" + time,\n            items: [],\n            payment: {\n              isPaid: false,\n              paymentMethod: \"cash\",\n            },\n            status: \"\",\n            timestamp: \"\",\n            totalPrice: 0,\n            tax: 0,\n            type: \"telephone\",\n            userDetails: {\n              latitude: 0,\n              longitude: 0,\n              phone: \"\",\n              userAddress: \"\",\n              userId: \"\",\n              userName: \"\",\n            },\n            userid: \"\",\n          };\n        }\n        localforage.setItem(\"ongoingFoodOrders\", [...list, newData]);\n        return {\n          ...prevState,\n          food: [...list, newData],\n        };\n      });\n    } else {\n      setOngoingOrders((prevState) => {\n        let list = [...prevState.grocery];\n        let newData = {\n          // orderId: \"GD\" + (manualBillNo.manualBillNoGrocery + 1),\n          actualPrice: 0,\n          cancelReason: \"\",\n          dBoyId: \"\",\n          deliveryCharge: 0,\n          discount: 0,\n          id: \"GD\" + time,\n          latitude: \"\",\n          longitude: \"\",\n          noOfItems: 0,\n          orderId: \"GD\" + time,\n          items: [],\n          payment: {\n            isPaid: true,\n            paymentMethod: \"cash\",\n          },\n          status: \"\",\n          timestamp: \"\",\n          totalPrice: 0,\n          tax: 0,\n          type: \"dinein\",\n          userDetails: {\n            latitude: 0,\n            longitude: 0,\n            phone: \"\",\n            userAddress: \"\",\n            userId: \"\",\n            userName: \"\",\n          },\n          userid: \"\",\n        };\n        if (manual === \"telephone\") {\n          newData = {\n            // orderId: \"GT\" + (manualBillNo.telephoneBillNoGrocery + 1),\n            actualPrice: 0,\n            cancelReason: \"\",\n            dBoyId: \"\",\n            deliveryCharge: 0,\n            discount: 0,\n            id: \"GT\" + time,\n            latitude: \"\",\n            longitude: \"\",\n            noOfItems: 0,\n            orderId: \"GT\" + time,\n            items: [],\n            payment: {\n              isPaid: false,\n              paymentMethod: \"cash\",\n            },\n            status: \"\",\n            timestamp: \"\",\n            totalPrice: 0,\n            tax: 0,\n            type: \"telephone\",\n            userDetails: {\n              latitude: 0,\n              longitude: 0,\n              phone: \"\",\n              userAddress: \"\",\n              userId: \"\",\n              userName: \"\",\n            },\n            userid: \"\",\n          };\n        }\n        localforage.setItem(\"ongoingGroceryOrders\", [...list, newData]);\n        return {\n          ...prevState,\n          grocery: [...list, newData],\n        };\n      });\n    }\n  };\n\n  const removeOrder = (orderId, type) => {\n    // console.log(\"order\", orderId, type);\n    setOngoingOrders((prevState) => {\n      if (type === \"food\") {\n        let listFood = [...prevState.food];\n        let index = listFood.findIndex((val) => val.orderId === orderId);\n        listFood.splice(index, 1);\n        localforage.setItem(\"ongoingFoodOrders\", [...listFood]);\n        return {\n          ...prevState,\n          food: [...listFood],\n        };\n      } else {\n        let listGrocery = [...prevState.grocery];\n        let index = listGrocery.findIndex((val) => val.orderId === orderId);\n        listGrocery.splice(index, 1);\n        localforage.setItem(\"ongoingGroceryOrders\", [...listGrocery]);\n        return {\n          ...prevState,\n          grocery: [...listGrocery],\n        };\n      }\n    });\n    setCurrentOrder({\n      food: {\n        actualPrice: 0,\n        cancelReason: \"\",\n        dBoyId: \"\",\n        deliveryCharge: 0,\n        discount: 0,\n        id: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        noOfItems: 0,\n        orderId: \"\",\n        items: [],\n        payment: {\n          isPaid: false,\n          paymentMethod: \"\",\n        },\n        status: \"\",\n        timestamp: \"\",\n        totalPrice: 0,\n        tax: 0,\n        type: \"dinein\",\n        userDetails: {\n          latitude: 0,\n          longitude: 0,\n          phone: \"\",\n          userAddress: \"\",\n          userId: \"\",\n          userName: \"\",\n        },\n        userid: \"\",\n      },\n      grocery: {\n        actualPrice: 0,\n        cancelReason: \"\",\n        dBoyId: \"\",\n        deliveryCharge: 0,\n        discount: 0,\n        id: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        noOfItems: 0,\n        orderId: \"\",\n        items: [],\n        payment: {\n          isPaid: false,\n          paymentMethod: \"\",\n        },\n        status: \"\",\n        timestamp: \"\",\n        totalPrice: 0,\n        tax: 0,\n        type: \"dinein\",\n        userDetails: {\n          latitude: 0,\n          longitude: 0,\n          phone: \"\",\n          userAddress: \"\",\n          userId: \"\",\n          userName: \"\",\n        },\n        userid: \"\",\n      },\n    });\n  };\n\n  const onChangeHandler = (e, item) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    let index = items.findIndex((i) => i.Name === value);\n    if (index !== -1) {\n      let item = items[index];\n      if (name === \"searchItems\") {\n        if (type === \"food\") {\n          setCurrentOrder((prevState) => {\n            let list = [...prevState.food.items];\n            console.log(\"change-food\", prevState);\n            let food = prevState.food;\n            // below two lines is to ensure that we only add unique items\n            let i = food.items.findIndex((i) => i.id === item.id);\n            // console.log(\"change\", item, props.location);\n            if (i === -1) {\n              let newItem = {\n                ...item,\n                // itemId: item.id,\n                // itemName: item.Name,\n                itemPrice: item.branch[authCtx.user.location].current_price,\n                itemSize: 1,\n                itemQuantity: 1,\n              };\n              // if (\n              //   item.branch[authCtx.user.location].actualPrice === -1 &&\n              //   item.branch[authCtx.user.location].currentPrice\n              // ) {\n              //   newItem = {\n              //     ...item,\n              //     itemPrice: item.branch[authCtx.user.location].cquarterPrice,\n              //     itemSize: 1,\n              //     itemQuantity: \"quarter\",\n              //   };\n              // }\n              food.totalPrice += newItem.itemPrice;\n              food.noOfItems = food.noOfItems + 1;\n              food.items = [...list, newItem];\n              localforage\n                .getItem(\"ongoingFoodOrders\")\n                .then((value) => {\n                  if (value === null) {\n                    let list = [];\n                    list.push(food);\n                    localforage.setItem(\"ongoingFoodOrders\", list);\n                  } else {\n                    // let list = [...value];\n                    let list = [];\n                    list.push(food);\n                    localforage.setItem(\"ongoingFoodOrders\", list);\n                  }\n                })\n                .catch((e) => console.log(e));\n              return {\n                ...prevState,\n                food: food,\n              };\n            } else {\n              alert(\"Already added that item!!!\");\n              food.items = [...list];\n              return {\n                ...prevState,\n                food: food,\n              };\n            }\n          });\n        } else {\n          // console.log(\"change-grocery\");\n          if (item.branch[authCtx.user.location] === undefined) {\n            alert(\"Not available in your location!!!\");\n          }\n          setCurrentOrder((prevState) => {\n            let list = [...prevState.grocery.items];\n            let grocery = prevState.grocery;\n            let i = grocery.items.findIndex((i) => i.id === item.id);\n            if (i === -1) {\n              let newItem = {\n                ...item,\n                // itemId: item.id,\n                // itemName: item.Name,\n                itemPrice: item.branch[authCtx.user.location].current_price,\n                itemSize: 1,\n                itemQuantity: 1,\n              };\n              // if (item[authCtx.user.location].price.length <= 0) {\n              //   newItem = {\n              //     ...item,\n              //     itemPrice: item[authCtx.user.location].price.cquarterPrice,\n              //     itemSize: 1,\n              //     itemQuantity: \"quarter\",\n              //   };\n              // }\n              grocery.totalPrice += newItem.itemPrice;\n              grocery.noOfItems = grocery.noOfItems + 1;\n              grocery.items = [...list, newItem];\n              return {\n                ...prevState,\n                grocery: grocery,\n              };\n            } else {\n              alert(\"Already added that item!!!\");\n              grocery.items = [...list];\n              return {\n                ...prevState,\n                grocery: grocery,\n              };\n            }\n          });\n        }\n        document.getElementById(\"searchItems\").value = \"\";\n      }\n    } else if (name === \"phone\" || name === \"username\" || name === \"address\") {\n      if (type === \"food\") {\n        setCurrentOrder((prevState) => {\n          let food = prevState.food;\n          if (name === \"phone\") {\n            food.userDetails.phone = value;\n          } else if (name === \"username\") {\n            food.userDetails.userName = value;\n          } else if (name === \"address\") {\n            food.userDetails.userAddress = value;\n          }\n          return {\n            ...prevState,\n            food: food,\n          };\n        });\n      } else {\n        setCurrentOrder((prevState) => {\n          let grocery = prevState.grocery;\n          if (name === \"phone\") {\n            grocery.userDetails.phone = value;\n          } else if (name === \"username\") {\n            grocery.userDetails.userName = value;\n          } else if (name === \"address\") {\n            grocery.userDetails.userAddress = value;\n          }\n          return {\n            ...prevState,\n            food: grocery,\n          };\n        });\n      }\n    } else if (name === \"paymentMode\") {\n      if (type === \"food\") {\n        setCurrentOrder((prevState) => {\n          let food = prevState.food;\n          food.payment.paymentMethod = value;\n          return {\n            ...prevState,\n            food: food,\n          };\n        });\n      } else {\n        setCurrentOrder((prevState) => {\n          let grocery = prevState.grocery;\n          grocery.payment.paymentMethod = value;\n          return {\n            ...prevState,\n            grocery: grocery,\n          };\n        });\n      }\n    } else if (name === \"itemSize\") {\n      // console.log(\"change-itemSize--\", currentOrder, item);\n      if (type === \"food\") {\n        setCurrentOrder((prevState) => {\n          let list = [...prevState.food.items];\n          let index = list.findIndex((l) => l.id === item.id);\n          let updatedItem = {\n            ...list[index],\n            itemSize: value,\n          };\n          list[index] = updatedItem;\n          let food = prevState.food;\n          food.items = [...list];\n          let sumPrice = 0;\n          let size = 0;\n          food.items.forEach((item) => {\n            sumPrice += item.itemPrice * item.itemSize;\n            size += parseInt(item.itemSize);\n          });\n          food.totalPrice = sumPrice;\n          food.noOfItems = size;\n          return {\n            ...prevState,\n            food: food,\n          };\n        });\n      } else {\n        setCurrentOrder((prevState) => {\n          let list = [...prevState.grocery.items];\n          let index = list.findIndex((l) => l.id === item.id);\n          let updatedItem = {\n            ...list[index],\n            itemSize: value,\n          };\n          list[index] = updatedItem;\n          let grocery = prevState.grocery;\n          grocery.items = [...list];\n          let sumPrice = 0;\n          let size = 0;\n          grocery.items.forEach((item) => {\n            sumPrice += item.itemPrice * item.itemSize;\n            size += parseInt(item.itemSize);\n          });\n          grocery.totalPrice = sumPrice;\n          grocery.noOfItems = size;\n          return {\n            ...prevState,\n            grocery: grocery,\n          };\n        });\n      }\n    } else if (name === \"itemQuantity\") {\n      // console.log(\"change-itemQuantity\", currentOrder, item);\n      if (type === \"food\") {\n        setCurrentOrder((prevState) => {\n          let list = [...prevState.food.items];\n          let index = list.findIndex((l) => l.id === item.id);\n          let price = item[authCtx.user.location].price.cquarterPrice;\n          if (value === \"half\") {\n            price = item[authCtx.user.location].price.chalfPrice;\n          } else if (value === \"full\") {\n            price = item[authCtx.user.location].price.cfullPrice;\n          }\n          let updatedItem = {\n            ...list[index],\n            itemQuantity: value,\n            itemPrice: price,\n          };\n          list[index] = updatedItem;\n          let food = prevState.food;\n          food.items = [...list];\n          let sumPrice = 0;\n          food.items.forEach((item) => {\n            sumPrice += item.itemPrice * item.itemSize;\n          });\n          food.totalPrice = sumPrice;\n          return {\n            ...prevState,\n            food: food,\n          };\n        });\n      } else {\n        console.log(\"No code yet for grocery, bcs it is different\");\n      }\n    }\n  };\n\n  const removeItem = (id) => {\n    // console.log(\"removeItem\", id);\n    if (type === \"food\") {\n      setCurrentOrder((prevState) => {\n        let list = [...prevState.food.items];\n        let index = list.findIndex((l) => l.id === id);\n        list.splice(index, 1);\n        let food = prevState.food;\n        food.noOfItems = food.noOfItems - 1;\n        food.items = [...list];\n        let sumPrice = 0;\n        let size = 0;\n        list.forEach((item) => {\n          sumPrice += item.itemPrice * item.itemSize;\n          size += parseInt(item.itemSize);\n        });\n        food.totalPrice = sumPrice;\n        food.noOfItems = size;\n        return {\n          ...prevState,\n          food: food,\n        };\n      });\n    } else {\n      // console.log(\"change-grocery\");\n      setCurrentOrder((prevState) => {\n        let list = [...prevState.grocery.items];\n        let index = list.findIndex((l) => l.id === id);\n        list.splice(index, 1);\n        let grocery = prevState.grocery;\n        grocery.noOfItems = grocery.noOfItems + 1;\n        grocery.items = [...list];\n        let sumPrice = 0;\n        let size = 0;\n        grocery.items.forEach((item) => {\n          sumPrice += item.itemPrice * item.itemSize;\n          size += parseInt(item.itemSize);\n        });\n        grocery.totalPrice = sumPrice;\n        grocery.noOfItems = size;\n        return {\n          ...prevState,\n          grocery: grocery,\n        };\n      });\n    }\n  };\n\n  const generateBill = () => {\n    if (type === \"food\") {\n      console.log(\"currentOrder\", currentOrder.food);\n      if (\n        currentOrder.food.totalPrice === 0 ||\n        currentOrder.food.noOfItems === 0\n      ) {\n        alert(\"Price or Item should not be 0(Zero)!!!\");\n      } else {\n        billPaidOrder(\n          currentOrder.food,\n          type,\n          authCtx.user.location,\n          (isAdded) => {\n            if (isAdded) {\n              // window.alert(\"Successfully Added to local store!!!\");\n              // for thermal printer && data added to backend\n              alert(\"Food Bill Generated for - \" + currentOrder.food.orderId);\n              removeOrder(currentOrder.food.orderId, type);\n            } else {\n              // error not adding\n              window.alert(\"Not Added... Try Again!!!\");\n            }\n          }\n        );\n      }\n    } else {\n      console.log(\"currentOrder-grocery\", currentOrder.grocery);\n      if (\n        currentOrder.food.totalPrice === 0 ||\n        currentOrder.food.noOfItems === 0\n      ) {\n        alert(\"Price or Item should not be 0(Zero)!!!\");\n      } else {\n        billPaidOrder(\n          currentOrder.grocery,\n          type,\n          authCtx.user.location,\n          (isAdded) => {\n            if (isAdded) {\n              // window.alert(\"Successfully Added to local store!!!\");\n              // for thermal printer && data added to backend\n              alert(\n                \"Grocery Bill Generated for - \" + currentOrder.grocery.orderId\n              );\n              removeOrder(currentOrder.grocery.orderId, type);\n            } else {\n              // error not adding\n              window.alert(\"Not Added... Try Again!!!\");\n            }\n          }\n        );\n      }\n    }\n  };\n\n  const sendNotificationToDeliveryUser = async (order, dGuy, status) => {\n    console.log(\"order\", order);\n    const FIREBASE_API_KEY =\n      \"AAAA_JouL7I:APA91bHU1dqei_StIKqJVED6WsQRD4JKUhauk2VvPy3KUtGOQ715PTmmE8yTK5cFfJvcs0EXsrVAO2YBEdIPYYzktL4FdNXTkf3TV8V6_keOr842VNuDiGfw3Ulv-rkDXzYeNo-_8Wul\";\n    const address =\n      \"TO: \" + order.userDetails?.userName ||\n      order.order_address.userName +\n        \", Address: \" +\n        order.userDetails?.userAddress ||\n      order.order_address.userAddress;\n    const message = {\n      registration_ids: [],\n      notification: {\n        title: \"New Order - \" + order.orderId,\n        body: address,\n        vibrate: 1,\n        sound: 1,\n        show_in_foreground: true,\n        priority: \"high\",\n        content_available: true,\n      },\n      data: {\n        title: \"New Order - \" + order.orderId,\n        body: address,\n        id: order.id,\n      },\n    };\n    message.registration_ids.push(dGuy.user_token);\n\n    let headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"key=\" + FIREBASE_API_KEY,\n    });\n\n    let response = await fetch(\"https://fcm.googleapis.com/fcm/send\", {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(message),\n    });\n    response = await response.json();\n    console.log(\"response\", response);\n    store.addNotification({\n      title: \"Notification Sent!!!\",\n      message: \"To Delivery User: \" + dGuy.user_username,\n      type: \"default\",\n      insert: \"top\",\n      container: \"bottom-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 5000,\n        onScreen: true,\n      },\n    });\n  };\n\n  // status change - preparing, assigned\n  const updateOrder = (order, status, dGuy) => {\n    updateOrderStatus(\n      type,\n      authCtx.user.location,\n      order,\n      status,\n      (isUpdated) => {\n        if (isUpdated) {\n          setOrders((prevState) => {\n            if (status === \"preparing\") {\n              let updatedOrder = {\n                ...order,\n                status: \"preparing\",\n              };\n              // all orders array\n              let allOrders = [...prevState.allOrders];\n              let allIndex = allOrders.findIndex((o) => o.id === order.id);\n              allOrders[allIndex] = updatedOrder;\n              // new Orders array\n              let newOrders = [...prevState.newOrders];\n              let newIndex = newOrders.findIndex((o) => o.id === order.id);\n              // delete from newOrders and push into preparingOrders\n              newOrders.splice(newIndex, 1);\n              let preparingOrders = [...prevState.preparingOrders];\n              preparingOrders.push(updatedOrder);\n              return {\n                ...prevState,\n                allOrders: allOrders,\n                newOrders: newOrders,\n                preparingOrders: preparingOrders,\n              };\n            } else if (status === \"assigned\") {\n              // send notification to delivery boy\n              sendNotificationToDeliveryUser(order, dGuy, \"assigned\");\n              // change delivery boy status to \"assigned\"\n              let updatedOrder = {\n                ...order,\n                status: \"assigned\",\n              };\n              // all orders array\n              let allOrders = [...prevState.allOrders];\n              let allIndex = allOrders.findIndex((o) => o.id === order.id);\n              allOrders[allIndex] = updatedOrder;\n\n              // new Orders array\n              let preparingOrders = [...prevState.preparingOrders];\n              let prepareIndex = preparingOrders.findIndex(\n                (o) => o.id === order.id\n              );\n              // delete from newOrders and push into preparingOrders\n              preparingOrders.splice(prepareIndex, 1);\n              let onDeliveryOrders = [...prevState.onDeliveryOrders];\n              onDeliveryOrders.push(updatedOrder);\n              return {\n                ...prevState,\n                allOrders: allOrders,\n                preparingOrders: preparingOrders,\n                onDeliveryOrders: onDeliveryOrders,\n              };\n            }\n          });\n        } else {\n          alert(\"Order Not Updated, Try Again!!!\");\n        }\n      }\n    );\n  };\n\n  const assignDeliveryUser = (order, user) => {\n    let data = {\n      ...order,\n      dBoyId: user.user_id,\n    };\n    // console.log(\"assignDeliveryUser\", data);\n    updateOrder(data, \"assigned\", user);\n  };\n\n  return (\n    <>\n      <div className=\"row headnav\">\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/allorder\">All Orders</NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/neworder\">New Arrivals</NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/preparing\">Preparing</NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/ondeliver\">On Delivery</NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/delivered\">Delivered</NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/manual\">Manual</NavLink>\n        </div>\n        <div className=\"dropdown\">\n          <select\n            onChange={(e) => {\n              // console.log(e.target.value);\n              setType(e.target.value);\n            }}\n          >\n            <option value=\"food\">Food</option>\n            <option value=\"grocery\">Grocery</option>\n          </select>\n        </div>\n        {/* {authCtx.user !== null && (\n          <StockMaintainance\n            items={\n              type === \"food\" ? outOfStockItems.food : outOfStockItems.grocery\n            }\n            location={authCtx.user.location}\n            type={type}\n            removeHandler={removeHandler}\n            checkHandler={checkHandler}\n          />\n        )} */}\n      </div>\n      <div>\n        <Switch>\n          <Route path=\"/home/dashboard/allorder\">\n            <OrderMaintain\n              orders={orders.allOrders}\n              updateOrderStatus={(order, status) => updateOrder(order, status)}\n              assignDeliveryUser={assignDeliveryUser}\n            />\n          </Route>\n          <Route path=\"/home/dashboard/neworder\">\n            <OrderMaintain\n              orders={orders.newOrders}\n              updateOrderStatus={(order, status) => {\n                updateOrderStatus(order, status);\n              }}\n            />\n          </Route>\n          <Route path=\"/home/dashboard/preparing\">\n            <OrderMaintain\n              orders={orders.preparingOrders}\n              assignDeliveryUser={assignDeliveryUser}\n            />\n          </Route>\n          <Route path=\"/home/dashboard/ondeliver\">\n            <OrderMaintain orders={orders.onDeliveryOrders} />\n          </Route>\n          <Route path=\"/home/dashboard/delivered\">\n            <OrderMaintain\n              orders={orders.deliveredOrders}\n              type={type}\n              location={authCtx.user !== null && authCtx.user.location}\n            />\n          </Route>\n          <Route path=\"/home/dashboard/manual\">\n            {authCtx.user !== null && (\n              <ManualBilling\n                removeOrder={removeOrder}\n                onChange={onChangeHandler}\n                items={items}\n                type={type}\n                setItems={(res) => setItems(res)}\n                ongoingOrders={\n                  type === \"food\" ? ongoingOrders.food : ongoingOrders.grocery\n                }\n                currentOrder={\n                  type === \"food\" ? currentOrder.food : currentOrder.grocery\n                }\n                generateBill={generateBill}\n                removeItem={removeItem}\n                location={authCtx.user.location}\n                setCurrentOrder={(order) => {\n                  // console.log(\"order\", ongoingOrders.food);\n                  if (type === \"food\") {\n                    setCurrentOrder((prevState) => {\n                      return {\n                        ...prevState,\n                        food: order,\n                      };\n                    });\n                  } else {\n                    setCurrentOrder((prevState) => {\n                      return {\n                        ...prevState,\n                        grocery: order,\n                      };\n                    });\n                  }\n                }}\n                createOrder={createOrder}\n              />\n            )}\n          </Route>\n        </Switch>\n        {/* <Switch>\n          <Route path=\"/home/dashboard/foodorder\">\n            <Orders type=\"food\" />\n          </Route>\n          <Route path=\"/home/dashboard/groceryorder\">\n            <Orders type=\"grocery\" />\n          </Route>\n        </Switch> */}\n        {/* <StockMaintainance /> */}\n      </div>\n      <div id=\"snackbar-container\"></div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Food = () => {\n  return (\n    <section>\n      <div className=\"row fooditem\">\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/menu.png\" alt=\"addnew\" />\n            <p className=\"title\">Add New</p>\n            <Link to=\"/home/fooditems/addnew\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/dish1.png\"\n              alt=\"breakfast\"\n            />\n            <p className=\"title\">Breakfast</p>\n            <Link\n              to=\"/home/fooditems/breakfast\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/dish.png\" alt=\"lunch\" />\n            <p className=\"title\">Lunch</p>\n            <Link to=\"/home/fooditems/lunch\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/hot.png\" alt=\"dinner\" />\n            <p className=\"title\">Dinner</p>\n            <Link to=\"/home/fooditems/dinner\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        {/* <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/roasted-chicken.png\"\n              alt=\"starters\"\n              width=\"200px\"\n            />\n            <p className=\"title\">Starters</p>\n            <Link\n              to=\"/home/fooditems/starters\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/canapes.png\"\n              alt=\"desserts\"\n            />\n            <p className=\"title\">Desserts</p>\n            <Link\n              to=\"/home/fooditems/desserts\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/fast-food1.png\"\n              // src=\"/loaders/24064-food-squeeze-with-burger-and-hot-dog.gif\"\n              alt=\"bigdeal\"\n            />\n            <p className=\"title\">Big Deal Offers</p>\n            <Link\n              to=\"/home/fooditems/bigdeal\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/drink.png\"\n              alt=\"freshjuice\"\n            />\n            <p className=\"title\">Fresh Juice</p>\n            <Link to=\"/home/fooditems/juice\" className=\"stretched-link\"></Link>\n          </div>\n        </div> */}\n      </div>\n    </section>\n  );\n};\n\nexport default Food;\n","import React, { useEffect, useState } from \"react\";\nimport Chart from \"chart.js/auto\";\n\nconst LineChart = (props) => {\n  // const [labels, setLabels] = useState(null);\n  // const [data, setData] = useState(null);\n  // const [config, setConfig] = useState(null);\n\n  useEffect(() => {\n    let labels = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n    let stat = props.stat;\n    if (props.filter.type === \"month\") {\n      // labels = [\"week1\", \"week2\", \"week3\", \"week4\"];\n      labels = [];\n      for (let i = 0; i < stat.onlineStat.length; i++) {\n        if (i < 9) {\n          labels.push(\"0\" + (i + 1));\n        } else {\n          labels.push(i + 1);\n        }\n      }\n    } else if (props.filter.type === \"day\") {\n      labels = [\n        \"6-8am\",\n        \"8-10am\",\n        \"10-11.50am\",\n        \"12-2pm\",\n        \"2-4pm\",\n        \"4-6pm\",\n        \"6-8pm\",\n        \"8-10pm\",\n        \"10-11.59pm\",\n        \"12-6am\"\n      ];\n    }\n    let data = {\n      labels: labels,\n      datasets: [\n        {\n          label: \"Online\",\n          data: stat.onlineStat,\n          fill: false,\n          borderColor: \"rgb(75, 192, 192)\",\n          tension: 0.1\n        },\n        {\n          label: \"DineIn\",\n          data: stat.dineInStat,\n          fill: false,\n          borderColor: \"tomato\",\n          tension: 0.1\n        }\n      ]\n    };\n    // setConfig();\n    let config = {\n      type: \"line\",\n      data: data,\n      options: {}\n    };\n\n    const chart = new Chart(document.getElementById(\"lineChart\"), config);\n    // when component unmounts\n    return () => {\n      chart.destroy();\n    };\n  }, [props.stat]);\n\n  // useEffect(() => {\n  //   const chart = new Chart(document.getElementById(\"lineChart\"), config);\n  //   // when component unmounts\n  //   return () => {\n  //     chart.destroy();\n  //   };\n  // }, []);\n\n  return (\n    <div className=\"lineChart\">\n      <h1>Orders - {props.filter.value}</h1>\n\n      <br />\n\n      <canvas id=\"lineChart\"></canvas>\n    </div>\n  );\n};\n\nexport default LineChart;\n","import React, { useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\n\nconst PieChart = (props) => {\n  useEffect(() => {\n    const labels = [\"Online\", \"Dine-In\"];\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: \"Revenue\",\n          data: [props.stat.onlineRevenue, props.stat.dineInRevenue],\n          backgroundColor: [\n            \"rgb(255, 99, 132)\",\n            \"rgb(54, 162, 235)\",\n            \"rgb(255, 205, 86)\"\n          ],\n          hoverOffset: 4\n        }\n      ]\n    };\n\n    const config = {\n      type: \"pie\",\n      data: data,\n      options: {}\n    };\n    const chart = new Chart(document.getElementById(\"pieChart\"), config);\n    // when component unmounts\n    return () => {\n      chart.destroy();\n    };\n  }, [props.stat]);\n\n  return (\n    <div className=\"piechart\">\n      <h1>Total Revenue</h1>\n      <br />\n      <canvas id=\"pieChart\"></canvas>\n    </div>\n  );\n};\n\nexport default PieChart;\n","import { useEffect, useState } from \"react\";\nimport \"./Tables.css\";\n\nconst Tables = (props) => {\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    setOrders(props.orders);\n  }, [props.orders]);\n\n  let ui = null;\n  if (orders.length === 0 || orders === \"empty\") {\n    ui = (\n      <tr>\n        <td style={{ textAlign: \"center\" }}>No Orders</td>\n      </tr>\n    );\n  } else {\n    ui = orders.map((order) => {\n      return (\n        <tr key={order.orderId}>\n          <td>{order.orderId}</td>\n          <td>\n            <p style={{ textTransform: \"capitalize\" }}>\n              {order.userDetails.userName}\n            </p>\n            <p>{order.userDetails.phone}</p>\n          </td>\n          <td>{order.userDetails.userAddress}</td>\n          <td>\n            {order.order_items.map((item) => {\n              return (\n                <p key={item.itemId}>\n                  {item.itemName} - {item.itemSize} - ₹{item.itemPrice}\n                </p>\n              );\n            })}\n          </td>\n          <td>₹{order.totalPrice}</td>\n          <td style={{ textTransform: \"capitalize\" }}>{order.status}</td>\n        </tr>\n      );\n    });\n  }\n\n  return (\n    <>\n      <table className=\"table table-bordered table-hover center\">\n        <thead>\n          <tr>\n            <th>Order Id</th>\n            <th>User</th>\n            <th>Address</th>\n            <th>Items Purchased</th>\n            <th>Amount</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>{ui}</tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Tables;\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nexport const ExportToExcel = ({ apiData, fileName }) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData, fileName) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      className=\"btn btn-primary\"\n      onClick={(e) => exportToCSV(apiData, fileName)}\n    >\n      Export for {fileName}\n    </button>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { getMonthOrders, getOrders, getYearOrders } from \"../../api/OrderDB\";\nimport LineChart from \"../../ui/Charts/LineChart\";\nimport PieChart from \"../../ui/Charts/PieChart\";\nimport Tables from \"../../ui/Tables/Tables\";\nimport AuthContext from \"../../context/auth-context\";\nimport { ExportToExcel } from \"../../helpers/ExportToExcel\";\n\nconst Orders = () => {\n  const authCtx = useContext(AuthContext);\n  const [filter, setFilter] = useState({\n    type: \"\",\n    value: \"\",\n    itemType: \"food\",\n  });\n  const [orders, setOrders] = useState(null);\n  const [stat, setStat] = useState(null);\n  const [showTable, setShowTable] = useState(false);\n\n  useEffect(() => {\n    if (authCtx.user !== null) {\n      let date = new Date();\n      setFilter({\n        type: \"day\",\n        value: date.toISOString().split(\"T\")[0],\n      });\n      let day = date.getDate();\n      if (day < 10) {\n        day = \"0\" + day;\n      }\n      let month = date.getMonth() + 1;\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n      let year = date.getFullYear();\n      date = day + \".\" + month + \".\" + year;\n      // document.getElementById(\"date\").valueAsDate = date;\n      getOrders(date, \"food\", authCtx.user.location, (orders, stat) => {\n        setShowTable(true);\n        setOrders(orders);\n        setStat(stat);\n      });\n    }\n  }, [authCtx.user]);\n\n  const onChangeHandler = (e) => {\n    // console.log(\"value\", e.target.value);\n    if (e.target.name === \"filter\") {\n      setFilter((prevState) => {\n        return {\n          ...prevState,\n          type: e.target.value,\n        };\n      });\n    } else if (e.target.name === \"itemType\") {\n      setFilter((prevState) => {\n        return {\n          ...prevState,\n          itemType: e.target.value,\n        };\n      });\n    } else {\n      setFilter((prevState) => {\n        return {\n          ...prevState,\n          value: e.target.value,\n        };\n      });\n    }\n  };\n\n  const onCheckHandler = () => {\n    console.log(\"check\", filter);\n    let type = filter.itemType;\n    let location = authCtx.user.location;\n    let emptyData = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    if (filter.type === \"month\") {\n      getMonthOrders(type, location, filter, (orders, stat) => {\n        // console.log(\"orders-stat-month\", orders, stat);\n        setShowTable(false);\n        setOrders(orders);\n        setStat(stat);\n      });\n    } else if (filter.type === \"year\") {\n      getYearOrders(type, location, filter, (orders, stat) => {\n        // console.log(\"orders-stat-year\", orders, stat);\n        setShowTable(false);\n        setOrders(orders);\n        if (stat === undefined) {\n          setStat(emptyData);\n        } else {\n          setStat(stat);\n        }\n      });\n    } else if (filter.type === \"day\") {\n      let date = filter.value.split(\"-\");\n      let year = date[0];\n      let month = date[1];\n      let day = date[2];\n      date = day + \".\" + month + \".\" + year;\n      // console.log(date);\n      // console.log(\"date\", date);\n      getOrders(date, type, authCtx.user.location, (orders, stat) => {\n        setShowTable(true);\n        setOrders(orders);\n        setStat(stat);\n      });\n    }\n  };\n\n  // const generateExcel = () => {};\n\n  let ui = null;\n  if (filter.type === \"year\") {\n    ui = (\n      <input\n        type=\"number\"\n        min=\"2018\"\n        max=\"\"\n        id=\"year\"\n        name=\"year\"\n        onChange={onChangeHandler}\n        value={filter.value}\n        autoComplete=\"off\"\n      />\n    );\n  } else if (filter.type === \"month\") {\n    ui = (\n      <input\n        type=\"month\"\n        id=\"month\"\n        name=\"month\"\n        onChange={onChangeHandler}\n        value={filter.value}\n      />\n    );\n  } else {\n    ui = (\n      <input\n        type=\"date\"\n        id=\"date\"\n        name=\"date\"\n        onChange={onChangeHandler}\n        value={filter.value}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className=\"row stats\">\n        <div className=\"col-6 line\">\n          {stat !== null && (\n            <LineChart labelName=\"test\" filter={filter} stat={stat} />\n          )}\n        </div>\n        <div className=\"col-4 pie\">\n          {stat !== null && <PieChart filter={filter} stat={stat} />}\n        </div>\n        <div className=\"col-2 calender\">\n          <div className=\"dropdown\">\n            <select\n              name=\"itemType\"\n              onChange={onChangeHandler}\n              value={filter.itemType}\n            >\n              <option value=\"food\">Food</option>\n              <option value=\"grocery\">Grocery</option>\n            </select>\n          </div>\n          <form>\n            <input\n              type=\"radio\"\n              name=\"filter\"\n              id=\"day\"\n              value=\"day\"\n              checked={filter.type === \"day\" ? true : false}\n              onChange={onChangeHandler}\n            />\n            <label htmlFor=\"day\">Day</label>\n            <br />\n            <input\n              type=\"radio\"\n              name=\"filter\"\n              id=\"month\"\n              value=\"month\"\n              checked={filter.type === \"month\" ? true : false}\n              onChange={onChangeHandler}\n            />\n            <label htmlFor=\"month\">Month</label>\n            <br />\n            <input\n              type=\"radio\"\n              name=\"filter\"\n              id=\"year\"\n              value=\"year\"\n              checked={filter.type === \"year\" ? true : false}\n              onChange={onChangeHandler}\n            />\n            <label htmlFor=\"year\">Year</label>\n            <br />\n            {ui}\n            <br />\n            <br />\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={onCheckHandler}\n            >\n              Check\n            </button>\n            {/* <button type=\"button\" className=\"btn btn-primary\">\n              Clear\n            </button> */}\n          </form>\n        </div>\n        <div className=\"col-12 export\">\n          {showTable ? (\n            orders !== null && (\n              <>\n                {orders.length === 0 || orders === \"empty\" ? (\n                  <h1>No Orders To Export</h1>\n                ) : (\n                  <div className=\"export-\">\n                    <ExportToExcel apiData={orders} fileName={filter.value} />\n                    <Tables orders={orders} />\n                  </div>\n                )}\n                {/* <ExportToExcel apiData={orders} fileName={filter.value} /> */}\n              </>\n            )\n          ) : (\n            <div>\n              {/* <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                onClick={generateExcel}\n              >\n                Generate Excel : {filter.value}\n              </button> */}\n              {orders !== null &&\n              (orders.length === 0 || orders === \"empty\") ? (\n                <h1>No Orders To Export</h1>\n              ) : (\n                <ExportToExcel apiData={orders} fileName={filter.value} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Orders;\n\n// useEffect(() => {\n// $(\"#yearPicker\").datetimepicker({\n//   format: \"YYYY\",\n//   viewMode: \"years\"\n// });\n// $(\".date-picker-year\").datepicker({\n//   changeYear: true,\n//   showButtonPanel: true,\n//   dateFormat: \"yy\",\n//   onClose: function (dateText, inst) {\n//     var year = $(\"#ui-datepicker-div .ui-datepicker-year :selected\").val();\n//     $(this).datepicker(\"setDate\", new Date(year, 1));\n//   }\n// });\n// $(\".date-picker-year\").focus(function () {\n//   $(\".ui-datepicker-month\").hide();\n// });\n// }, []);\n","import React, { useEffect, useState } from \"react\";\nimport \"./card.css\";\n\nconst Card = (props) => {\n  useEffect(() => {\n    let item = props.item;\n    let branch = item.branch[props.location];\n    console.log(\"item\", item, branch, props.location);\n  }, []);\n  let ui = null;\n  // console.log(\n  //   \"item-undefined\",\n  //   props.item[props.location][\"price\"][\"currentPrice\"]\n  // );\n  if (props.item.branch[props.location][\"current_price\"] !== undefined) {\n    ui = props.item.branch[props.location][\"current_price\"];\n  }\n\n  return (\n    <>\n      <div class=\"col-lg-3 col-md-4 col-sm-3\">\n        <div class=\"card\">\n          <div class=\"overlay\">{props.item.Type}</div>\n          <img src={props.item.image} alt={props.item.Name} />\n          <div class=\"card-body\">\n            <h3 class=\"card-title\">\n              {props.item.Name}\n              {/* {props.item.Name}<span>({props.item.Name})</span> */}\n            </h3>\n            <div\n              class=\"edit-option\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => props.updateItem(props.item)}\n            >\n              <i class=\"fa fa-pencil-square-o\"></i>\n            </div>\n            {/* <div\n              class=\"trash-option\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => props.deleteItem(props.item)}\n            >\n              <i class=\"fa fa-trash\"></i>\n            </div> */}\n            <p>Desc: {props.item.description}</p>\n            <p>\n              Style:&ensp;\n              <b style={{ fontSize: \"18px\", textTransform: \"uppercase\" }}>\n                {props.item.style}\n              </b>\n            </p>\n            <p class=\"time\" style={{ textTransform: \"capitalize\" }}>\n              {/* {props.item.category} */}\n              {props.item.Type}\n            </p>\n            {/* <p class=\"time\">Dinner</p> */}\n            <div class=\"row quantity\">\n              {/* <p class=\"quantity\">Qty Per Unit:&ensp;</p>\n              <b>{props.item[props.location][\"quantityPerUnit\"]}</b>&ensp;&emsp; */}\n              <p class=\"quantity\">Min Unit:&ensp;</p>\n              <b>{props.item.branch[props.location][\"unit\"]}</b>\n            </div>\n            {/* <form></form> */}\n\n            <hr />\n            {/* <p class=\"food-rating\">\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\n            </p> */}\n\n            <p class=\"price \">\n              <i class=\" fa fa-inr\" aria-hidden=\"true\"></i>\n              {/* {props.item[props.location][\"price\"][\"currentPrice\"] === -1\n                ? props.item[props.location][\"price\"][\"cquarterPrice\"] !== -1\n                : props.item[props.location][\"price\"][\"currentPrice\"]} */}\n              {ui}\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"../../reusable/Card/Card\";\n\nconst Food = () => {\n  return (\n    <section>\n      <div className=\"row fooditem\">\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/supermarket.png\"\n              alt=\"addnew\"\n            />\n            <p className=\"title\">Add New Item</p>\n            <Link\n              to=\"/home/grocery/addnewitem\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/rice1.png\" alt=\"addnew\" />\n            <p className=\"title\">Rice</p>\n            <Link to=\"/home/grocery/rice\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/harvest.png\" alt=\"addnew\" />\n            <p className=\"title\">Fruits/Vegetables</p>\n            <Link\n              to=\"/home/grocery/fruitsvegs\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        {/* <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/cannedfood.png\"\n              alt=\"addnew\"\n            />\n            <p className=\"title\">Canned goods</p>\n            <Link\n              to=\"/home/grocery/cannedgoods\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div> */}\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/personalcare.png\"\n              alt=\"addnew\"\n            />\n            <p className=\"title\">Soap's</p>\n            <Link to=\"/home/grocery/soaps\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/softdrink.png\"\n              alt=\"addnew\"\n            />\n            <p className=\"title\">\n              SummerDrinks/\n              <br />\n              Beverages\n            </p>\n            <Link\n              to=\"/home/grocery/summer-drinks-beverages\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/personalcare.png\"\n              alt=\"addnew\"\n            />\n            <p className=\"title\">Pharmacy</p>\n            <Link to=\"/home/grocery/pharmacy\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/rice1.png\" alt=\"addnew\" />\n            <p className=\"title\">Organics</p>\n            <Link to=\"/home/grocery/organics\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        {/* <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/basket.png\"\n              alt=\"breakfast\"\n            />\n            <p className=\"title\">Cleaners</p>\n            <Link to=\"/home/grocery/cleaners\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/grocerycart.png\"\n              alt=\"lunch\"\n            />\n            <p className=\"title\">Others</p>\n            <Link to=\"/home/grocery/others\" className=\"stretched-link\"></Link>\n          </div>\n        </div> */}\n      </div>\n    </section>\n  );\n};\n\nexport default Food;\n","const PreviewCard = (props) => {\n  return (\n    <div className=\"card\">\n      <div className=\"overlay\">\n        {props.item.foodType === \"\" ? null : props.item.foodType}\n      </div>\n      <div className=\"preview\">preview</div>\n      <img\n        className={props.item.img.url !== \"\" ? \"\" : \"card-img\"}\n        id=\"cardImg\"\n        src={\n          props.item.img.url === \"\" ? \"/images/tray.png\" : props.item.img.url\n        }\n        alt=\"item name\"\n      />\n      {/* <img\n        className=\"card-img\"\n        id=\"cardImg\"\n        src=\"/images/tray.png\"\n        alt=\"item name\"\n      /> */}\n      <div className=\"card-body\">\n        <p className=\"item-name\">\n          {props.item.name === \"\" ? \"Item Name\" : props.item.name}&nbsp;\n          <span>\n            ({props.item.altName === \"\" ? \"alternative\" : props.item.altName})\n          </span>\n        </p>\n        <p className=\"item-desc\">\n          &ensp;\n          {props.item.desc === \"\"\n            ? \"Contains a small description of the item\"\n            : props.item.desc}\n        </p>\n        <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\n          {props.item.category === \"\" ? null : props.item.category}\n        </p>\n        {/* <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\n          {props.item.foodType === \"\" ? null : props.item.foodType}\n        </p> */}\n        <p className=\"item-style\">\n          Style:&nbsp;\n          <b style={{ textTransform: \"uppercase\" }}>\n            {props.item.style === \"\" ? \"\" : props.item.style}\n          </b>\n        </p>\n        <p className=\"item-quantity\">\n          Quantity:&nbsp;\n          <b>{props.item.minimumUnit}</b>\n        </p>\n      </div>\n      <div className=\"card-footer\">\n        {/* <p className=\"ratings\">\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n        </p> */}\n        <p className=\"price\">\n          <i className=\"fas fa-rupee\"></i>&nbsp;\n          {props.price === \"normalPrice\"\n            ? props.item.currentPrice\n            : props.item.cfullPrice}\n        </p>\n        <p>\n          Discount Percentage:{\" \"}\n          {props.price === \"normalPrice\"\n            ? 100 -\n              (props.item.currentPrice / props.item.actualPrice) * 100 +\n              \"%\"\n            : 100 - (props.item.cfullPrice / props.item.fullPrice) * 100 + \"%\"}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PreviewCard;\n","import React from \"react\";\nimport PreviewCard from \"./PreviewCard\";\n\nconst AddNewForm = (props) => {\n  let ui = null;\n  if (props.price !== null) {\n    if (props.price === \"quantityPrice\") {\n      ui = (\n        <div className=\"col-12 optional\">\n          <p>\n            Pick the Quantity\n            {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\n          </p>\n          <div className=\"single-row\">\n            <input\n              type=\"checkbox\"\n              id=\"quarter\"\n              name=\"quantity\"\n              value=\"quarter\"\n              onChange={props.onChangeHandler}\n            />\n            <label htmlFor=\"quarter\" className=\"label\">\n              Quarter\n            </label>\n            <label htmlFor=\"quarterPrice\" className=\"price\">\n              Actual Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"quarterPrice\"\n              name=\"quarterPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.quarterPrice}\n            />\n            <label htmlFor=\"cquaterPrice\" className=\"price\">\n              Current Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"cquarterPrice\"\n              name=\"cquarterPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.cquarterPrice}\n            />\n          </div>\n          <div className=\"single-row\">\n            <input\n              type=\"checkbox\"\n              id=\"half\"\n              name=\"quantity\"\n              value=\"half\"\n              onChange={props.onChangeHandler}\n            />\n            <label htmlFor=\"half\" className=\"label\">\n              Half\n            </label>\n            <label htmlFor=\"halfPrice\" className=\"price\">\n              Actual Price\n            </label>\n\n            <input\n              type=\"number\"\n              id=\"halfPrice\"\n              name=\"halfPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.halfPrice}\n            />\n            <label htmlFor=\"chalfPrice\" className=\"price\">\n              Current Price\n            </label>\n\n            <input\n              type=\"number\"\n              id=\"chalfPrice\"\n              name=\"chalfPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.chalfPrice}\n            />\n          </div>\n\n          <div className=\"single-row\">\n            <input\n              type=\"checkbox\"\n              id=\"full\"\n              name=\"quantity\"\n              value=\"full\"\n              onChange={props.onChangeHandler}\n            />\n            <label htmlFor=\"full\" className=\"label\">\n              Full\n            </label>\n            <label htmlFor=\"fullPrice\" className=\"price\">\n              Actual Price\n            </label>\n\n            <input\n              type=\"number\"\n              id=\"fullPrice\"\n              name=\"fullPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.fullPrice}\n            />\n            <label htmlFor=\"cfullPrice\" className=\"price\">\n              Current Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"cfullPrice\"\n              name=\"cfullPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.cfullPrice}\n            />\n          </div>\n        </div>\n      );\n    } else if (props.price === \"normalPrice\") {\n      ui = (\n        <div className=\"col-12 price\">\n          {/* <p>Actual Price</p>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            type=\"number\"\n            id=\"actualPrice\"\n            name=\"actualPrice\"\n            style={{ marginRight: \"15px\" }}\n            min=\"0\"\n            onChange={props.onChangeHandler}\n            value={props.item.actualPrice}\n          /> */}\n          <p>Current Price</p>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            type=\"number\"\n            id=\"currentPrice\"\n            name=\"currentPrice\"\n            min=\"0\"\n            onChange={props.onChangeHandler}\n            value={props.item.currentPrice}\n          />\n        </div>\n      );\n    }\n  }\n\n  return (\n    <form onSubmit={props.draftHandler}>\n      <div className=\"row\">\n        <div className=\"col-md-8\">\n          <div className=\"card-data\">\n            <div className=\"row\">\n              <div className=\"col-sm-5\">\n                <div className=\"inner-row\">\n                  <label htmlFor=\"name\">Enter Product Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.name}\n                    required\n                    autoComplete=\"off\"\n                  />\n                </div>\n\n                <div className=\"inner-row\">\n                  <label htmlFor=\"productId\">\n                    Enter Product Id\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"productId\"\n                    name=\"productId\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.productId}\n                    required\n                    autoComplete=\"off\"\n                  />\n                </div>\n\n                <div className=\"inner-row\">\n                  <label htmlFor=\"desc\">Description</label>\n                  <textarea\n                    id=\"desc\"\n                    name=\"desc\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.desc}\n                    required\n                    autoComplete=\"off\"\n                  ></textarea>\n                </div>\n\n                <div className=\"inner-row\">\n                  <label htmlFor=\"img\">Upload the image</label>\n                  <input\n                    type=\"file\"\n                    id=\"img\"\n                    name=\"img\"\n                    onChange={props.onChangeHandler}\n                    required\n                  />\n                  <small>\n                    The preview of the image can be seen in the card\n                  </small>\n                </div>\n              </div>\n              <div className=\"col-sm-7\">\n                <div className=\"row\">\n                  <div className=\"col-md-4 check\">\n                    <p>Pick Category</p>\n                    <div className=\"single\">\n                      <input\n                        type=\"radio\"\n                        id=\"BreakFast\"\n                        value=\"BreakFast\"\n                        name=\"category\"\n                        onClick={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"BreakFast\">BreakFast</label>\n                    </div>\n                    <div className=\"single\">\n                      <input\n                        type=\"radio\"\n                        id=\"Lunch\"\n                        value=\"Lunch\"\n                        name=\"category\"\n                        onClick={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"Lunch\">Lunch</label>\n                    </div>\n                    <div className=\"single\">\n                      <input\n                        type=\"radio\"\n                        id=\"Dinner\"\n                        value=\"Dinner\"\n                        name=\"category\"\n                        onClick={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"dinner\">Dinner</label>\n                    </div>\n                  </div>\n                  {/* <div className=\"col-md-4 veg\">\n                    <p>Food Type</p>\n                    <input\n                      type=\"radio\"\n                      id=\"nonveg\"\n                      name=\"foodType\"\n                      value=\"non-veg\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"nonveg\">Non-Veg</label>\n\n                    <input\n                      type=\"radio\"\n                      id=\"veg\"\n                      name=\"foodType\"\n                      value=\"veg\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"veg\">Veg</label>\n                  </div> */}\n                  {/* <div className=\"col-md-4 style\">\n                    <p>Pick Style</p>\n                    <input\n                      type=\"radio\"\n                      id=\"southindian\"\n                      name=\"style\"\n                      value=\"southindian\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"southindian\">South Indian</label>\n\n                    <input\n                      type=\"radio\"\n                      id=\"chinese\"\n                      name=\"style\"\n                      value=\"chinese\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"chinese\">Chinese</label>\n                  </div> */}\n                  <div className=\"col-md-7\">\n                    <div className=\"unit\">\n                      <label htmlFor=\"actualUnit\">\n                        Total Unit:\n                        <br />\n                        {/* <small>(Optional)</small> */}\n                      </label>\n                      <input\n                        type=\"number\"\n                        id=\"actualUnit\"\n                        name=\"actualUnit\"\n                        min=\"1\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.actualUnit}\n                      />\n                    </div>\n                    {/* <div className=\"quantity\">\n                      <label htmlFor=\"unit\">Enter Minimum Unit:</label>\n                      <input\n                        type=\"number\"\n                        id=\"unit\"\n                        name=\"minimumUnit\"\n                        min=\"0\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.minimumUnit}\n                        required\n                      />\n                    </div>\n                    <div className=\"unit\">\n                      <label htmlFor=\"quantity\">\n                        Quantity Per Unit:\n                        <br />\n                      </label>\n                      <input\n                        type=\"number\"\n                        id=\"quantity\"\n                        name=\"quantityPerUnit\"\n                        min=\"1\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.quantityPerUnit}\n                        required\n                      />\n                    </div> */}\n                  </div>\n                  <div className=\"col-md-5 others\">\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"dealOfTheDay\"\n                        name=\"dealOfTheDay\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"dealOfTheDay\">Deal of the day</label>\n                    </div>\n                    {/* <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"onSale\"\n                        name=\"onSale\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"onSale\">On Sale</label>\n                    </div> */}\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"isProductAvailable\"\n                        name=\"isProductAvailable\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"isProductAvailable\">\n                        Product Available\n                      </label>\n                    </div>\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"bestSeller\"\n                        name=\"bestSeller\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"bestSeller\">Best Seller</label>\n                      {/* <label htmlFor=\"top\">Top Product</label> */}\n                    </div>\n                  </div>\n                  <div className=\"col-4\">\n                    <input\n                      type=\"radio\"\n                      id=\"normalPrice\"\n                      name=\"price\"\n                      value=\"normalPrice\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\n                  </div>\n                  {/* <div className=\"col-6\">\n                    <input\n                      type=\"radio\"\n                      id=\"quantityPrice\"\n                      name=\"price\"\n                      value=\"quantityPrice\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"quantityPrice\">\n                      &nbsp;Quantity Based Price\n                    </label>\n                  </div> */}\n                  {ui}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <PreviewCard item={props.item} price={props.price} />\n          <div className=\"button\">\n            <button type=\"submit\" className=\"submit-btn\">\n              Save\n            </button>\n            <button type=\"button\" className=\"submit-btn\">\n              Cancel\n            </button>\n            <button\n              type=\"reset\"\n              className=\"submit-btn\"\n              onClick={props.clearHandler}\n              // onClick={this.form.reset()}\n            >\n              Clear\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddNewForm;\n","import React from \"react\";\n// import { propTypes } from \"react-bootstrap/esm/Image\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst DeleteConfirmModal = (props) => {\n  return (\n    <Modal show={props.showModal} onHide={props.handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{props.body}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={props.handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default DeleteConfirmModal;\n","import React, { useState, useContext } from \"react\";\nimport AddNewForm from \"./AddNewForm\";\nimport $ from \"jquery\";\nimport { addItem } from \"../../../api/ItemDB\";\nimport AlertModal from \"../../../reusable/Modals/AlertModal\";\nimport AuthContext from \"../../../context/auth-context\";\nconst AddNew = (props) => {\n  const authCtx = useContext(AuthContext);\n  const [item, setItem] = useState({\n    id: \"\",\n    productId: \"\", // we generate it\n    name: \"\",\n    img: {\n      file: null,\n      url: \"\",\n    },\n    altName: \"\",\n    desc: \"\",\n    category: \"\", // breakfase, lunch, dinner\n    style: \"\", // southindian, northindian\n    foodType: \"\", // nonveg, veg\n    offer: 0, // actual price - offer price = current price\n    bestSeller: false,\n    currencyCode: 356, // 356 - INR\n    dealOfTheDay: false,\n    onSale: false,\n    minimumUnit: 0,\n    actualUnit: 0,\n    quantityPerUnit: 1,\n    isProductAvailable: false,\n    quaterPrice: 0,\n    halfPrice: 0,\n    fullPrice: 0,\n    cquaterPrice: 0,\n    chalfPrice: 0,\n    cfullPrice: 0,\n    actualPrice: 0,\n    currentPrice: 0, // doubt\n    // categories: [\"dhosa\"]\n    // foodAvailable: [\n    //   {\n    //     branch: \"vellore\",\n    //     minimumUnit: 0,\n    //     quantityPerUnit: 0,\n    //     isProductAvailable: false\n    //   }\n    // ],\n  });\n  const [price, setPrice] = useState(null);\n  const [alert, setAlert] = useState(null);\n\n  const onChangeHandler = (event) => {\n    console.log(\"event.name\", event.target.name, event.target.value);\n\n    // setChecked((prevState) => !prevState);\n\n    let value = event.target.value;\n    let ename = event.target.name;\n\n    if (ename === \"img\") {\n      value = event.target.files[0];\n      // console.log(\"url\", URL.createObjectURL(value));\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          img: {\n            file: value,\n            url: URL.createObjectURL(value),\n          },\n        };\n      });\n    } else if (\n      ename === \"dealOfTheDay\" ||\n      ename === \"onSale\" ||\n      ename === \"isProductAvailable\" ||\n      ename === \"bestSeller\"\n    ) {\n      setItem((prevState) => {\n        value = !prevState[event.target.name];\n        // console.log(event.target.name, value);\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    } else if (ename === \"price\") {\n      setPrice(value);\n    } else {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    }\n  };\n\n  const clearHandler = () => {\n    document.getElementById(\"img\").value = \"\";\n    $(\":checkbox\").prop(\"checked\", false);\n    $('input[name=\"category\"]').prop(\"checked\", false);\n    $('input[name=\"foodType\"]').prop(\"checked\", false);\n    $('input[name=\"style\"]').prop(\"checked\", false);\n    $('input[name=\"price\"]').prop(\"checked\", false);\n    setPrice(null);\n    setItem({\n      id: \"\",\n      productId: \"\", // we generate it\n      name: \"\",\n      img: {\n        file: null,\n        url: \"\",\n      },\n      altName: \"\",\n      desc: \"\",\n      category: \"\", // breakfase, lunch, dinner\n      style: \"\", // southindian, northindian\n      foodType: \"\", // nonveg, veg\n      offer: 0, // actual price - offer price = current price\n      bestSeller: false,\n      currencyCode: 356, // 356 - INR\n      dealOfTheDay: false,\n      onSale: false,\n      minimumUnit: 0,\n      actualUnit: 0,\n      quantityPerUnit: 1,\n      isProductAvailable: false,\n      quaterPrice: 0,\n      halfPrice: 0,\n      fullPrice: 0,\n      cquaterPrice: 0,\n      chalfPrice: 0,\n      cfullPrice: 0,\n      actualPrice: 0,\n      currentPrice: 0, // doubt\n      // categories: [\"dhosa\"]\n      // foodAvailable: [\n      //   {\n      //     branch: \"vellore\",\n      //     minimumUnit: 0,\n      //     quantityPerUnit: 0,\n      //     isProductAvailable: false\n      //   }\n      // ],\n    });\n  };\n\n  const draftHandler = (e) => {\n    e.preventDefault();\n    console.log(\"item\", item, price);\n    if (item.category === \"\") {\n      setAlert({\n        title: \"Missing Mandatory Fields\",\n        body: \"Select Category!!!\",\n        status: true,\n      });\n    }\n    // else if (item.foodType === \"\") {\n    //   setAlert({\n    //     title: \"Missing Mandatory Fields\",\n    //     body: \"Select FoodType!!!\",\n    //     status: true\n    //   });\n    // } else if (item.style === \"\") {\n    //   setAlert({\n    //     title: \"Missing Mandatory Fields\",\n    //     body: \"Select Style!!!\",\n    //     status: true\n    //   });\n    // }\n    else if (price === null) {\n      setAlert({\n        title: \"Missing Mandatory Fields\",\n        body: \"select normal price or quantity to proceed!!!\",\n        status: true,\n      });\n    } else {\n      addItem(item, price, props.type, authCtx, (isAdded) => {\n        if (isAdded) {\n          // db added\n          window.alert(\"Successfully Added!!!\");\n          clearHandler();\n        } else {\n          // error not adding\n          window.alert(\"Not Added... Try Again!!!\");\n        }\n      });\n    }\n  };\n\n  return (\n    <div class=\"add-new\">\n      {alert !== null && alert.status === true && (\n        <AlertModal\n          title={alert.title}\n          body={alert.body}\n          showModal={alert.status}\n          handleClose={() => setAlert(null)}\n        />\n      )}\n      <h2>Add one or more items</h2>\n      <div class=\"add-form\">\n        <AddNewForm\n          item={item}\n          onChangeHandler={onChangeHandler}\n          draftHandler={draftHandler}\n          clearHandler={clearHandler}\n          price={price}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AddNew;\n","const PreviewCard = (props) => {\n  return (\n    <div className=\"card\">\n      {/* <div className=\"overlay\">v</div> */}\n      <div className=\"overlay\">\n        {props.item.foodType === \"\" ? null : props.item.foodType}\n      </div>\n      <div className=\"preview\">preview</div>\n      <img\n        className={\n          props.item.img !== undefined && props.item.img.url !== \"\"\n            ? \"\"\n            : \"card-img\"\n        }\n        id=\"cardImg\"\n        src={\n          props.item.img !== undefined && props.item.img.url === \"\"\n            ? \"/images/tray.png\"\n            : props.item.img.url\n        }\n        alt=\"item name\"\n      />\n      {/* <img\n        className=\"card-img\"\n        id=\"cardImg\"\n        src=\"/images/tray.png\"\n        alt=\"item name\"\n      /> */}\n      <div className=\"card-body\">\n        <p className=\"item-name\">\n          {props.item.name === \"\" ? \"Item Name\" : props.item.name}&nbsp;\n          <span>\n            ({props.item.altName === \"\" ? \"alternative\" : props.item.altName})\n          </span>\n        </p>\n        <p className=\"item-desc\">\n          &ensp;\n          {props.item.desc === \"\"\n            ? \"Contains a small description of the item\"\n            : props.item.desc}\n        </p>\n        <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\n          {props.item.category === \"\" ? null : props.item.category}\n        </p>\n        {/* <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\n          {props.item.foodType === \"\" ? null : props.item.foodType}\n        </p> */}\n        {/* <p className=\"item-style\">\n          Style:&nbsp;\n          <b style={{ textTransform: \"uppercase\" }}>\n            {props.item.style === \"\" ? \"\" : props.item.style}\n          </b>\n        </p> */}\n        <p className=\"item-quantity\">\n          Quantity:&nbsp;\n          <b>{props.item.minimumUnit}</b>\n        </p>\n      </div>\n      <div className=\"card-footer\">\n        {/* <p className=\"ratings\">\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n        </p> */}\n        <p className=\"price\">\n          <i className=\"fas fa-rupee\"></i>&nbsp;\n          {props.price === \"normalPrice\"\n            ? props.item.currentPrice\n            : props.item.cfullPrice}\n        </p>\n        <p>\n          Discount Percentage:{\" \"}\n          {props.price === \"normalPrice\"\n            ? 100 -\n              (props.item.currentPrice / props.item.actualPrice) * 100 +\n              \"%\"\n            : 100 - (props.item.cfullPrice / props.item.fullPrice) * 100 + \"%\"}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PreviewCard;\n","import React, { useState } from \"react\";\nimport PreviewCard from \"./PreviewCard\";\n\nconst AddNewForm = (props) => {\n  // const [priceItem, setPriceItem] = useState([\n  //   {\n  //     id: 0,\n  //     quantity: 0,\n  //     units: \"\",\n  //     actualPrice: 0,\n  //     currentPrice: 0\n  //   }\n  // ]);\n\n  const addMoreQuantity = () => {\n    let prevState = props.item.priceItem;\n    let lastdata = prevState[prevState.length - 1];\n    let newId = lastdata.id + 1;\n    let data = {\n      id: newId,\n      quantity: 0,\n      units: \"\",\n      actualPrice: 0,\n      currentPrice: 0,\n    };\n    prevState = [...prevState, data];\n    // console.log(\"prevState\", prevState);\n    props.priceItemChangeHandler(prevState);\n  };\n\n  const reduceQuantity = () => {\n    let prevState = props.item.priceItem;\n    if (prevState.length > 1) {\n      prevState.pop();\n    }\n    // let lastdata = prevState[prevState.length - 1];\n    // let newId = lastdata.id + 1;\n    // let data = {\n    //   id: newId,\n    //   quantity: 0,\n    //   units: \"\",\n    //   actualPrice: 0,\n    //   currentPrice: 0\n    // };\n    prevState = [...prevState];\n    props.priceItemChangeHandler(prevState);\n  };\n\n  const onChangeHandler = (e, id) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    let list = [...props.item.priceItem];\n    let index = list.findIndex((item) => {\n      return item.id === id;\n    });\n    let data = \"\";\n    if (name === \"units\") {\n      data = {\n        ...list[index],\n        [name]: value,\n      };\n    } else {\n      data = {\n        ...list[index],\n        [name]: parseFloat(value),\n      };\n    }\n    list[index] = data;\n    // console.log(\"updated List\", list);\n    // props.setPriceItem(list);\n    props.priceItemChangeHandler(list);\n  };\n\n  let ui = null;\n  if (props.price !== null) {\n    if (props.price === \"quantityPrice\") {\n      ui = (\n        <div className=\"col-12 optional\">\n          <p>\n            Pick the Quantity\n            {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\n          </p>\n          {props.item.priceItem.map((price) => {\n            return (\n              <div key={price.id} className=\"single-row\">\n                <div className=\"pic\">\n                  <input\n                    className=\"pics\"\n                    type=\"number\"\n                    id=\"quantity\"\n                    name=\"quantity\"\n                    min=\"0\"\n                    max=\"1000\"\n                    value={price.quantity}\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                  />\n\n                  <select\n                    className=\"amo\"\n                    name=\"units\"\n                    id=\"units\"\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                    value={price.units}\n                  >\n                    <option value=\"\">--Select--</option>\n                    <option value=\"grams\">grams</option>\n                    <option value=\"kilograms\">kilograms</option>\n                    <option value=\"millilitres\">millilitres</option>\n                    <option value=\"litres\">litres</option>\n                  </select>\n                </div>\n                <div>\n                  <label htmlFor=\"actualPrice\" className=\"price\">\n                    Actual Price&nbsp;\n                  </label>\n                  <i className=\"fas fa-rupee\"></i>\n                  <input\n                    type=\"number\"\n                    id=\"actualPrice\"\n                    name=\"actualPrice\"\n                    min=\"0\"\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                    value={price.actualPrice}\n                  />\n                  <label htmlFor=\"currentPrice\" className=\"price\">\n                    Current Price&nbsp;\n                  </label>\n                  <i className=\"fas fa-rupee\"></i>\n                  <input\n                    type=\"number\"\n                    id=\"currentPrice\"\n                    name=\"currentPrice\"\n                    min=\"0\"\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                    value={price.currentPrice}\n                  />\n                </div>\n              </div>\n            );\n          })}\n\n          <button type=\"button\" onClick={addMoreQuantity}>\n            <i class=\"fas fa-plus-circle\"></i>\n          </button>\n          <button type=\"button\" onClick={reduceQuantity}>\n            <i class=\"fas fa-minus-circle\"></i>\n          </button>\n          {/* <div className=\"single-row\">\n            <input\n              type=\"checkbox\"\n              id=\"half\"\n              name=\"quantity\"\n              value=\"half\"\n              onChange={props.onChangeHandler}\n            />\n            <label htmlFor=\"half\" className=\"label\">\n              Half\n            </label>\n            <label htmlFor=\"halfPrice\" className=\"price\">\n              Actual Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"halfPrice\"\n              name=\"halfPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.halfPrice}\n            />\n            <label htmlFor=\"chalfPrice\" className=\"price\">\n              Current Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"chalfPrice\"\n              name=\"chalfPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.chalfPrice}\n            />\n          </div>\n\n          <div className=\"single-row\">\n            <input\n              type=\"checkbox\"\n              id=\"full\"\n              name=\"quantity\"\n              value=\"full\"\n              onChange={props.onChangeHandler}\n            />\n            <label htmlFor=\"full\" className=\"label\">\n              Full\n            </label>\n            <label htmlFor=\"fullPrice\" className=\"price\">\n              Actual Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"fullPrice\"\n              name=\"fullPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.fullPrice}\n            />\n            <label htmlFor=\"cfullPrice\" className=\"price\">\n              Current Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"cfullPrice\"\n              name=\"cfullPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.cfullPrice}\n            />\n          </div> */}\n        </div>\n      );\n    } else if (props.price === \"normalPrice\") {\n      ui = (\n        <div className=\"col-12 price\">\n          {/* <p>Actual Price</p>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            type=\"number\"\n            id=\"actualPrice\"\n            name=\"actualPrice\"\n            style={{ marginRight: \"15px\" }}\n            min=\"0\"\n            onChange={props.onChangeHandler}\n            value={props.item.priceItem.actualPrice}\n          /> */}\n          <p>Current Price</p>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            type=\"number\"\n            id=\"currentPrice\"\n            name=\"currentPrice\"\n            min=\"0\"\n            onChange={props.onChangeHandler}\n            value={props.item.currentPrice}\n          />\n        </div>\n      );\n    }\n  }\n\n  return (\n    <form onSubmit={props.draftHandler}>\n      <div className=\"row\">\n        <div className=\"col-md-8\">\n          <div className=\"card-data\">\n            <div className=\"row\">\n              <div className=\"col-sm-5\">\n                <div className=\"inner-row\">\n                  <label htmlFor=\"name\">Enter Product Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.name}\n                    required\n                    autoComplete=\"off\"\n                  />\n                </div>\n\n                {/* <div className=\"inner-row\">\n                  <label htmlFor=\"altName\">\n                    Enter Brand Name<small>&nbsp;(optional)</small>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"altName\"\n                    name=\"altName\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.altName}\n                    required\n                    autoComplete=\"off\"\n                  />\n                </div> */}\n                <div className=\"inner-row\">\n                  <label htmlFor=\"altName\">Enter Product Id</label>\n                  <input\n                    type=\"text\"\n                    id=\"productId\"\n                    name=\"productId\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.productId}\n                    required\n                    autoComplete=\"off\"\n                  />\n                </div>\n\n                <div className=\"inner-row\">\n                  <label htmlFor=\"desc\">Description</label>\n                  <textarea\n                    id=\"desc\"\n                    name=\"desc\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.desc}\n                    required\n                    autoComplete=\"off\"\n                  ></textarea>\n                </div>\n\n                <div className=\"inner-row\">\n                  <label htmlFor=\"img\">Upload the image</label>\n                  <input\n                    type=\"file\"\n                    id=\"img\"\n                    name=\"img\"\n                    onChange={props.onChangeHandler}\n                    required\n                  />\n                  <small>\n                    The preview of the image can be seen in the card\n                  </small>\n                </div>\n              </div>\n              <div className=\"col-sm-7\">\n                <div className=\"row\">\n                  <div className=\"col-md-8 check\">\n                    <p>Pick Category</p>\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"Fruits_Vegetables\"\n                            value=\"Fruits_Vegetables\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"Fruits_Vegetables\">\n                            Fruits_Vegetables\n                          </label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"Rice\"\n                            value=\"Rice\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"Rice\">Rice</label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"Summer_Drinks_Beverages\"\n                            value=\"Summer_Drinks_Beverages\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"Summer_Drinks_Beverages\">\n                            Summer_Drinks_Beverages\n                          </label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"soaps\"\n                            value=\"soaps\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"soaps\">Soaps</label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"Pharmacy\"\n                            value=\"Pharmacy\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"Pharmacy\">Pharmacy</label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"Organics\"\n                            value=\"Organics\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"Organics\">Organics</label>\n                        </div>\n                      </div>\n                      {/* <div className=\"col-md-6\">\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"personalCare\"\n                            value=\"personalCare\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"personalCare\">Personal Care</label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"cleaners\"\n                            value=\"cleaners\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"cleaners\">Cleaners</label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"others\"\n                            value=\"others\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"others\">Others</label>\n                        </div>\n                      </div> */}\n                    </div>\n                  </div>\n                  {/* <div className=\"col-md-4 veg\">\n                    <p>Food Type</p>\n                    <input\n                      type=\"radio\"\n                      id=\"nonveg\"\n                      name=\"foodType\"\n                      value=\"non-veg\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"nonveg\">Non-Veg</label>\n\n                    <input\n                      type=\"radio\"\n                      id=\"veg\"\n                      name=\"foodType\"\n                      value=\"veg\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"veg\">Veg</label>\n                  </div> */}\n                  <div className=\"col-md-7\">\n                    <div className=\"unit\">\n                      <label htmlFor=\"actualUnit\">Total Unit:</label>\n                      <input\n                        type=\"number\"\n                        id=\"actualUnit\"\n                        name=\"actualUnit\"\n                        min=\"0\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.actualUnit}\n                        required\n                      />\n                    </div>\n                    {/* <div className=\"quantity\">\n                      <label htmlFor=\"unit\">Enter Minimum Unit:</label>\n                      <input\n                        type=\"number\"\n                        id=\"unit\"\n                        name=\"minimumUnit\"\n                        min=\"0\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.minimumUnit}\n                        required\n                      />\n                    </div>\n                    <div className=\"unit\">\n                      <label htmlFor=\"quantity\">\n                        Quantity Per Unit:\n                        <br />\n                        <small>(Optional)</small>\n                      </label>\n                      <input\n                        type=\"number\"\n                        id=\"quantity\"\n                        name=\"quantityPerUnit\"\n                        min=\"1\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.quantityPerUnit}\n                      />\n                    </div> */}\n                  </div>\n                  <div className=\"col-md-5 others\">\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"dealOfTheDay\"\n                        name=\"dealOfTheDay\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"dealOfTheDay\">Deal of the day</label>\n                    </div>\n                    {/* <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"onSale\"\n                        name=\"onSale\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"onSale\">On Sale</label>\n                    </div> */}\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"isProductAvailable\"\n                        name=\"isProductAvailable\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"isProductAvailable\">\n                        Product Available\n                      </label>\n                    </div>\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"bestSeller\"\n                        name=\"bestSeller\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"bestSeller\">Best Seller</label>\n                      {/* <label htmlFor=\"top\">Top Product</label> */}\n                    </div>\n                  </div>\n                  <div className=\"col-4\">\n                    <input\n                      type=\"radio\"\n                      id=\"normalPrice\"\n                      name=\"price\"\n                      value=\"normalPrice\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\n                  </div>\n                  {/* <div className=\"col-6\">\n                    <input\n                      type=\"radio\"\n                      id=\"quantityPrice\"\n                      name=\"price\"\n                      value=\"quantityPrice\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"quantityPrice\">\n                      &nbsp;Quantity Based Price\n                    </label>\n                  </div> */}\n                  {/* <div className=\"col-12 price\">\n                    <p>Actual Price</p>\n                    <i className=\"fas fa-rupee\"></i>\n                    <input\n                      type=\"number\"\n                      id=\"actualPrice\"\n                      name=\"actualPrice\"\n                      style={{ marginRight: \"15px\" }}\n                      min=\"0\"\n                      onChange={props.onChangeHandler}\n                      value={props.item.actualPrice}\n                    />\n                    <p>Current Price</p>\n                    <i className=\"fas fa-rupee\"></i>\n                    <input\n                      type=\"number\"\n                      id=\"currentPrice\"\n                      name=\"currentPrice\"\n                      min=\"0\"\n                      onChange={props.onChangeHandler}\n                      value={props.item.currentPrice}\n                    />\n                  </div> */}\n                  {ui}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <PreviewCard item={props.item} price={props.price} />\n          <div className=\"button\">\n            <button type=\"submit\" className=\"submit-btn\">\n              Save\n            </button>\n            <button type=\"button\" className=\"submit-btn\">\n              Cancel\n            </button>\n            <button\n              type=\"reset\"\n              className=\"submit-btn\"\n              onClick={props.clearHandler}\n              // onClick={this.form.reset()}\n            >\n              Clear\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddNewForm;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport AddNewForm from \"./AddNewForm\";\nimport $ from \"jquery\";\nimport { addItem } from \"../../../api/ItemDB\";\nimport AlertModal from \"../../../reusable/Modals/AlertModal\";\nimport AuthContext from \"../../../context/auth-context\";\n\nconst AddNewItem = (props) => {\n  const authCtx = useContext(AuthContext);\n  const [item, setItem] = useState({\n    id: \"\",\n    productId: \"\", // we generate it\n    name: \"\",\n    img: {\n      file: null,\n      url: \"\",\n    },\n    // altName: \"\", // brand name\n    desc: \"\",\n    category: \"\", // breakfase, lunch, dinner\n    // style: \"\",\n    foodType: \"\", // nonveg, veg\n    offer: 0, // actual price - offer price = current price\n    bestSeller: false,\n    currencyCode: 356, // 356 - INR\n    dealOfTheDay: false,\n    onSale: false,\n    minimumUnit: 0,\n    actualUnit: 0,\n    quantityPerUnit: 1,\n    isProductAvailable: false,\n    priceItem: [\n      {\n        id: 0,\n        quantity: 0,\n        units: \"\",\n        actualPrice: 0,\n        currentPrice: 0,\n      },\n    ],\n    actualPrice: 0,\n    currentPrice: 0, // doubt\n    // categories: [\"dhosa\"]\n    // foodAvailable: [\n    //   {\n    //     branch: \"vellore\",\n    //     minimumUnit: 0,\n    //     quantityPerUnit: 0,\n    //     isProductAvailable: false\n    //   }\n    // ],\n  });\n  const [price, setPrice] = useState(null);\n  const [alert, setAlert] = useState(null);\n  // const [priceChoice, setPriceChoice] = useState();\n  // useEffect(() => {\n  //   if (price === \"normalPrice\") {\n  //     // console.log(\"normalpyy\");\n\n  //     setItem((prevState) => {\n  //       return {\n  //         ...prevState,\n  //         priceItem: {\n  //           actualPrice: 0,\n  //           currentPrice: 0\n  //         }\n  //       };\n  //     });\n  //   } else {\n  //     // console.log(\"dvgfdihbkvdjk\");\n\n  //     setItem((prevState) => {\n  //       return {\n  //         ...prevState,\n  //         priceItem: [\n  //           {\n  //             id: 0,\n  //             quantity: 0,\n  //             units: \"\",\n  //             actualPrice: 0,\n  //             currentPrice: 0\n  //           }\n  //         ]\n  //       };\n  //     });\n  //   }\n  // }, [price]);\n\n  const onChangeHandler = (event) => {\n    console.log(\"event.name\", event.target.name, event.target.value);\n\n    // setChecked((prevState) => !prevState);\n\n    let value = event.target.value;\n    let ename = event.target.name;\n\n    if (ename === \"img\") {\n      value = event.target.files[0];\n      // console.log(\"url\", URL.createObjectURL(value));\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          img: {\n            file: value,\n            url: URL.createObjectURL(value),\n          },\n        };\n      });\n    } else if (\n      ename === \"dealOfTheDay\" ||\n      ename === \"onSale\" ||\n      ename === \"isProductAvailable\" ||\n      ename === \"bestSeller\"\n    ) {\n      setItem((prevState) => {\n        value = !prevState[event.target.name];\n        // console.log(event.target.name, value);\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    } else if (ename === \"price\") {\n      setPrice(value);\n      if (value === \"normalPrice\") {\n        setItem((prevState) => {\n          return {\n            ...prevState,\n            priceItem: {\n              actualPrice: 0,\n              currentPrice: 0,\n            },\n          };\n        });\n      } else {\n        setItem((prevState) => {\n          return {\n            ...prevState,\n            priceItem: [\n              {\n                id: 0,\n                quantity: 0,\n                units: \"\",\n                actualPrice: 0,\n                currentPrice: 0,\n              },\n            ],\n          };\n        });\n      }\n    } else if (ename === \"actualPrice\") {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          priceItem: {\n            ...prevState.priceItem,\n            actualPrice: value,\n          },\n        };\n      });\n    } else if (ename === \"currentPrice\") {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          // priceItem: {\n          //   ...prevState.priceItem,\n          //   currentPrice: value,\n          // },\n          [event.target.name]: value,\n        };\n      });\n    } else {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    }\n  };\n\n  const clearHandler = () => {\n    document.getElementById(\"img\").value = \"\";\n    $(\":checkbox\").prop(\"checked\", false);\n    $('input[name=\"category\"]').prop(\"checked\", false);\n    $('input[name=\"foodType\"]').prop(\"checked\", false);\n    $('input[name=\"style\"]').prop(\"checked\", false);\n    $('input[name=\"price\"]').prop(\"checked\", false);\n    setPrice(null);\n    setItem({\n      id: \"\",\n      productId: \"\", // we generate it\n      name: \"\",\n      img: {\n        file: null,\n        url: \"\",\n      },\n      // altName: \"\", // brand name\n      desc: \"\",\n      category: \"\", // breakfase, lunch, dinner\n      // style: \"\",\n      foodType: \"\", // nonveg, veg\n      offer: 0, // actual price - offer price = current price\n      bestSeller: false,\n      currencyCode: 356, // 356 - INR\n      dealOfTheDay: false,\n      onSale: false,\n      minimumUnit: 0,\n      actualUnit: 0,\n      quantityPerUnit: 1,\n      isProductAvailable: false,\n      priceItem: [\n        {\n          id: 0,\n          quantity: 0,\n          units: \"\",\n          actualPrice: 0,\n          currentPrice: 0,\n        },\n      ],\n      actualPrice: 0,\n      currentPrice: 0, // doubt\n      // categories: [\"dhosa\"]\n      // foodAvailable: [\n      //   {\n      //     branch: \"vellore\",\n      //     minimumUnit: 0,\n      //     quantityPerUnit: 0,\n      //     isProductAvailable: false\n      //   }\n      // ],\n    });\n  };\n\n  const draftHandler = (e) => {\n    console.log(\"drafthandler\");\n    e.preventDefault();\n    console.log(\"item\", item, price);\n    if (item.category === \"\") {\n      setAlert({\n        title: \"Missing Mandatory Fields\",\n        body: \"Select Category!!!\",\n        status: true,\n      });\n    }\n    // else if (item.foodType === \"\") {\n    //   setAlert({\n    //     title: \"Missing Mandatory Fields\",\n    //     body: \"Select FoodType!!!\",\n    //     status: true,\n    //   });\n    // }\n    // else if (item.style === \"\") {\n    //   setAlert({\n    //     title: \"Missing Mandatory Fields\",\n    //     body: \"Select Style!!!\",\n    //     status: true,\n    //   });\n    // }\n    else if (price === null) {\n      setAlert({\n        title: \"Missing Mandatory Fields\",\n        body: \"select normal price!!!\",\n        // body: \"select normal price or quantity to proceed!!!\",\n        status: true,\n      });\n    } else {\n      let isAddItem = true;\n\n      let pricee = item;  \n      if (pricee.length === undefined || pricee.length === null) {\n        // priceItem is map\n        // if (pricee.actualPrice === 0 || pricee.currentPrice === 0) {\n        if (pricee.currentPrice === 0) {\n          setAlert({\n            title: \"Missing Mandatory Fields\",\n            body: \"Value should be greater than 0!!!\",\n            status: true,\n          });\n          isAddItem = false;\n        }\n      } else {\n        // priceItem is array\n        for (let i = 0; i < pricee.length; i++) {\n          if (pricee[i].units === \"\") {\n            setAlert({\n              title: \"Missing Mandatory Fields\",\n              body: \"select units for all quantity like kilogram, liters etc!!!\",\n              status: true,\n            });\n            isAddItem = false;\n            break;\n          } else if (\n            // pricee[i].quantity <= 0 ||\n            // pricee[i].actualPrice <= 0 ||\n            pricee[i].currentPrice <= 0\n          ) {\n            setAlert({\n              title: \"Missing Mandatory Fields\",\n              body: \"Price should not be 0!!!\",\n              // body: \"Quantity or Price should not be 0!!!\",\n              status: true,\n            });\n            isAddItem = false;\n            break;\n          }\n        }\n      }\n      console.log(\"isaddItem\", isAddItem, props.type, authCtx);\n      if (isAddItem) {\n        addItem(item, price, props.type, authCtx, (isAdded) => {\n          if (isAdded) {\n            // db added\n            window.alert(\"Successfully Added!!!\");\n            clearHandler();\n          } else {\n            // error not adding\n            window.alert(\"Not Added... Try Again!!!\");\n          }\n        });\n      }\n      // console.log(\"new Data\", item);\n    }\n  };\n\n  return (\n    <div class=\"add-new\">\n      {alert !== null && alert.status === true && (\n        <AlertModal\n          title={alert.title}\n          body={alert.body}\n          showModal={alert.status}\n          handleClose={() => setAlert(null)}\n        />\n      )}\n      <h2>Add one or more items</h2>\n      <div class=\"add-form\">\n        <AddNewForm\n          item={item}\n          onChangeHandler={onChangeHandler}\n          priceItemChangeHandler={(list) =>\n            setItem((prevState) => {\n              // console.log(\"list\", list);\n              return {\n                ...prevState,\n                priceItem: list,\n              };\n            })\n          }\n          draftHandler={draftHandler}\n          clearHandler={clearHandler}\n          price={price}\n        />\n        ;\n      </div>\n    </div>\n  );\n};\n\nexport default AddNewItem;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./EditModal.module.css\";\nimport \"./EditModal.css\";\nimport Card from \"../Card/Card\";\nimport Backdrop from \"../Backdrop\";\nimport $ from \"jquery\";\n\nconst ModalOverlay = (props) => {\n  const [item, setItem] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [quantity, setQuantity] = useState({\n    quarter: false,\n    half: false,\n    full: false,\n  });\n  // const [imgView, setImgView] = useState(false);\n\n  useEffect(() => {\n    let item = props.item;\n    if (item !== null) {\n      console.log(\"item\", item);\n      setItem(item);\n      setPrice(\"normalPrice\");\n      // if (\n      //   item.branch[props.location][\"current_price\"] === -1\n      //   // &&\n      //   // item.branch[props.location][\"actualPrice\"] === -1\n      // ) {\n      //   let data = {\n      //     quarter: false,\n      //     half: false,\n      //     full: false\n      //   };\n      //   // if (\n      //   //   item.branch[props.location][\"quarterPrice\"] > 0 &&\n      //   //   item.branch[props.location][\"cquarterPrice\"] > 0\n      //   // ) {\n      //   //   data.quarter = true;\n      //   // }\n      //   // if (\n      //   //   item.branch[props.location][\"halfPrice\"] > 0 &&\n      //   //   item.branch[props.location][\"chalfPrice\"] > 0\n      //   // ) {\n      //   //   data.half = true;\n      //   // }\n      //   // if (\n      //   //   item.branch[props.location][\"fullPrice\"] > 0 &&\n      //   //   item.branch[props.location][\"cfullPrice\"] > 0\n      //   // ) {\n      //   //   data.full = true;\n      //   // }\n      //   // setPrice(\"quantityPrice\");\n      //   setQuantity(data);\n      // } else {\n      //   setPrice(\"normalPrice\");\n      // }\n    }\n  }, [props.item, props.location]);\n\n  const onChangeHandler = (event) => {\n    // console.log(\"event.name\", event.target.name, event.target.value, item);\n    // setChecked((prevState) => !prevState);\n    let value = event.target.value;\n    let ename = event.target.name;\n    // console.log(\"ename\", ename, value);\n\n    if (ename === \"img\") {\n      value = event.target.files[0];\n      // console.log(\"url\", URL.createObjectURL(value));\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [ename]: value,\n        };\n      });\n    } else if (\n      ename === \"dealoftheday\" ||\n      ename === \"onsale\" ||\n      ename === \"Bestseller\" ||\n      ename === \"isproductavailable\"\n    ) {\n      if (ename === \"isproductavailable\") {\n        setItem((prevState) => {\n          value = !prevState[event.target.name];\n          return {\n            ...prevState,\n            [ename]: value,\n          };\n        });\n      } else {\n        setItem((prevState) => {\n          value = !prevState.branch[props.location][event.target.name];\n          // console.log(event.target.name, value);\n          let data = {\n            ...prevState,\n          };\n          data.branch[props.location] = {\n            ...prevState.branch[props.location],\n            [event.target.name]: value,\n          };\n          return data;\n        });\n      }\n    } else if (ename === \"price\") {\n      setPrice(value);\n    } else if (ename === \"actualPrice\") {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [props.location]: {\n            ...prevState[props.location],\n            price: {\n              ...prevState[props.location][\"price\"],\n              actualPrice: value,\n            },\n          },\n        };\n      });\n    } else if (ename === \"current_price\") {\n      setItem((prevState) => {\n        let data = {\n          ...prevState,\n        };\n        data.branch[props.location] = {\n          ...prevState.branch[props.location],\n          [event.target.name]: value,\n        };\n        return data;\n      });\n    } else if (ename === \"quantity\") {\n      console.log(\"quantity\", value);\n      if (value === \"quarter\") {\n        setQuantity((prevState) => {\n          return {\n            ...prevState,\n            quarter: !prevState.quarter,\n          };\n        });\n      } else if (value === \"half\") {\n        setQuantity((prevState) => {\n          return {\n            ...prevState,\n            half: !prevState.half,\n          };\n        });\n      } else if (value === \"full\") {\n        setQuantity((prevState) => {\n          return {\n            ...prevState,\n            full: !prevState.full,\n          };\n        });\n      }\n    } else if (ename === \"quarterPrice\" || ename === \"cquarterPrice\") {\n      let data = {\n        ...item[props.location][\"price\"],\n        quarterPrice: value,\n      };\n      if (ename === \"cquarterPrice\") {\n        data = {\n          ...item[props.location][\"price\"],\n          cquarterPrice: value,\n        };\n      }\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [props.location]: {\n            ...prevState[props.location],\n            price: data,\n          },\n        };\n      });\n    } else if (ename === \"halfPrice\" || ename === \"chalfPrice\") {\n      let data = {\n        ...item[props.location][\"price\"],\n        halfPrice: value,\n      };\n      if (ename === \"chalfPrice\") {\n        data = {\n          ...item[props.location][\"price\"],\n          chalfPrice: value,\n        };\n      }\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [props.location]: {\n            ...prevState[props.location],\n            price: data,\n          },\n        };\n      });\n    } else if (ename === \"fullPrice\" || ename === \"cfullPrice\") {\n      let data = {\n        ...item[props.location][\"price\"],\n        fullPrice: value,\n      };\n      if (ename === \"cfullPrice\") {\n        data = {\n          ...item[props.location][\"price\"],\n          cfullPrice: value,\n        };\n      }\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [props.location]: {\n            ...prevState[props.location],\n            price: data,\n          },\n        };\n      });\n    } else if (\n      ename === \"unit\" ||\n      ename === \"quantityPerUnit\" ||\n      ename === \"minimumUnit\"\n    ) {\n      setItem((prevState) => {\n        let data = {\n          ...prevState,\n        };\n        data.branch[props.location] = {\n          ...prevState.branch[props.location],\n          [event.target.name]: value,\n        };\n        return data;\n        // return {\n        //   ...prevState,\n        //   [props.location]: {\n        //     ...prevState[props.location],\n        //     [ename]: value,\n        //   },\n        // };\n      });\n    } else {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    }\n  };\n\n  const getFile1 = () => {\n    $(\"#uploadButton1\").on(\"click\", function () {\n      $(\"#img\").click();\n    });\n\n    $(\"#img\").change(function () {\n      var file = this.files[0];\n      console.log(file);\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        $(\"#uploadButton1\").css(\n          \"background-image\",\n          'url(\"' + reader.result + '\")'\n        );\n      };\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n      }\n    });\n  };\n\n  const submitHandler = () => {\n    // console.log(\"UpdatedItem\", item);\n    // when mandatory fields are applied then proceed\n    if (price === \"quantityPrice\") {\n      if (\n        quantity.quarter === false &&\n        quantity.half === false &&\n        quantity.full === false\n      ) {\n        alert(\"Pick Quantity or Choose Normal Price!!!\");\n      } else {\n        // let count = 0;\n        // let trueCount = 0;\n        let isUpdate = true;\n        if (quantity.quarter === true) {\n          // trueCount++;\n          if (\n            item[props.location][\"price\"][\"quarterPrice\"] <= 0 &&\n            item[props.location][\"price\"][\"cquarterPrice\"] <= 0\n          ) {\n            alert(\"Update Prices, If Quarter Quantity is Picked!!!\");\n            // props.updateItem(item, price, quantity);\n            isUpdate = false;\n            // count--;\n          } else {\n            // count++;\n          }\n        }\n        if (quantity.half === true) {\n          // trueCount++;\n          if (\n            item[props.location][\"price\"][\"halfPrice\"] <= 0 &&\n            item[props.location][\"price\"][\"chalfPrice\"] <= 0\n          ) {\n            alert(\"Update Prices, If Half Quantity is Picked!!!\");\n            // props.updateItem(item, price, quantity);\n            isUpdate = false;\n            // count--;\n          } else {\n            // count++;\n          }\n        }\n        if (quantity.full === true) {\n          // trueCount++;\n          if (\n            item[props.location][\"price\"][\"fullPrice\"] <= 0 &&\n            item[props.location][\"price\"][\"cfullPrice\"] <= 0\n          ) {\n            alert(\"Update Prices, If Full Quantity is Picked!!!\");\n            // props.updateItem(item, price, quantity);\n            isUpdate = false;\n            // count--;\n          } else {\n            // count++;\n          }\n        }\n        if (isUpdate) {\n          props.updateItem(item, price, quantity);\n          // console.log(\"isUpdate-if\", isUpdate);\n        }\n        // else {\n        //   console.log(\"isUpdate-else\", isUpdate);\n        // }\n      }\n    } else {\n      if (\n        // item[props.location][\"price\"][\"actualPrice\"] > 0 &&\n        item.branch[props.location][\"current_price\"] > 0\n      ) {\n        props.updateItem(item, price, quantity, \"Food\");\n      } else {\n        alert(\"Update Actual/Current Prices!!!\");\n      }\n    }\n  };\n\n  let ui = null;\n  if (price !== null) {\n    // if (price === \"quantityPrice\") {\n    //   ui = (\n    //     <div className=\"col-12\">\n    //       <p>\n    //         Pick the Quantity\n    //         {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\n    //       </p>\n    //       <div className={styles.singlerow}>\n    //         <input\n    //           type=\"checkbox\"\n    //           id=\"quarter\"\n    //           name=\"quantity\"\n    //           value=\"quarter\"\n    //           onChange={onChangeHandler}\n    //           checked={quantity.quarter}\n    //         />\n    //         <label htmlFor=\"quarter\" className=\"label\">\n    //           Quarter\n    //         </label>\n    //         <label htmlFor=\"quaterPrice\" className={styles.price}>\n    //           Actual Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           className={styles.singlenum}\n    //           id=\"quarterPrice\"\n    //           name=\"quarterPrice\"\n    //           min=\"0\"\n    //           value={item[props.location][\"price\"][\"quarterPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //         <label htmlFor=\"cquaterPrice\" className={styles.price}>\n    //           Current Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           id=\"cquarterPrice\"\n    //           name=\"cquarterPrice\"\n    //           min=\"0\"\n    //           className={styles.singlenum}\n    //           value={item[props.location][\"price\"][\"cquarterPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //       </div>\n    //       <div className={styles.singlerow}>\n    //         <input\n    //           type=\"checkbox\"\n    //           id=\"half\"\n    //           name=\"quantity\"\n    //           value=\"half\"\n    //           checked={quantity.half}\n    //           onChange={onChangeHandler}\n    //         />\n    //         <label htmlFor=\"half\" className=\"label\">\n    //           Half\n    //         </label>\n    //         <label htmlFor=\"halfPrice\" className={styles.price}>\n    //           Actual Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           id=\"halfPrice\"\n    //           className={styles.singlenum}\n    //           name=\"halfPrice\"\n    //           min=\"0\"\n    //           value={item[props.location][\"price\"][\"halfPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //         <label htmlFor=\"chalfPrice\" className={styles.price}>\n    //           Current Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           id=\"chalfPrice\"\n    //           name=\"chalfPrice\"\n    //           min=\"0\"\n    //           className={styles.singlenum}\n    //           value={item[props.location][\"price\"][\"chalfPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //       </div>\n\n    //       <div className={styles.singlerow}>\n    //         <input\n    //           type=\"checkbox\"\n    //           id=\"full\"\n    //           name=\"quantity\"\n    //           value=\"full\"\n    //           checked={quantity.full}\n    //           onChange={onChangeHandler}\n    //         />\n    //         <label htmlFor=\"full\" className=\"label\">\n    //           Full\n    //         </label>\n    //         <label htmlFor=\"fullPrice\" className={styles.price}>\n    //           Actual Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           id=\"fullPrice\"\n    //           name=\"fullPrice\"\n    //           min=\"0\"\n    //           className={styles.singlenum}\n    //           value={item[props.location][\"price\"][\"fullPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //         <label htmlFor=\"cfullPrice\" className={styles.price}>\n    //           Current Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           id=\"cfullPrice\"\n    //           name=\"cfullPrice\"\n    //           min=\"0\"\n    //           className={styles.singlenum}\n    //           value={item[props.location][\"price\"][\"cfullPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //       </div>\n    //     </div>\n    //   );\n    // } else if (price === \"normalPrice\") {\n    // }\n    if (price === \"normalPrice\") {\n      ui = (\n        <div className=\"col-12 price\">\n          {/* <label htmlFor=\"actualPrice\" className={styles.price}>\n            Actual Price&ensp;\n          </label>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            min=\"0\"\n            type=\"number\"\n            id=\"actualPrice\"\n            name=\"actualPrice\"\n            style={{ marginRight: \"15px\" }}\n            className={styles.singlenum}\n            value={\n              item[props.location][\"price\"][\"actualPrice\"] > -1 &&\n              item[props.location][\"price\"][\"actualPrice\"]\n            }\n            onChange={onChangeHandler}\n          /> */}\n          <label htmlFor=\"currentPrice\" className={styles.price}>\n            Current Price&ensp;\n          </label>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            min=\"0\"\n            type=\"number\"\n            id=\"currentPrice\"\n            className={styles.singlenum}\n            name=\"current_price\"\n            value={\n              item.branch[props.location][\"current_price\"] > -1 &&\n              item.branch[props.location][\"current_price\"]\n            }\n            onChange={onChangeHandler}\n          />\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div class={styles.modal}>\n      {item !== null && (\n        <Card>\n          <div class={styles.row}>\n            <div class={styles.left}>\n              <div class=\"upload-img\">\n                <input\n                  type=\"file\"\n                  id=\"img\"\n                  name=\"img\"\n                  accept=\".gif, .jpg, .png\"\n                  onChange={onChangeHandler}\n                />\n                <label\n                  onClick={() => {\n                    getFile1();\n                    // setImgView(true);\n                  }}\n                  htmlFor=\"img\"\n                  id=\"uploadButton1\"\n                  style={{\n                    backgroundImage: `url('${item.img}')`,\n                  }}\n                >\n                  <span>+</span>\n                </label>\n              </div>\n              <div\n                class=\"row\"\n                style={{ justifyContent: \"end\", paddingTop: \"15px\" }}\n              >\n                <button\n                  type=\"button\"\n                  class={styles.btn}\n                  style={{ marginRight: \"10px\" }}\n                  onClick={submitHandler}\n                >\n                  Save\n                </button>\n                <button\n                  type=\"button\"\n                  class={styles.btn}\n                  onClick={props.onClose}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n            <div class={styles.right}>\n              <div class=\"row\">\n                <div\n                  class={styles.col}\n                  style={{ width: \"30%\", paddingRight: \"10px\" }}\n                >\n                  <label htmlFor=\"name\">Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"Name\"\n                    name=\"Name\"\n                    class={styles.input}\n                    alt=\"productname\"\n                    value={item.Name}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n                <div class={styles.col} style={{ width: \"70%\" }}>\n                  <label htmlFor=\"desc\">Description</label>\n                  <input\n                    type=\"text\"\n                    id=\"description\"\n                    name=\"description\"\n                    class={styles.input}\n                    alt=\"productdescrb\"\n                    value={item.description}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n              </div>\n              <div\n                class=\"row\"\n                style={{ justifyContent: \"space-between\", padding: \"15px 0\" }}\n              >\n                {/* <select\n                  class={styles.select}\n                  name=\"style\"\n                  id=\"style\"\n                  onChange={onChangeHandler}\n                  value={item.style}\n                >\n                  <option\n                    value=\"southindian\"\n                    // selected={item.style === \"southindian\" ? true : false}\n                  >\n                    SouthIndian\n                  </option>\n                  <option\n                    value=\"chinese\"\n                    // selected={item.style === \"chinese\" ? true : false}\n                  >\n                    Chinese\n                  </option>\n                </select> */}\n                {/* <select class={styles.select} name=\"category\" id=\"category\">\n                <option value=\"breakfast\">Breakfast</option>\n                <option value=\"lunch\">Lunch</option>\n                <option value=\"dinner\">Dinner</option>\n              </select> */}\n                <select\n                  class={styles.select}\n                  name=\"Type\"\n                  id=\"Type\"\n                  onChange={onChangeHandler}\n                  value={item.Type}\n                >\n                  {/* <option\n                    value=\"veg\"\n                    // selected={item.Type === \"veg\" ? true : false}\n                  >\n                    Veg\n                  </option>\n                  <option\n                    value=\"nonveg\"\n                    // selected={item.Type === \"non-veg\" ? true : false}\n                  >\n                    Non-Veg\n                  </option> */}\n                  <option value=\"BreakFast\">BreakFast</option>\n                  <option value=\"Lunch\">Lunch</option>\n                  <option value=\"Dinner\">Dinner</option>\n                </select>\n              </div>\n              <div class=\"row\" style={{ justifyContent: \"space-between\" }}>\n                <div class={styles.col} style={{ width: \"48%\" }}>\n                  <div\n                    class=\"row\"\n                    style={{\n                      justifyContent: \"space-between\",\n                      padding: \"5px 0\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <label htmlFor=\"actualUnit\">Actual Unit:</label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"unit\"\n                      name=\"unit\"\n                      min=\"0\"\n                      onChange={onChangeHandler}\n                      value={item.branch[props.location][\"unit\"]}\n                    />\n\n                    {/* <label htmlFor=\"quantityPerUnit\" style={{ margin: \"0\" }}>\n                      Quantity Per Unit\n                    </label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"quantityPerUnit\"\n                      name=\"quantityPerUnit\"\n                      min=\"1\"\n                      value={item[props.location][\"quantityPerUnit\"]}\n                      onChange={onChangeHandler}\n                    /> */}\n                  </div>\n                  {/* <div\n                    class=\"row\"\n                    style={{\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <label htmlFor=\"unit\" style={{ margin: \"0\" }}>\n                      Minimal Unit\n                    </label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"minimumUnit\"\n                      name=\"minimumUnit\"\n                      min=\"0\"\n                      value={item[props.location][\"minimumUnit\"]}\n                      onChange={onChangeHandler}\n                    />\n                  </div> */}\n                </div>\n                <div class={styles.col} style={{ width: \"48%\" }}>\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dealoftheday\"\n                      name=\"dealoftheday\"\n                      className={styles.check}\n                      checked={item.branch[props.location][\"dealoftheday\"]}\n                      onChange={onChangeHandler}\n                    />\n                    <label htmlFor=\"dealoftheday\" className={styles.label}>\n                      Deal of the day\n                    </label>\n                  </div>\n                  {/* <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"onSale\"\n                      name=\"onSale\"\n                      className={styles.check}\n                      // checked={item.dealoftheday}\n                    />\n                    <label htmlFor=\"onSale\" className={styles.label}>\n                      On Sale\n                    </label>\n                  </div> */}\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"isproductavailable\"\n                      name=\"isproductavailable\"\n                      className={styles.check}\n                      checked={item.isproductavailable}\n                      // checked={item[props.location][\"isproductavailable\"]}\n                      onChange={onChangeHandler}\n                    />\n                    <label\n                      htmlFor=\"isproductavailable\"\n                      className={styles.label}\n                    >\n                      Product Available\n                    </label>\n                  </div>\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"Bestseller\"\n                      name=\"Bestseller\"\n                      className={styles.check}\n                      checked={item.branch[props.location][\"Bestseller\"]}\n                      onChange={onChangeHandler}\n                    />\n                    <label htmlFor=\"Bestseller\" className={styles.label}>\n                      Best Seller\n                    </label>\n                    {/* <label htmlFor=\"top\">Top Product</label> */}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row pricecol\">\n                <div className=\"col-4\">\n                  <input\n                    type=\"radio\"\n                    id=\"normalPrice\"\n                    name=\"price\"\n                    value=\"normalPrice\"\n                    checked={price !== null && price === \"normalPrice\"}\n                    onChange={onChangeHandler}\n                  />\n                  <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\n                </div>\n                {/* <div className=\"col-6\">\n                  <input\n                    type=\"radio\"\n                    id=\"quantityPrice\"\n                    name=\"price\"\n                    value=\"quantityPrice\"\n                    checked={price !== null && price === \"quantityPrice\"}\n                    onChange={onChangeHandler}\n                  />\n                  <label htmlFor=\"quantityPrice\">\n                    &nbsp;Quantity Based Price\n                  </label>\n                </div> */}\n                {ui}\n              </div>\n            </div>\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nconst EditModal = (props) => {\n  // console.log(\"edit\", props.item);\n  return (\n    <>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.closeModal} />,\n        document.getElementById(\"backdrop-root\")\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay\n          onClose={props.closeModal}\n          // title={props.title}\n          updateItem={props.updateItem}\n          item={props.item}\n          location={props.location}\n        />,\n        document.getElementById(\"overlay-root\")\n      )}\n    </>\n  );\n};\n\nexport default EditModal;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./EditModal.module.css\";\nimport \"./EditModal.css\";\nimport Card from \"../Card/Card\";\nimport Backdrop from \"../Backdrop\";\nimport $ from \"jquery\";\n\nconst ModalOverlay = (props) => {\n  const [item, setItem] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [quantity, setQuantity] = useState([]);\n  // const [imgView, setImgView] = useState(false);\n\n  useEffect(() => {\n    let item = props.item;\n    if (item !== null) {\n      console.log(\"item\", item);\n      setItem(item);\n      setPrice(\"normalPrice\");\n      // if (item.branch[props.location][\"current_price\"] === undefined) {\n      //   setPrice(\"quantityPrice\");\n      //   setQuantity(item[props.location][\"price\"]);\n      // } else {\n      //   setPrice(\"normalPrice\");\n      // }\n    }\n  }, [props.item, props.location]);\n\n  const onChangeHandler = (event, id) => {\n    // console.log(\"event.name\", event.target.name, event.target.value, item);\n    // setChecked((prevState) => !prevState);\n    let value = event.target.value;\n    let ename = event.target.name;\n    // console.log(\"ename\", ename, value);\n\n    if (ename === \"img\") {\n      value = event.target.files[0];\n      // console.log(\"url\", URL.createObjectURL(value));\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [ename]: value,\n        };\n      });\n    } else if (\n      ename === \"dealoftheday\" ||\n      ename === \"onsale\" ||\n      ename === \"isproductavailable\" ||\n      ename === \"Bestseller\"\n    ) {\n      if (ename === \"isproductavailable\") {\n        setItem((prevState) => {\n          value = !prevState[event.target.name];\n          return {\n            ...prevState,\n            [ename]: value,\n          };\n        });\n      } else {\n        setItem((prevState) => {\n          value = !prevState.branch[props.location][event.target.name];\n          // console.log(event.target.name, value);\n          let data = {\n            ...prevState,\n          };\n          data.branch[props.location] = {\n            ...prevState.branch[props.location],\n            [event.target.name]: value,\n          };\n          return data;\n        });\n      }\n    } else if (ename === \"price\") {\n      setPrice(value);\n    } else if (ename === \"actualPrice\") {\n      if (price === \"normalPrice\") {\n        // console.log(\"actualPrice-normal\", value);\n        setItem((prevState) => {\n          return {\n            ...prevState,\n            [props.location]: {\n              ...prevState[props.location],\n              price: {\n                ...prevState[props.location][\"price\"],\n                actualPrice: parseFloat(value),\n              },\n            },\n          };\n        });\n      } else {\n        setQuantity((prevState) => {\n          // console.log(\"actualPrice-quan\", prevState);\n          let list = [...prevState];\n          let index = list.findIndex((item) => {\n            return item.id === id;\n          });\n          let data = {\n            ...list[index],\n            [ename]: parseFloat(value),\n          };\n          list[index] = data;\n          return [...list];\n        });\n      }\n    } else if (ename === \"current_price\") {\n      if (price === \"normalPrice\") {\n        // console.log(\"currPrice-normal\", value);\n        setItem((prevState) => {\n          let data = {\n            ...prevState,\n          };\n          data.branch[props.location] = {\n            ...prevState.branch[props.location],\n            [ename]: value,\n          };\n          return data;\n        });\n      } else {\n        // console.log(\"currPrice-quant\", value);\n        setQuantity((prevState) => {\n          let list = [...prevState];\n          let index = list.findIndex((item) => {\n            return item.id === id;\n          });\n          let data = {\n            ...list[index],\n            [ename]: parseFloat(value),\n          };\n          list[index] = data;\n          return [...list];\n        });\n      }\n    } else if (ename === \"quantity\") {\n      // console.log(\"quantity\", value);\n      setQuantity((prevState) => {\n        let list = [...prevState];\n        let index = list.findIndex((item) => {\n          return item.id === id;\n        });\n        let data = \"\";\n        data = {\n          ...list[index],\n          [ename]: parseFloat(value),\n        };\n        list[index] = data;\n        return [...list];\n      });\n    } else if (ename === \"units\") {\n      // console.log(\"units\", value);\n      setQuantity((prevState) => {\n        let list = [...prevState];\n        let index = list.findIndex((item) => {\n          return item.id === id;\n        });\n        let data = {\n          ...list[index],\n          [ename]: value,\n        };\n        list[index] = data;\n        return [...list];\n      });\n    } else if (\n      ename === \"unit\" ||\n      ename === \"quantityPerUnit\" ||\n      ename === \"minimumUnit\"\n    ) {\n      setItem((prevState) => {\n        let data = {\n          ...prevState,\n        };\n        data.branch[props.location] = {\n          ...prevState.branch[props.location],\n          [ename]: value,\n        };\n        return data;\n        // return {\n        //   ...prevState,\n        //   [props.location]: {\n        //     ...prevState[props.location],\n        //     [ename]: value,\n        //   },\n        // };\n      });\n    } else {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    }\n  };\n\n  const getFile1 = () => {\n    $(\"#uploadButton1\").on(\"click\", function () {\n      $(\"#img\").click();\n    });\n\n    $(\"#img\").change(function () {\n      var file = this.files[0];\n      console.log(file);\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        $(\"#uploadButton1\").css(\n          \"background-image\",\n          'url(\"' + reader.result + '\")'\n        );\n      };\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n      }\n    });\n  };\n\n  const submitHandler = () => {\n    // console.log(\"UpdatedItem\", item, quantity, price);\n    let isAddItem = true;\n    if (price === \"normalPrice\") {\n      if (\n        // item[props.location].price.actualPrice <= 0 ||\n        item.branch[props.location].current_price <= 0 ||\n        // item[props.location].price.actualPrice === undefined ||\n        item.branch[props.location].current_price === undefined\n      ) {\n        alert(\"Price should be greater than 0 to proceed further!!!\");\n        isAddItem = false;\n      }\n    } else {\n      for (let i = 0; i < quantity.length; i++) {\n        if (quantity[i].units === \"\") {\n          alert(\"Select units for all quantity like kilogram, liters etc!!!\");\n          isAddItem = false;\n          break;\n        } else if (\n          quantity[i].quantity <= 0 ||\n          quantity[i].actualPrice <= 0 ||\n          quantity[i].currentPrice <= 0\n        ) {\n          alert(\"Quantity or Price should not be 0!!!\");\n          isAddItem = false;\n          break;\n        }\n      }\n    }\n    if (isAddItem) {\n      props.updateItem(item, price, quantity, \"Grocery\");\n    }\n  };\n\n  const addMoreQuantity = () => {\n    setQuantity((prevState) => {\n      let price = prevState;\n      let newId = price.length; // if already two elements[0, 1] then next element id will be [0, 1, 2]\n      let data = {\n        id: newId,\n        quantity: 0,\n        units: \"\",\n        actualPrice: 0,\n        currentPrice: 0,\n      };\n      // price = [...price, data];\n      return [...price, data];\n    });\n  };\n\n  const reduceQuantity = () => {\n    setQuantity((prevState) => {\n      let price = prevState;\n      // let prevState = props.item.priceItem;\n      if (price.length > 1) {\n        price.pop();\n      }\n      return [...price];\n    });\n  };\n\n  let ui = null;\n  if (price !== null) {\n    if (price === \"quantityPrice\") {\n      ui = (\n        <div className=\"col-12\">\n          <p>\n            Pick the Quantity\n            {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\n          </p>\n          {quantity.map((price) => {\n            return (\n              <div className={styles.singlerow} key={price.id}>\n                <div className=\"pic\">\n                  <input\n                    className=\"pics\"\n                    type=\"number\"\n                    id=\"quantity\"\n                    name=\"quantity\"\n                    min=\"0\"\n                    max=\"1000\"\n                    value={price.quantity}\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                  />\n\n                  <select\n                    className=\"amo\"\n                    name=\"units\"\n                    id=\"units\"\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                    value={price.units}\n                  >\n                    <option value=\"\">--Select--</option>\n                    <option value=\"grams\">grams</option>\n                    <option value=\"kilograms\">kilograms</option>\n                    <option value=\"millilitres\">millilitres</option>\n                    <option value=\"litres\">litres</option>\n                  </select>\n                </div>\n                <div>\n                  <label htmlFor=\"quarterPrice\" className={styles.price}>\n                    Actual Price&ensp;\n                  </label>\n                  <i className=\"fas fa-rupee\"></i>\n                  <input\n                    type=\"number\"\n                    className={styles.singlenum}\n                    id=\"actualPrice\"\n                    name=\"actualPrice\"\n                    min=\"0\"\n                    value={price.actualPrice}\n                    onChange={(e) => onChangeHandler(e, price.id)}\n                  />\n                  <label htmlFor=\"cquaterPrice\" className={styles.price}>\n                    Current Price&ensp;\n                  </label>\n                  <i className=\"fas fa-rupee\"></i>\n                  <input\n                    type=\"number\"\n                    id=\"currentPrice\"\n                    name=\"currentPrice\"\n                    min=\"0\"\n                    className={styles.singlenum}\n                    value={price.currentPrice}\n                    onChange={(e) => onChangeHandler(e, price.id)}\n                  />\n                </div>\n              </div>\n            );\n          })}\n          <button className=\"plus\" type=\"button\" onClick={addMoreQuantity}>\n            <i class=\"fas fa-plus-circle\"></i>\n          </button>\n          <button className=\"neg\" type=\"button\" onClick={reduceQuantity}>\n            <i class=\"fas fa-minus-circle\"></i>\n          </button>\n        </div>\n      );\n    } else if (price === \"normalPrice\") {\n      ui = (\n        <div className=\"col-12 price\">\n          {/* <label htmlFor=\"actualPrice\" className={styles.price}>\n            Actual Price&ensp;\n          </label>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            min=\"0\"\n            type=\"number\"\n            id=\"actualPrice\"\n            name=\"actualPrice\"\n            style={{ marginRight: \"15px\" }}\n            className={styles.singlenum}\n            value={item[props.location].price.actualPrice}\n            onChange={onChangeHandler}\n          /> */}\n          <label htmlFor=\"current_price\" className={styles.price}>\n            Current Price&ensp;\n          </label>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            min=\"0\"\n            type=\"number\"\n            id=\"current_price\"\n            className={styles.singlenum}\n            name=\"current_price\"\n            value={item.branch[props.location].current_price}\n            onChange={onChangeHandler}\n          />\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div class={styles.modal}>\n      {item !== null && (\n        <Card>\n          <div class={styles.row}>\n            <div class={styles.left}>\n              <div class=\"upload-img\">\n                <input\n                  type=\"file\"\n                  id=\"img\"\n                  name=\"img\"\n                  accept=\".gif, .jpg, .png\"\n                  onChange={onChangeHandler}\n                />\n                <label\n                  onClick={() => {\n                    getFile1();\n                    // setImgView(true);\n                  }}\n                  htmlFor=\"img\"\n                  id=\"uploadButton1\"\n                  style={{\n                    backgroundImage: `url('${props.img}')`,\n                  }}\n                >\n                  <span>+</span>\n                </label>\n              </div>\n              <div\n                class=\"row\"\n                style={{ justifyContent: \"end\", paddingTop: \"15px\" }}\n              >\n                <button\n                  type=\"button\"\n                  class={styles.btn}\n                  style={{ marginRight: \"10px\" }}\n                  onClick={submitHandler}\n                >\n                  Save\n                </button>\n                <button\n                  type=\"button\"\n                  class={styles.btn}\n                  onClick={props.onClose}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n            <div class={styles.right}>\n              <div class=\"row\">\n                <div\n                  class={styles.col}\n                  style={{ width: \"30%\", paddingRight: \"10px\" }}\n                >\n                  <label htmlFor=\"name\">Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"Name\"\n                    name=\"Name\"\n                    class={styles.input}\n                    alt=\"productname\"\n                    value={item.Name}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n                <div class={styles.col} style={{ width: \"70%\" }}>\n                  <label htmlFor=\"desc\">Description</label>\n                  <input\n                    type=\"text\"\n                    id=\"description\"\n                    name=\"description\"\n                    class={styles.input}\n                    alt=\"productdescrb\"\n                    value={item.description}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n              </div>\n              <div\n                class=\"row\"\n                style={{ justifyContent: \"space-between\", padding: \"15px 0\" }}\n              >\n                {/* <select\n                  class={styles.select}\n                  name=\"style\"\n                  id=\"style\"\n                  onChange={onChangeHandler}\n                  value={item.style}\n                >\n                  <option\n                    value=\"southindian\"\n                    // selected={item.style === \"southindian\" ? true : false}\n                  >\n                    SouthIndian\n                  </option>\n                  <option\n                    value=\"chinese\"\n                    // selected={item.style === \"chinese\" ? true : false}\n                  >\n                    Chinese\n                  </option>\n                </select> */}\n                {/* <select class={styles.select} name=\"category\" id=\"category\">\n                <option value=\"breakfast\">Breakfast</option>\n                <option value=\"lunch\">Lunch</option>\n                <option value=\"dinner\">Dinner</option>\n              </select> */}\n                <select\n                  class={styles.select}\n                  name=\"Type\"\n                  id=\"Type\"\n                  onChange={onChangeHandler}\n                  value={item.Type}\n                >\n                  <option value=\"Fruits_Vegetables\">Fruits_Vegetables</option>\n                  <option value=\"Rice\">Rice</option>\n                  <option value=\"Summer_Drinks_Beverages\">\n                    Summer_Drinks_Beverages\n                  </option>\n                  <option value=\"soaps\">Soaps</option>\n                  <option value=\"Pharmacy\">Pharmacy</option>\n                  <option value=\"Organics\">Organics</option>\n                </select>\n              </div>\n              <div class=\"row\" style={{ justifyContent: \"space-between\" }}>\n                <div class={styles.col} style={{ width: \"48%\" }}>\n                  <div\n                    class=\"row\"\n                    style={{\n                      justifyContent: \"space-between\",\n                      padding: \"5px 0\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <label htmlFor=\"actualUnit\">Actual Unit:</label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"unit\"\n                      name=\"unit\"\n                      min=\"0\"\n                      onChange={onChangeHandler}\n                      value={item.branch[props.location].unit}\n                    />\n                    {/* <label htmlFor=\"quantityPerUnit\" style={{ margin: \"0\" }}>\n                      Quantity Per Unit\n                    </label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"quantityPerUnit\"\n                      name=\"quantityPerUnit\"\n                      min=\"1\"\n                      value={item[props.location].quantityPerUnit}\n                      onChange={onChangeHandler}\n                    /> */}\n                  </div>\n                  {/* <div\n                    class=\"row\"\n                    style={{\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <label htmlFor=\"unit\" style={{ margin: \"0\" }}>\n                      Minimal Unit\n                    </label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"minimumUnit\"\n                      name=\"minimumUnit\"\n                      min=\"0\"\n                      value={item[props.location].minimumUnit}\n                      onChange={onChangeHandler}\n                    />\n                  </div> */}\n                </div>\n                <div class={styles.col} style={{ width: \"48%\" }}>\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dealoftheday\"\n                      name=\"dealoftheday\"\n                      className={styles.check}\n                      checked={item.branch[props.location].dealoftheday}\n                      onChange={onChangeHandler}\n                    />\n                    <label htmlFor=\"dealoftheday\" className={styles.label}>\n                      Deal of the day\n                    </label>\n                  </div>\n                  {/* <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"onSale\"\n                      name=\"onSale\"\n                      className={styles.check}\n                      // checked={item.dealoftheday}\n                    />\n                    <label htmlFor=\"onSale\" className={styles.label}>\n                      On Sale\n                    </label>\n                  </div> */}\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"isproductavailable\"\n                      name=\"isproductavailable\"\n                      className={styles.check}\n                      // checked={item[props.location].isproductavailable}\n                      checked={item.isproductavailable}\n                      onChange={onChangeHandler}\n                    />\n                    <label\n                      htmlFor=\"isproductavailable\"\n                      className={styles.label}\n                    >\n                      Product Available\n                    </label>\n                  </div>\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"Bestseller\"\n                      name=\"Bestseller\"\n                      className={styles.check}\n                      checked={item.branch[props.location].Bestseller}\n                      onChange={onChangeHandler}\n                    />\n                    <label htmlFor=\"Bestseller\" className={styles.label}>\n                      Best Seller\n                    </label>\n                    {/* <label htmlFor=\"top\">Top Product</label> */}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row pricecol\">\n                <div className=\"col-4\">\n                  <input\n                    type=\"radio\"\n                    id=\"normalPrice\"\n                    name=\"price\"\n                    value=\"normalPrice\"\n                    checked={price !== null && price === \"normalPrice\"}\n                    onChange={onChangeHandler}\n                  />\n                  <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\n                </div>\n                {/* <div className=\"col-6\">\n                  <input\n                    type=\"radio\"\n                    id=\"quantityPrice\"\n                    name=\"price\"\n                    value=\"quantityPrice\"\n                    checked={price !== null && price === \"quantityPrice\"}\n                    onChange={onChangeHandler}\n                  />\n                  <label htmlFor=\"quantityPrice\">\n                    &nbsp;Quantity Based Price\n                  </label>\n                </div> */}\n                {ui}\n              </div>\n            </div>\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nconst GroceryEditModal = (props) => {\n  // console.log(\"edit\", props.item);\n  return (\n    <>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.closeModal} />,\n        document.getElementById(\"backdrop-root\")\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay\n          onClose={props.closeModal}\n          // title={props.title}\n          updateItem={props.updateItem}\n          item={props.item}\n          location={props.location}\n        />,\n        document.getElementById(\"overlay-root\")\n      )}\n    </>\n  );\n};\n\nexport default GroceryEditModal;\n","import \"./Snackbar.css\";\n\nfunction snackbar(item, status) {\n  var el = document.createElement(\"div\");\n  el.className = \"snackbar\";\n  var y = document.getElementById(\"snackbar-container\");\n  el.innerHTML = item.Name + \" - \" + status;\n  y.append(el);\n  el.className = \"snackbar show\";\n  setTimeout(function () {\n    el.className = el.className.replace(\"snackbar show\", \"snackbar\");\n  }, 3000);\n}\n\n// function snackbar1(item, status) {\n//   var el = document.createElement(\"div\");\n//   el.className = \"snackbar\";\n//   var y = document.getElementById(\"snackbar-container\");\n//   el.innerHTML = \"Some Text1 Message\";\n//   y.append(el);\n//   el.className = \"snackbar show\";\n//   setTimeout(function () {\n//     el.className = el.className.replace(\"snackbar show\", \"snackbar\");\n//   }, 3000);\n// }\n\nexport default snackbar;\n","import React from \"react\";\n// import { propTypes } from \"react-bootstrap/esm/Image\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst DeleteConfirmModal = (props) => {\n  return (\n    <Modal show={props.showModal} onHide={props.handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Delete Confirmation!!!</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>Are you sure want to delete it?</Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"danger\"\n          onClick={() => props.confirmDelete(props.item)}\n        >\n          Delete\n        </Button>\n        <Button variant=\"primary\" onClick={props.handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default DeleteConfirmModal;\n","import React, { useEffect, useState } from \"react\";\n// import { Toast, ToastContainer } from \"react-bootstrap\";\n// import { getFood } from \"../../api/FoodDB\";\nimport { getItems, deleteItem, updateItem } from \"../../api/ItemDB\";\nimport EditModal from \"../../ui/EditModal/EditModal\";\nimport GroceryEditModal from \"../../ui/EditModal/GroceryEditModal\";\nimport snackbar from \"../../ui/Snackbar/Snackbar\";\nimport Card from \"../Card/Card\";\nimport DeleteConfirmModal from \"../Modals/DeleteConfirmModal\";\n\nconst Items = (props) => {\n  const [item, setItem] = useState(null);\n  const [items, setItems] = useState(null);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [updateModal, setUpdateModel] = useState(false);\n\n  useEffect(() => {\n    getItems(props.title, props.type, (res) => {\n      console.log(\"res\", res);\n      let list = [];\n      let item;\n      res.forEach((it) => {\n        if (it.branch[props.authCtx.user.location] === undefined) {\n          if (props.type === \"Food\") {\n            item = {\n              ...it,\n            };\n            item.branch[props.authCtx.user.location] = {\n              Bestseller: false,\n              BranchName: props.authCtx.user.location,\n              current_price: 0,\n              dealoftheday: false,\n              unit: 0,\n            };\n          } else {\n            item = {\n              ...it,\n            };\n            item.branch[props.authCtx.user.location] = {\n              Bestseller: false,\n              BranchName: props.authCtx.user.location,\n              current_price: 0,\n              dealoftheday: false,\n              unit: 0,\n            };\n          }\n          list.push(item);\n        } else {\n          list.push(it);\n        }\n      });\n      // console.log(\"list\", list);\n      setItems(list);\n    });\n  }, [props.title, props.type]);\n\n  const updateItemHandler = (updatedItem, price, quantity, type) => {\n    // if data not updated\n    // console.log(\"upitem\", updatedItem, price, quantity, type);\n    // console.log(\"updatedItem\", item);\n    let isUpdate = true;\n    if (item === updatedItem) {\n      if (type === \"Food\") {\n        alert(\"You didn't update anything!!!\");\n        isUpdate = false;\n      } else {\n        if (price === \"normalPrice\") {\n          // console.log(item[props.authCtx.user.location].price);\n          if (\n            item.branch[props.authCtx.user.location].current_price ===\n            updatedItem.branch[props.authCtx.user.location].current_price\n          ) {\n            alert(\"You didn't update anything!!!\");\n            isUpdate = false;\n          }\n        } else {\n          if (item.branch[props.authCtx.user.location].price === quantity) {\n            alert(\"You didn't update anything!!!\");\n            isUpdate = false;\n          }\n        }\n      }\n    }\n    if (isUpdate) {\n      // updated\n      updateItem(\n        updatedItem,\n        price,\n        quantity,\n        props.title,\n        props.type,\n        props.authCtx.user.location,\n        (isUpdated) => {\n          if (isUpdated === false) {\n            snackbar(item, \"Sorry Not Updated\");\n          } else {\n            console.log(\"isUpdated\", isUpdated);\n            let list = [...items];\n            let index = list.findIndex((i) => {\n              return i.id === updatedItem.id;\n            });\n            list[index] = isUpdated;\n            setItems(list);\n            snackbar(item, \"Successfully Updated\");\n            setUpdateModel(false);\n          }\n        }\n      );\n    }\n  };\n\n  const deleteItems = (item) => {\n    // console.log(\"items\", item);\n    deleteItem(item, props.title, props.type, (isDeleted) => {\n      if (isDeleted) {\n        let itemsList = [...items];\n        let list = itemsList.filter((it) => {\n          return it.id !== item.id;\n        });\n        setItems(list);\n        snackbar(item, \"Successfully Deleted\");\n      } else {\n        snackbar(item, \"Failed To Delete, Try Again!!!\");\n      }\n    });\n    setDeleteModal(false);\n  };\n\n  let ui = null;\n  if (items === null) {\n    ui = <p>Loading!!!</p>;\n  } else {\n    if (items.length <= 0) {\n      ui = <p>No Items!!!</p>;\n    } else {\n      ui = items.map((item, i) => (\n        <Card\n          key={i}\n          item={item}\n          deleteItem={(it) => {\n            setDeleteModal(true);\n            setItem(it);\n          }}\n          type={props.type}\n          location={props.authCtx.user.location}\n          updateItem={(it) => {\n            setItem(it);\n            setUpdateModel(props.type);\n          }}\n        />\n      ));\n    }\n  }\n\n  return (\n    <>\n      {updateModal === \"Food\" ? (\n        <EditModal\n          item={item}\n          showModal={updateModal}\n          closeModal={() => setUpdateModel(false)}\n          updateItem={updateItemHandler}\n          location={props.authCtx.user.location}\n        />\n      ) : (\n        updateModal === \"Grocery\" && (\n          <GroceryEditModal\n            item={item}\n            showModal={updateModal}\n            closeModal={() => setUpdateModel(false)}\n            updateItem={updateItemHandler}\n            location={props.authCtx.user.location}\n          />\n        )\n      )}\n      {/* {updateModal && (\n        <GroceryEditModal\n          item={item}\n          showModal={updateModal}\n          closeModal={() => setUpdateModel(false)}\n          updateItem={updateItemHandler}\n        />\n      )} */}\n      {deleteModal && (\n        <DeleteConfirmModal\n          item={item}\n          showModal={deleteModal}\n          handleClose={() => setDeleteModal(false)}\n          confirmDelete={deleteItems}\n          location={props.authCtx.user.location}\n        />\n      )}\n      <h1>{props.title}</h1>\n      <div class=\"row item-card\">{ui}</div>\n      <div id=\"snackbar-container\"></div>\n    </>\n  );\n};\n\nexport default Items;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport { db, auth, firebase } from \"../services/firebase\";\nimport AuthContext from \"../context/auth-context\";\nimport snackbar from \"../ui/Snackbar/Snackbar\";\n\nconst Profile = () => {\n  const authCtx = useContext(AuthContext);\n  const [newData, setNewData] = useState({\n    name: \"\",\n    prfl_img: null,\n    mno: \"\"\n  });\n\n  const [password, setPassword] = useState({\n    // oldPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\"\n  });\n\n  useEffect(() => {\n    if (authCtx.user !== null) {\n      let user = authCtx.user;\n      setNewData({\n        name: user.name,\n        prfl_img: null,\n        mno: user.phone\n      });\n    }\n  }, [authCtx.user]);\n\n  $(document).ready(function () {\n    $(\"#togglePassword\").click(function () {\n      var x = document.getElementById(\"newpass\");\n      if (x.type === \"password\") {\n        x.type = \"text\";\n      } else {\n        x.type = \"password\";\n      }\n      $(\"#togglePassword\").toggleClass(\"fa-eye-slash\");\n    });\n\n    $(\"#togglePassword1\").click(function () {\n      var x = document.getElementById(\"pass\");\n      if (x.type === \"password\") {\n        x.type = \"text\";\n      } else {\n        x.type = \"password\";\n      }\n      $(\"#togglePassword1\").toggleClass(\"fa-eye-slash\");\n    });\n  });\n\n  const getFile1 = () => {\n    $(\"#uploadButton1\").on(\"click\", function () {\n      $(\"#img\").click();\n    });\n\n    $(\"#img\").change(function () {\n      var file = this.files[0];\n      console.log(file);\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        $(\"#uploadButton1\").css(\n          \"background-image\",\n          'url(\"' + reader.result + '\")'\n        );\n      };\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n      }\n    });\n  };\n\n  // onChangeHandler()\n  // submitHandler()\n  const updateUser = (newData) => {\n    // console.log(\"updating user details\", newData);\n    let authUser = authCtx.user;\n    let name = authUser.name;\n    let phone = authUser.phone;\n    // only image is updated\n    // both udpated\n    if (newData.prfl_img !== undefined && newData.prfl_img !== null) {\n      // version - 8\n      let bucketName = \"images\";\n      let img = newData.prfl_img;\n      let storageRef = firebase.storage().ref();\n      let timestamp = +new Date().getTime() + \"-\" + newData.prfl_img.name;\n      // console.log(\"timestamp\", timestamp);\n      let imgRef = storageRef.child(`${bucketName}/${timestamp}`);\n      // let photoUrl = \"\";\n      // delete previous photo from storage, but not the default photo\n      imgRef\n        .put(img)\n        .then((snapshot) => {\n          imgRef.getDownloadURL().then((imgUrl) => {\n            // photoUrl = imgUrl;\n            db.collection(\"admin\")\n              .doc(authUser.id)\n              .update({\n                name: newData.name,\n                phone: newData.mno,\n                img: imgUrl\n              })\n              .then(() => {\n                if (\n                  authUser.img !==\n                  \"https://www.w3schools.com/howto/img_avatar.png\"\n                ) {\n                  firebase\n                    .storage()\n                    .refFromURL(authUser.img)\n                    .delete()\n                    .then(() =>\n                      console.log(\n                        \"image deleted successfullty from firebase storage\"\n                      )\n                    );\n                }\n                alert(\"successfully updated\");\n                // console.log(\"successfully updated data to db\");\n                authCtx.setUser({\n                  ...authUser,\n                  name: newData.name,\n                  phone: newData.mno,\n                  img: imgUrl\n                });\n\n                document.getElementById(\"img\").value = \"\";\n                $(\"#uploadButton\").css(\"background-image\", 'url(\"\")');\n              })\n              .catch((e) => console.log(\"getDownloadUrl\", e));\n          });\n        })\n        .catch((e) => {\n          console.log(\"img put\", e);\n        });\n    } else {\n      // no img\n      if (name !== newData.name || phone !== newData.mno) {\n        // console.log(\"name, mno\", newData);\n        db.collection(\"admin\")\n          .doc(authUser.id)\n          .update({\n            name: newData.name,\n            phone: newData.mno\n          })\n          .then(() => {\n            alert(\"successfully updated\");\n            console.log(\"successfully updated data to db\");\n            authCtx.setUser({\n              ...authUser,\n              name: newData.name,\n              phone: newData.mno\n            });\n          })\n          .catch((e) => console.log(e));\n      } else {\n        alert(\"change anything to update!!!\");\n      }\n    }\n    // } else {\n    //   // User is signed out\n    //   // ...\n    // }\n    // });\n  };\n\n  const updatePassword = (password) => {\n    // console.log(\"newPas\", password);\n    if (password.confirmPassword !== password.newPassword) {\n      alert(\"New Password is not equal to Confirm Password!!!\");\n    } else {\n      auth.onAuthStateChanged((user) => {\n        if (user !== null) {\n          // console.log(\"userId\", user.uid);\n          user\n            .updatePassword(password.newPassword)\n            .then(() => {\n              // let item = {\n              //   Name: \"Password\"\n              // };\n              // snackbar(item, \"updated successfully\");\n              alert(\"password updated successfully!!!\");\n              setPassword({\n                newPassword: \"\",\n                confirmPassword: \"\"\n              });\n            })\n            .catch((e) => {\n              if (e.code === \"auth/requires-recent-login\") {\n                alert(\n                  \"Changing sensitive information, So please try again immediately after login. If password is wrong, try with new password you tried.\"\n                );\n              }\n              console.log(e);\n            });\n        }\n      });\n    }\n  };\n\n  const onChangeHandler = (event) => {\n    // console.log(event.target.name);\n    let value = null;\n    if (event.target.name === \"prfl_img\") {\n      value = event.target.files[0];\n    } else {\n      value = event.target.value;\n    }\n    if (\n      event.target.name === \"newPassword\" ||\n      event.target.name === \"confirmPassword\"\n    ) {\n      setPassword((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value\n        };\n      });\n    } else {\n      setNewData((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value\n        };\n      });\n    }\n  };\n\n  return (\n    <div className=\"settings\">\n      <div className=\"row form\">\n        {/* box-shadow bg white */}\n        <div className=\"col-md-5\">\n          <div class=\"upload-img\">\n            <input\n              type=\"file\"\n              id=\"img\"\n              name=\"prfl_img\"\n              accept=\".gif, .jpg, .png\"\n              onChange={onChangeHandler}\n            />\n            <label\n              onClick={() => {\n                getFile1();\n                // setImgView(true);\n              }}\n              htmlFor=\"img\"\n              id=\"uploadButton1\"\n              style={\n                {\n                  // backgroundImage: `url('${props.img}')`\n                }\n              }\n            >\n              <span>+</span>\n            </label>\n          </div>\n          {authCtx.user !== null && (\n            <>\n              <p className=\"name\">{authCtx.user.name}</p>\n              <p className=\"phn\">{authCtx.user.phone}</p>\n              <p className=\"email\">{authCtx.user.email}</p>\n              <p className=\"branch\">{authCtx.user.location}</p>\n            </>\n          )}\n        </div>\n        <div className=\"col-md-7\">\n          <form className=\"edit-details\">\n            <h4 className=\"title\">Account Details</h4>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <label for=\"name\">Name:</label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={newData.name}\n                  onChange={onChangeHandler}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <label for=\"phone\">Phone:</label>\n                <input\n                  type=\"tel\"\n                  class=\"form-control\"\n                  id=\"mno\"\n                  name=\"mno\"\n                  value={newData.mno}\n                  onChange={onChangeHandler}\n                />\n              </div>\n            </div>\n            <label for=\"email\">Email:</label>\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              id=\"email\"\n              name=\"email\"\n              value={authCtx.user !== null && authCtx.user.email}\n              disabled\n            />\n            <div className=\"footer\">\n              <button\n                class=\"save\"\n                type=\"button\"\n                onClick={() => updateUser(newData)}\n              >\n                Save\n              </button>\n              {/* <button class=\"cancel\" type=\"button\">\n                Clear\n              </button> */}\n            </div>\n            <br />\n\n            {/* //button */}\n            <h4 className=\"title\">Account Security</h4>\n            {/* <label for=\"oldpass\">Old Password:</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              id=\"oldpass\"\n              name=\"oldPassword\"\n              value={password.oldPassword}\n              onChange={onChangeHandler}\n            /> */}\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <label for=\"newpass\">New Password:</label>\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  id=\"newpass\"\n                  name=\"newPassword\"\n                  value={password.newPassword}\n                  onChange={onChangeHandler}\n                />\n                <i class=\"fas fa-eye\" id=\"togglePassword\"></i>\n              </div>\n              <div className=\"col-sm-6\">\n                <label for=\"pass\">Confirm Password:</label>\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  id=\"pass\"\n                  name=\"confirmPassword\"\n                  value={password.confirmPassword}\n                  onChange={onChangeHandler}\n                />\n                <i\n                  class=\"fas fa-eye\"\n                  id=\"togglePassword1\"\n                  style={{ right: \"15px\" }}\n                ></i>\n              </div>\n            </div>\n\n            <div className=\"footer\">\n              <button\n                class=\"save\"\n                type=\"button\"\n                onClick={() => updatePassword(password)}\n              >\n                Save\n              </button>\n              {/* <button class=\"cancel\" type=\"button\">\n                Clear\n              </button> */}\n            </div>\n          </form>\n        </div>\n      </div>\n      {/* <div id=\"snackbar-container\"></div> */}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\n\nconst DeliveryCard = (props) => {\n  return (\n    <div className=\"col-md-3 delivery-card\">\n      {props.users.length === 0 ? (\n        <p>No Users!!!</p>\n      ) : (\n        props.users.map((user) => {\n          return (\n            <div className=\"card\" key={user.user_id}>\n              <img\n                className=\"img-fluid\"\n                src={user.user_image_url}\n                alt={user.user_username}\n              />\n              <p className=\"name\">\n                <b>Name:</b>&ensp;{user.user_username}\n              </p>\n              <p className=\"no\">\n                <b>Mobile:</b>&ensp;{user.user_phone_number}\n              </p>\n              <p className=\"add\">\n                <b>Address:</b>&ensp;{user.user_locality}\n              </p>\n              <div className=\"footer row\">\n                <button\n                  type=\"submit\"\n                  className=\"acpt\"\n                  onClick={() => props.acceptHandler(user)}\n                >\n                  Accept&nbsp;<i className=\"fas fa-check\"></i>\n                </button>\n                {user.userStatus === \"registered\" ? (\n                  <>\n                    <button\n                      type=\"submit\"\n                      className=\"rjct\"\n                      onClick={() => props.rejectHandler(user)}\n                    >\n                      Reject&nbsp;<i className=\"fas fa-times\"></i>\n                    </button>\n                  </>\n                ) : (\n                  <>\n                    <button\n                      type=\"submit\"\n                      className=\"rjct\"\n                      onClick={() => props.removeHandler(user)}\n                    >\n                      Remove&nbsp;<i className=\"fas fa-times\"></i>\n                    </button>\n                  </>\n                )}\n                {/* <button\n                  type=\"submit\"\n                  className=\"rjct\"\n                  onClick={() => props.rejectHandler(user)}\n                >\n                  Reject&nbsp;<i className=\"fas fa-times\"></i>\n                </button> */}\n              </div>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default DeliveryCard;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  acceptDeliveryUser,\n  getDeliveryUsers,\n  rejectDeliveryUser,\n  removeDeliveryUser,\n} from \"../api/DeliveryDB\";\nimport DeliveryCard from \"../reusable/DeliveryCard\";\nimport { Switch, Route, NavLink } from \"react-router-dom\";\nimport AuthContext from \"../context/auth-context\";\nimport { db } from \"../services/firebase\";\n\nconst Delivery = () => {\n  const [deliveryUsers, setDeliveryUsers] = useState({\n    newD: [],\n    verified: [],\n    rejected: [],\n  });\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    if (authCtx.user !== null) {\n      let deliveryList = [];\n      let location = authCtx.user.location;\n      // location = location[0].toUpperCase() + location.substring(1);\n      console.log(\"location: \", location);\n      var unsubscribe = db\n        .collection(\"DeliveryUsers\")\n        .doc(\"Branches\")\n        .collection(location)\n        .onSnapshot((docs) => {\n          docs.forEach((doc) => {\n            let data = doc.data();\n            if (data.user_image_url === \"\") {\n              data.user_image_url =\n                \"https://www.w3schools.com/howto/img_avatar.png\";\n            }\n            deliveryList.push(data);\n          });\n          // getDeliveryUsers(true, location, (deliveryList) => {\n          console.log(\"deliveryList\", deliveryList);\n          let newD = [];\n          let verified = [];\n          let rejected = [];\n          deliveryList.forEach((dguy) => {\n            if (dguy.verification === \"registered\") {\n              newD.push(dguy);\n            } else if (dguy.verification === \"rejected\") {\n              rejected.push(dguy);\n            } else if (dguy.verification === \"verified\") {\n              verified.push(dguy);\n            }\n          });\n          setDeliveryUsers({\n            newD: newD,\n            verified: verified,\n            rejected: rejected,\n          });\n          deliveryList = [];\n          // });\n        });\n\n      return () => {\n        unsubscribe();\n      };\n    }\n  }, [authCtx.user]);\n\n  const acceptHandler = (user) => {\n    acceptDeliveryUser(authCtx.user.location, user.user_id, (isAccepted) => {\n      if (isAccepted) {\n        console.log(\"accept\");\n        // newD -> verified\n        // let updatedUser = {\n        //   ...user,\n        //   userStatus: \"verified\"\n        // };\n        // setDeliveryUsers((prevState) => {\n        //   if (user.userStatus === \"registered\") {\n        //     let newD = [...prevState.newD];\n        //     let verified = [...prevState.verified];\n        //     let index = newD.findIndex((u) => u.user_id === user.user_id);\n        //     newD.splice(index, 1);\n        //     verified.push(updatedUser);\n        //     return {\n        //       ...prevState,\n        //       newD: newD,\n        //       verified: verified\n        //     };\n        //   } else {\n        //     let rejected = [...prevState.rejected];\n        //     let verified = [...prevState.verified];\n        //     let index = rejected.findIndex((u) => u.user_id === user.user_id);\n        //     rejected.splice(index, 1);\n        //     verified.push(updatedUser);\n        //     return {\n        //       ...prevState,\n        //       rejected: rejected,\n        //       verified: verified\n        //     };\n        //   }\n        // });\n        // newD.splice(index, noOfElementsToBeDeleted)\n      } else {\n        console.log(\"error-not accepted\");\n      }\n    });\n  };\n\n  const rejectHandler = (user) => {\n    rejectDeliveryUser(authCtx.user.location, user.user_id, (isRejected) => {\n      if (isRejected) {\n        console.log(\"rejected\");\n        let updatedUser = {\n          ...user,\n          userStatus: \"\",\n        };\n        setDeliveryUsers((prevState) => {\n          let newD = [...prevState.newD];\n          let rejected = [...prevState.rejected];\n          let index = newD.findIndex((u) => u.user_id === user.user_id);\n          newD.splice(index, 1);\n          rejected.push(updatedUser);\n          return {\n            ...prevState,\n            newD: newD,\n            rejected: rejected,\n          };\n        });\n      } else {\n        console.log(\"error-not rejected\");\n      }\n    });\n  };\n\n  const removeHandler = (user) => {\n    removeDeliveryUser(authCtx.user.location, user.user_id, (isRejected) => {\n      if (isRejected) {\n        console.log(\"removed\");\n\n        setDeliveryUsers((prevState) => {\n          let rejected = [...prevState.rejected];\n          let index = rejected.findIndex((u) => u.user_id === user.user_id);\n          rejected.splice(index, 1);\n          return {\n            ...prevState,\n            rejected: rejected,\n          };\n        });\n      } else {\n        console.log(\"error-not removed\");\n      }\n    });\n  };\n\n  let ui = null;\n  if (deliveryUsers === null) {\n    ui = <p>Loading!!!</p>;\n  } else if (deliveryUsers.verified.length === 0) {\n    ui = <p>No Delivery Persons!!!</p>;\n  } else {\n    ui = deliveryUsers.verified.map((user, i) => (\n      <div className=\"row details\" key={user.user_id}>\n        <p className=\"id\">{i + 1}</p>\n        <p className=\"name\">{user.user_username}</p>\n        <p className=\"number\">{user.user_phone_number}</p>\n        <p className=\"add\">{user.user_locality}</p>\n        <button\n          type=\"submit\"\n          className=\"action\"\n          onClick={() => rejectHandler(user)}\n        >\n          Remove\n        </button>\n      </div>\n    ));\n  }\n\n  return (\n    <>\n      <div className=\"row headnav\">\n        <div className=\"toggle\">\n          <NavLink to=\"/home/delivery/new\" className=\"newreq row\">\n            New Request\n          </NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/delivery/reject\" className=\"newreq row\">\n            Rejected\n          </NavLink>\n        </div>\n      </div>\n\n      <div className=\"delivery-person\">\n        {/* <div className=\"newreq row\">\n        <h2 className=\"col-12\">New Request</h2>\n        <DeliveryCard />\n      </div> */}\n        <Switch>\n          <Route path=\"/home/delivery/new\">\n            <div className=\"row newreq\">\n              <DeliveryCard\n                users={deliveryUsers.newD}\n                acceptHandler={acceptHandler}\n                rejectHandler={rejectHandler}\n              />\n            </div>\n          </Route>\n          <Route path=\"/home/delivery/reject\">\n            <div className=\"newreq row\">\n              <DeliveryCard\n                users={deliveryUsers.rejected}\n                acceptHandler={acceptHandler}\n                removeHandler={removeHandler}\n                // rejectHandler={rejectHandler}\n              />\n            </div>\n          </Route>\n        </Switch>\n        <div className=\"person-list\">\n          <h2>Delivery Persons List</h2>\n          <div className=\"row head\">\n            {/* <p className=\"id\">Delivery ID</p> */}\n            <p className=\"id\">No.</p>\n            <p className=\"name\">Person Name</p>\n            <p className=\"number\">Mobile Number</p>\n            <p className=\"add\">Address</p>\n            <p className=\"action\">Action</p>\n          </div>\n          {ui}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Delivery;\n","import { db } from \"../services/firebase\";\n\n// read all - food & grocery\n// not in use, bcs it needs unsubscribe, which should be directly done in respecive component\n// const getDeliveryUsers = (location, setList) => {\n//   let list = [];\n//   db.collection(\"DeliveryUsers\")\n//     .doc(\"Branches\")\n//     .collection(location)\n//     .where(\"verification\", \"==\", \"verified\")\n//     .onSnapshot((docs) => {\n//       docs.forEach((doc) => {\n//         list.push(doc.data());\n//       });\n//       setList(list);\n//       list = [];\n//     });\n// };\n\nconst acceptDeliveryUser = (location, id, setList) => {\n  // console.log(\"Accepted\");\n  let value = window.confirm(\"Do you want Accept\");\n  // location = location[0].toUpperCase() + location.substring(1);\n  if (value) {\n    db.collection(\"DeliveryUsers\")\n      .doc(\"Branches\")\n      .collection(location)\n      .doc(id)\n      .update({\n        verification: \"verified\",\n      })\n      .then(() => {\n        setList(true);\n      })\n      .catch((e) => {\n        console.log(e);\n\n        setList(false);\n      });\n  } else {\n    console.log(\"Not Accepted\");\n    setList(false);\n  }\n};\n\nconst rejectDeliveryUser = (location, id, setList) => {\n  console.log(\"Accepted\");\n  let value = window.confirm(\"Do you want to Reject\");\n  // location = location[0].toUpperCase() + location.substring(1);\n  if (value) {\n    db.collection(\"DeliveryUsers\")\n      .doc(\"Branches\")\n      .collection(location)\n      .doc(id)\n      .update({\n        verification: \"rejected\",\n      })\n      .then(() => {\n        setList(true);\n      })\n      .catch((e) => {\n        console.log(e);\n\n        setList(false);\n      });\n  } else {\n    console.log(\"Not Accepted\");\n    setList(false);\n  }\n};\n\nconst removeDeliveryUser = (location, id, setList) => {\n  // console.log(\"Deleted\");\n  let value = window.confirm(\"Do you want Delete\");\n  // location = location[0].toUpperCase() + location.substring(1);\n  if (value) {\n    console.log(\"Deleted\");\n    db.collection(\"DeliveryUsers\")\n      .doc(\"Branches\")\n      .collection(location)\n      .doc(id)\n      .delete()\n      .then(() => {\n        setList(true);\n      })\n      .catch((e) => {\n        console.log(e);\n\n        setList(false);\n      });\n  } else {\n    console.log(\"Not Accepted\");\n    setList(false);\n  }\n};\n\nexport {\n  // getDeliveryUsers,\n  acceptDeliveryUser,\n  rejectDeliveryUser,\n  removeDeliveryUser,\n};\n","import React, { useContext } from \"react\";\nimport { Switch, Route, NavLink } from \"react-router-dom\";\nimport Dashboard from \"../pages/Dashboard\";\nimport Food from \"./FoodItems/Food\";\nimport Orders from \"./Orders/Orders\";\nimport Grocery from \"./Grocery/Grocery\";\nimport AddNew from \"./FoodItems/AddNew/AddNew\";\nimport AddNewItem from \"./Grocery/AddNewItem/AddNewItem\";\n// import FoodItem from \"./FoodItems/FoodItem\";\nimport Items from \"../reusable/Items/Items\";\nimport Profile from \"../pages/Profile\";\nimport Delivery from \"../pages/Delivery\";\n\nimport AuthContext from \"../context/auth-context\";\n\nconst Sidebar = (props) => {\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <section>\n      {/* <!-- main content --> */}\n      <div className=\"container-fluid pt\">\n        <div className=\"flex-wrapper\">\n          <div className=\"sidebar\">\n            <ul className=\"sidebar-list\">\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/dashboard/allorder\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  {/* <i className=\"fas fa-tachometer-alt\"></i> */}\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/dashboard.png\"\n                    alt=\"dashboard\"\n                  />\n                  <span>Dashboard</span>\n                </NavLink>\n              </li>\n              {/* <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/profile\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  \n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/user.png\"\n                    alt=\"profile\"\n                  />\n                  <span>Profile</span>\n                </NavLink>\n              </li> */}\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/fooditems\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  {/* <i class=\"fas fa-utensils\"></i> */}\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/cutlery.png\"\n                    alt=\"fooditem\"\n                  />\n                  <span>Food Items</span>\n                </NavLink>\n              </li>\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/grocery\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  {/* <i className=\"fas fa-shopping-basket\"></i> */}\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/groceries.png\"\n                    alt=\"grocery\"\n                  />\n                  <span>Grocery</span>\n                </NavLink>\n              </li>\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/orders\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/order.png\"\n                    alt=\"fooditem\"\n                  />\n                  <span>Orders</span>\n                </NavLink>\n              </li>\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/delivery\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  <img\n                    className=\"img-fluid\"\n                    src=\"https://cdn-icons-png.flaticon.com/512/2830/2830312.png\"\n                    alt=\"fooditem\"\n                  />\n                  <span>Delivery</span>\n                </NavLink>\n              </li>\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/profile\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  <img\n                    className=\"img-fluid\"\n                    // src=\"/images/profile.png\"\n                    src={authCtx.user !== null && authCtx.user.img}\n                    alt=\"fooditem\"\n                  />\n                  <span>Profile</span>\n                </NavLink>\n              </li>\n              <li className=\"list-item\">\n                <div className=\"list-link\" onClick={props.logoutHandler}>\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/exit.png\"\n                    alt=\"fooditem\"\n                  />\n                  <span>Logout</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n          <div className=\"rt\">\n            <Switch>\n              {/* Food */}\n              <Route path=\"/home/fooditems/addnew\">\n                <AddNew type=\"Food\" />\n              </Route>\n              <Route path=\"/home/fooditems/breakfast\">\n                {/* <BreakFast /> */}\n                {/* <FoodItem title=\"BreakFast\" type=\"food\" /> */}\n                <Items title=\"BreakFast\" type=\"Food\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/fooditems/lunch\">\n                <Items title=\"Lunch\" type=\"Food\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/fooditems/dinner\">\n                <Items title=\"Dinner\" type=\"Food\" authCtx={authCtx} />\n              </Route>\n              {/* <Route path=\"/home/fooditems/starters\">\n                <Items title=\"Starters\" type=\"food\" authCtx={authCtx} />  \n              </Route>\n              <Route path=\"/home/fooditems/desserts\">\n                <Items title=\"Desserts\" type=\"food\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/fooditems/bigdeal\">\n                <Items title=\"BigDeal\" type=\"food\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/fooditems/juice\">\n                <Items title=\"Juice\" type=\"food\" authCtx={authCtx} />\n              </Route> */}\n              <Route path=\"/home/fooditems\">\n                <Food />\n              </Route>\n\n              {/* Food Orders */}\n              <Route path=\"/home/orders\">\n                <Orders />\n              </Route>\n\n              {/* Grocery */}\n              <Route path=\"/home/grocery/rice\">\n                <Items title=\"Rice\" type=\"Grocery\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/grocery/fruitsvegs\">\n                <Items\n                  title=\"Fruits_Vegetables\"\n                  type=\"Grocery\"\n                  authCtx={authCtx}\n                />\n              </Route>\n              {/* <Route path=\"/home/grocery/cannedgoods\">\n                <Items title=\"CannedGoods\" type=\"grocery\" authCtx={authCtx} />\n              </Route> */}\n              <Route path=\"/home/grocery/summer-drinks-beverages\">\n                <Items\n                  title=\"Summer_Drinks_Beverages\"\n                  type=\"Grocery\"\n                  authCtx={authCtx}\n                />\n              </Route>\n              <Route path=\"/home/grocery/soaps\">\n                <Items title=\"soaps\" type=\"Grocery\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/grocery/pharmacy\">\n                <Items title=\"Pharmacy\" type=\"Grocery\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/grocery/organics\">\n                <Items title=\"Organics\" type=\"Grocery\" authCtx={authCtx} />\n              </Route>\n              {/* <Route path=\"/home/grocery/cleaners\">\n                <Items title=\"Cleaners\" type=\"grocery\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/grocery/others\">\n                <Items title=\"Others\" type=\"grocery\" authCtx={authCtx} />\n              </Route> */}\n              <Route path=\"/home/grocery/addnewitem\">\n                <AddNewItem type=\"Grocery\" />\n              </Route>\n              <Route path=\"/home/grocery\">\n                <Grocery />\n              </Route>\n\n              {/* Delivery */}\n              <Route path=\"/home/delivery\">\n                <Delivery />\n              </Route>\n\n              {/* Profile */}\n              <Route path=\"/home/profile\">\n                <Profile />\n              </Route>\n\n              {/* Dashboard */}\n              <Route path=\"/home/dashboard/manual\">\n                <Dashboard />\n              </Route>\n              <Route path=\"/home/dashboard/delivered\">\n                <Dashboard type=\"food\" />\n              </Route>\n              <Route path=\"/home/dashboard/ondeliver\">\n                <Dashboard type=\"food\" />\n              </Route>\n              <Route path=\"/home/dashboard/preparing\">\n                <Dashboard type=\"food\" />\n              </Route>\n              <Route path=\"/home/dashboard/neworder\">\n                <Dashboard type=\"food\" />\n              </Route>\n              <Route path=\"/home/dashboard/allorder\">\n                <Dashboard type=\"food\" />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Sidebar;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../services/firebase\";\nimport IdleTimeoutModal from \"../ui/IdleTimeoutModal\";\nimport IdleTimerContainer from \"../helpers/IdleTimerContainer\";\nimport Navbar from \"../components/Navbar\";\nimport Sidebar from \"../components/Sidebar\";\nimport { useHistory } from \"react-router\";\nimport ReactNotifications from \"react-notifications-component\";\n// import AuthContext from \"../context/auth-context\";\n\nfunction Home(props) {\n  const [showTimeoutModal, setShowTimeoutModal] = useState(false);\n  const [isTimedout, setIsTimedout] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    history.push(\"/home/dashboard/allorder\");\n  }, []);\n\n  const handleClose = () => {\n    setShowTimeoutModal(false);\n    setIsTimedout(false);\n  };\n\n  const logoutHandler = () => {\n    auth\n      .signOut()\n      .then(() => {\n        // Sign-out successful.\n        console.log(\"signed out successfully...\");\n        // alert(\"signed out\");\n        props.history.replace(\"/\");\n      })\n      .catch((error) => {\n        // An error happened.\n        alert(\"Some Error To Logout!!!\");\n        console.log(error);\n      });\n  };\n\n  const timeoutModalHandler = () => {\n    setShowTimeoutModal(true);\n  };\n  return (\n    <div className=\"App\">\n      <ReactNotifications />\n      <IdleTimeoutModal\n        showModal={showTimeoutModal}\n        handleClose={handleClose}\n        handleLogout={logoutHandler}\n      />\n      <IdleTimerContainer\n        handleLogout={logoutHandler}\n        timeout={isTimedout}\n        timeoutModal={timeoutModalHandler}\n        timedoutHandler={(bool) => {\n          setIsTimedout(bool);\n        }}\n      />\n      <Navbar logoutHandler={logoutHandler} />\n      <Sidebar logoutHandler={logoutHandler} />\n    </div>\n  );\n}\nexport default Home;\n","import React from \"react\";\nimport Lottie from \"react-lottie\";\nimport { useHistory } from \"react-router\";\nimport * as pagenotfound from \"../assets/images/64076-404-not-found-page.json\";\n\nconst PageNotFound = () => {\n  const history = useHistory();\n  const defaultOptions1 = {\n    loop: true,\n    autoplay: true,\n    animationData: pagenotfound.default,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\"\n    }\n  };\n\n  return (\n    <div id=\"wrapper\" onClick={() => history.push(\"/\")}>\n      <Lottie options={defaultOptions1} height={500} width={1000} />\n      {/* <div id=\"info\">\n        <h3>This page could not be found</h3>\n      </div> */}\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import \"./styles.css\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport PageNotFound from \"./ui/404Error\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport AuthContext from \"./context/auth-context\";\n\nexport default function App() {\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!authCtx.isLoggedIn) {\n      history.replace(\"/\");\n    } else {\n      history.replace(\"/home\");\n    }\n  }, [authCtx.isLoggedIn]);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/home\" component={Home} />\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"*\" render={() => <PageNotFound />} />\n      </Switch>\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./context/auth-context\";\nimport { OrdersContextProvider } from \"./context/orders-context\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <AuthContextProvider>\n    <OrdersContextProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </OrdersContextProvider>\n  </AuthContextProvider>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__3R81p\",\"Button\":\"Login_Button__3M5ml\",\"Link\":\"Login_Link__1qBtC\"};"],"sourceRoot":""}