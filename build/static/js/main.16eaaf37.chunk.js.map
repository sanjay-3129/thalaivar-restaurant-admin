{"version":3,"sources":["ui/EditModal/EditModal.module.css","ui/Card/Card.module.css","ui/DeliveryModal/DeliveryModal.module.css","services/firebase.js","context/auth-context.js","ui/Input.js","pages/Login.js","ui/IdleTimeoutModal.js","helpers/IdleTimerContainer.js","context/orders-context.js","api/OrderDB.js","ui/Counter.js","components/Navbar.js","ui/Card/Card.js","ui/Backdrop.js","ui/DeliveryModal/DeliveryModal.js","components/Dashboard/OrderMaintain.js","api/ItemDB.js","components/Manual/ManualBilling.js","pages/Dashboard.js","components/FoodItems/Food.js","ui/Charts/LineChart.js","ui/Charts/PieChart.js","ui/Tables/Tables.js","helpers/ExportToExcel.js","components/Orders/Orders.js","reusable/Card/Card.js","components/Grocery/Grocery.js","components/FoodItems/AddNew/PreviewCard.js","components/FoodItems/AddNew/AddNewForm.js","reusable/Modals/AlertModal.js","components/FoodItems/AddNew/AddNew.js","components/Grocery/AddNewItem/PreviewCard.js","components/Grocery/AddNewItem/AddNewForm.js","components/Grocery/AddNewItem/AddNewItem.js","ui/EditModal/EditModal.js","ui/EditModal/GroceryEditModal.js","ui/Snackbar/Snackbar.js","reusable/Modals/DeleteConfirmModal.js","reusable/Items/Items.js","pages/Profile.js","reusable/DeliveryCard.js","pages/Delivery.js","api/DeliveryDB.js","components/Sidebar.js","pages/Home.js","ui/404Error.js","App.js","index.js","pages/Login.module.css"],"names":["module","exports","restaurant","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","auth","messaging","getToken","setTokenFound","currentToken","vapidKey","console","log","enablePersistence","experimentalTabSynchronization","then","catch","err","code","AuthContext","React","createContext","user","id","name","location","role","email","img","phone","isLoggedIn","setUser","setIsLoggedIn","logout","AuthContextProvider","props","useState","useEffect","userId","localStorage","getItem","collection","doc","get","data","e","Provider","value","status","signOut","removeItem","error","children","Input","Form","Group","className","controlId","Label","label","Control","type","placeholder","onChange","Value","isText","Text","text","Login","authCtx","useContext","setError","password","userCred","setUserCred","isTokenFound","token","setToken","tokenFunc","changeHandler","event","val","target","prevState","style","Alert","variant","onSubmit","preventDefault","signInWithEmailAndPassword","userCredential","uid","setItem","fcm_token","update","history","push","Button","IdleTimeOutModal","Modal","show","showModal","onHide","handleClose","Header","closeButton","Title","Body","Footer","onClick","handleLogout","IdleTimerContainer","idleTimerRef","useRef","timeoutDuration","ref","timeout","onIdle","timeoutModal","current","reset","timedoutHandler","onActive","OrdersContext","orderData","online","dinein","ready","cancelled","setOrderData","OrdersContextProvider","noOfDaysInNormalYear","noOfDaysInLeapYear","billPaidOrder","order","isAdded","orderType","items","daitem","its","item","updateitem","itemName","Name","itemId","itemPrice","itemSize","noOfQuantity","itemQuantity","order_items","actualPrice","totalPrice","timestamp","Date","getTime","date","day","getDate","month","getMonth","getFullYear","orders","FieldValue","arrayUnion","set","createDocumentIds","days","year","docIds","i","getOrders","setOrders","ty","datee","onlineStat","Array","fill","dineInStat","onlineRevenue","dineInRevenue","forEach","o","hour","parseInt","getHours","length","updateOrderStatus","isUpdated","dBoyId","userStatus","Counter","orderContext","isRestaurantOpen","setIsRestaurantOpen","sendData","isHoliday","getRestaurantStatus","telephone","paddingLeft","Check","checked","confirm","setRestaurantStatus","alert","Overlay","logoutHandler","Navbar","isOverlay","setIsOverlay","src","alt","href","to","activeClassName","Card","classes","Backdrop","onClose","position","top","left","width","height","zIndex","background","ModalOverlay","deliveryUsers","setDeliveryUsers","list","unsubscribe","where","onSnapshot","docs","dUser","currentOrders","user_id","orderId","address","userDetails","userAddress","ui","map","statusUi","styles","free","assign","assignDeliveryUser","span","busy","span1","title","user_username","textDecoration","row","marginBottom","no","user_phone_number","ord","class","modal","assignmodal","hname","hno","hstatus","hassign","hcurrentOrder","DeliveryModal","ReactDOM","createPortal","closeModal","document","getElementById","OrderMaintain","assignModal","setAssignModal","undefined","deliveryAssignHandler","pathname","includes","getDeliveredOrders","hours","mins","getMinutes","timePeriod","userName","order_address","payment","isPaid","noOfItems","deliveryCharge","addOutOfStock","branch","unit","minimumUnit","addItem","price","category","bucketName","storageRef","storage","subCategoryTimestamp","file","imgRef","child","put","getDownloadURL","nameSearch","createNameSearchArray","Bestseller","Type","actual_price","categories","currency","current_price","currentPrice","dealoftheday","dealOfTheDay","description","desc","image","isproductavailable","isProductAvailable","product_id","productId","quantityPerUnit","shop_name","name_search","bestSeller","BranchName","actualUnit","add","docRef","pName","toLowerCase","sum","ManualBilling","manual","setManual","generate","setGenerate","titles","setItems","listPromises","tit","Promise","all","res","getMultiTitleItems","onChangeHandler","removeOrder","htmlFor","marginRight","padding","createOrder","disabled","ongoingOrders","cursor","setCurrentOrder","justifyContent","alignItems","currentOrder","autoComplete","outline","priceUi","min","size","paymentMethod","window","generateBill","addTelOrders","Dashboard","ordersContext","setType","allOrders","newOrders","preparingOrders","onDeliveryOrders","deliveredOrders","food","grocery","setOutOfStockItems","telephoneBillNoFood","telephoneBillNoGrocery","manualBillNoFood","manualBillNoGrocery","setOngoingOrders","cancelReason","discount","latitude","longitude","tax","userid","navigator","serviceWorker","onmessage","notification","localForage","findIndex","v","messageType","store","addNotification","message","body","insert","container","animationIn","animationOut","dismiss","duration","onScreen","statData","sort","a","b","Function","listFood","index","splice","localforage","listGrocery","sendNotificationToDeliveryUser","dGuy","registration_ids","vibrate","sound","show_in_foreground","priority","content_available","user_token","headers","Headers","Authorization","fetch","method","JSON","stringify","response","json","updateOrder","updatedOrder","allIndex","newIndex","prepareIndex","path","newItem","l","updatedItem","sumPrice","cquarterPrice","chalfPrice","cfullPrice","time","newData","Food","LineChart","labels","stat","filter","config","datasets","borderColor","tension","options","chart","Chart","destroy","PieChart","backgroundColor","hoverOffset","Tables","textAlign","textTransform","ExportToExcel","apiData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","Orders","itemType","setFilter","setStat","showTable","setShowTable","toISOString","split","max","labelName","emptyData","noOfDays","isLeap","checkLeapYear","listOrders","values","getMonthOrders","listStat","monthStat","monthNo","noOfOrders","getYearOrders","updateItem","fontSize","PreviewCard","foodType","url","altName","fullPrice","AddNewForm","quarterPrice","halfPrice","draftHandler","required","clearHandler","DeleteConfirmModal","AddNew","offer","currencyCode","onSale","quaterPrice","cquaterPrice","setPrice","setAlert","$","prop","AlertModal","ename","files","URL","createObjectURL","priceItem","parseFloat","priceItemChangeHandler","quantity","units","pop","AddNewItem","isAddItem","pricee","quarter","half","full","setQuantity","singlenum","accept","on","click","change","this","reader","FileReader","onloadend","css","result","readAsDataURL","backgroundImage","paddingTop","btn","isUpdate","right","col","paddingRight","input","select","number","single","check","EditModal","singlerow","GroceryEditModal","snackbar","el","createElement","y","innerHTML","append","setTimeout","replace","confirmDelete","Items","deleteModal","setDeleteModal","updateModal","setUpdateModel","getItems","it","updateItemHandler","updatedData","refFromURL","delete","deleteItem","isDeleted","Profile","prfl_img","mno","setNewData","newPassword","confirmPassword","setPassword","x","toggleClass","for","authUser","snapshot","imgUrl","updateUser","onAuthStateChanged","updatePassword","DeliveryCard","users","user_image_url","user_locality","acceptHandler","rejectHandler","removeHandler","Delivery","newD","verified","rejected","deliveryList","dguy","verification","setList","acceptDeliveryUser","isAccepted","rejectDeliveryUser","isRejected","updatedUser","u","removeDeliveryUser","Sidebar","Grocery","Home","showTimeoutModal","setShowTimeoutModal","isTimedout","setIsTimedout","useHistory","IdleTimeoutModal","bool","PageNotFound","defaultOptions1","loop","autoplay","animationData","pagenotfound","rendererSettings","preserveAspectRatio","App","component","exact","render","rootElement"],"mappings":"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","file":"static/js/main.16eaaf37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"EditModal_modal__2yVmc\",\"row\":\"EditModal_row__2OiVa\",\"right\":\"EditModal_right__38gzX\",\"col\":\"EditModal_col__oZn6w\",\"input\":\"EditModal_input__2FwlV\",\"select\":\"EditModal_select__2dxIW\",\"number\":\"EditModal_number__1EfNZ\",\"btn\":\"EditModal_btn__18Nbr\",\"single\":\"EditModal_single__1If5m\",\"check\":\"EditModal_check__8Huuq\",\"label\":\"EditModal_label__39ZhB\",\"singlerow\":\"EditModal_singlerow__1w74i\",\"singlenum\":\"EditModal_singlenum__3QHmL\",\"singleprice\":\"EditModal_singleprice__1zjvQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__dwJ2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"DeliveryModal_modal__2NSac\",\"assignmodal\":\"DeliveryModal_assignmodal__2g9rr\",\"row\":\"DeliveryModal_row__24Ihd\",\"hname\":\"DeliveryModal_hname__hz91m\",\"hno\":\"DeliveryModal_hno__3ZOc7\",\"hstatus\":\"DeliveryModal_hstatus__3O2-a\",\"hassign\":\"DeliveryModal_hassign__2yYbC\",\"hcurrentOrder\":\"DeliveryModal_hcurrentOrder__3nyCV\",\"name\":\"DeliveryModal_name__2s8OA\",\"no\":\"DeliveryModal_no__3zRfB\",\"status\":\"DeliveryModal_status__2qO82\",\"assign\":\"DeliveryModal_assign__1E-Fs\",\"span\":\"DeliveryModal_span__2_NkE\"};","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/analytics\";\nimport \"firebase/storage\";\nimport \"firebase/messaging\";\n\n// config for institute\nconst config = {\n  apiKey: \"AIzaSyCmOWm_VEzYodG_PzusXD61HmEkSyV1Kcw\",\n  authDomain: \"thalaivan-restaurant.firebaseapp.com\",\n  projectId: \"thalaivan-restaurant\",\n  storageBucket: \"thalaivan-restaurant.appspot.com\",\n  messagingSenderId: \"1084918476722\",\n  appId: \"1:1084918476722:web:1502d45a5f59d483977eab\",\n  measurementId: \"G-ZKVE7EMKFJ\",\n};\n\nconst restaurant = firebase.initializeApp(config);\n\nrestaurant.analytics();\n// firebase.analytics();\nconst db = restaurant.firestore();\nconst auth = restaurant.auth();\nconst messaging = restaurant.messaging();\nconst publicKey =\n  \"BLA1gt_4yje_f8ttbbDAToMEeN1BT9qygiB5Bc8ShJh0qc_cTBcZUznZNd5A1XBla2lX-IMyLJhFzjIezu58jEI\";\n\n// notifications\nexport const getToken = async (setTokenFound) => {\n  let currentToken = \"\";\n  try {\n    currentToken = await messaging.getToken({ vapidKey: publicKey });\n    console.log(\"Current Token\", currentToken);\n    if (currentToken) {\n      setTokenFound(true);\n    } else {\n      setTokenFound(false);\n    }\n  } catch (error) {\n    console.log(\"An error occurred while retrieving token.\", error);\n  }\n  // messaging.onMessage((payload) => {\n  //   console.log(\"onmes---\");\n  //   // resolve(payload);\n  // });\n  return currentToken;\n};\n\n// messaging.getToken().then((currentToken) => {\n//   if (currentToken) {\n//     console.log(\"token\", currentToken);\n//   } else {\n//     // Show permission request.\n//     console.log(\n//       \"No Instance ID token available. Request permission to generate one.\"\n//     );\n//   }\n//   /** When app is active */\n//   firebase.messaging().onMessage(\n//     (payload) => {\n//       console.log(payload);\n//     },\n//     (e) => {\n//       console.log(e);\n//     }\n//   );\n// });\n\n// getToken();\nexport const onMessageListener = () =>\n  new Promise((resolve) => {\n    messaging.onMessage((payload) => {\n      console.log(\"onmes\");\n      resolve(payload);\n    });\n  });\n\n// offline support\ndb.enablePersistence({ experimentalTabSynchronization: true })\n  .then(() => {\n    console.log(\"Woohoo! Multi-Tab Persistence!\");\n  })\n  .catch((err) => {\n    if (err.code === \"failed-precondition\") {\n      // Multiple tabs open, persistence can only be enabled\n      // in one tab at a a time.\n      // ...\n      console.log(\n        \"multiple tab is opened please close this tab and use only one tab, when offline\"\n      );\n    } else if (err.code === \"unimplemented\") {\n      // The current browser does not support all of the\n      // features required to enable persistence\n      // ...\n      console.log(\n        \"Current Browser or its version doesn't support offline mode\"\n      );\n    }\n  });\n\nexport { db, auth, firebase, messaging };\n","import React, { useEffect, useState } from \"react\";\nimport { auth, db } from \"../services/firebase\";\n\nconst AuthContext = React.createContext({\n  user: {\n    id: \"\",\n    name: \"\",\n    location: \"\",\n    role: \"\",\n    email: \"\",\n    img: \"\",\n    phone: \"\",\n  },\n  isLoggedIn: false,\n  setUser: (user) => {},\n  setIsLoggedIn: () => {},\n  logout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const [user, setUser] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    let userId = localStorage.getItem(\"userId\");\n    if (userId !== null) {\n      // auth.onAuthStateChanged((user) => {\n      //   if (user !== null) {\n      //   }\n      // });\n      db.collection(\"admin\")\n        .doc(userId)\n        .get()\n        .then((doc) => {\n          setUser(doc.data());\n          setIsLoggedIn(true);\n        })\n        .catch((e) => console.log(e));\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, []);\n\n  const setMyUser = (user) => {\n    console.log(\"Setting User\", user);\n    setUser(user);\n  };\n\n  const setLoggedIn = (status) => {\n    setIsLoggedIn(status);\n  };\n\n  const logoutHandler = () => {\n    // console.log(\"logout\");\n    // return true;\n    auth\n      .signOut()\n      .then(() => {\n        // Sign-out successful.\n        console.log(\"signed out successfully...\");\n        // alert(\"signed out\");\n        localStorage.removeItem(\"userId\");\n        return true;\n      })\n      .catch((error) => {\n        // An error happened.\n        console.log(error);\n        return false;\n      });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: user,\n        setUser: setMyUser,\n        isLoggedIn: isLoggedIn,\n        setIsLoggedIn: setLoggedIn,\n        logout: logoutHandler,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst Input = (props) => {\n  return (\n    <div>\n      <Form.Group className=\"mb-3\" controlId={props.id}>\n        <Form.Label>{props.label}</Form.Label>\n        <Form.Control\n          type={props.type}\n          placeholder={props.placeholder}\n          onChange={props.onChange}\n          value={props.Value}\n          name={props.name}\n        />\n        {props.isText && (\n          <Form.Text className=\"text-muted\">{props.text}</Form.Text>\n        )}\n      </Form.Group>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Button, Alert } from \"react-bootstrap\";\nimport AuthContext from \"../context/auth-context\";\nimport { auth, db, getToken } from \"../services/firebase\";\nimport Input from \"../ui/Input\";\nimport style from \"./Login.module.css\";\n\nconst Login = (props) => {\n  const authCtx = useContext(AuthContext);\n  const [error, setError] = useState();\n  const [userCred, setUserCred] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [isTokenFound, setTokenFound] = useState(false);\n  const [token, setToken] = useState(false);\n  console.log(\"Token found\", isTokenFound);\n\n  // console.log(\"navigator\", navigator.onLine);\n  useEffect(() => {\n    let data;\n    async function tokenFunc() {\n      data = await getToken(setTokenFound);\n      if (data) {\n        setToken(data);\n        console.log(\"Token is\", data);\n      }\n      return data;\n    }\n    tokenFunc();\n  }, [setTokenFound]);\n\n  const changeHandler = (event) => {\n    let val = event.target.value;\n    setUserCred((prevState) => {\n      return {\n        ...prevState,\n        [event.target.name]: val\n      };\n    });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    // firebase signin auth\n    auth\n      .signInWithEmailAndPassword(userCred.email, userCred.password)\n      .then((userCredential) => {\n        // setOpen(true);\n        // Signed in\n        let userId = userCredential.user.uid;\n        console.log(\"userId\", userId);\n        localStorage.setItem(\"userId\", userId);\n        // props.history.replace(`/home?userId=${userId}`);\n        db.collection(\"admin\")\n          .doc(userId)\n          .get()\n          .then((doc) => {\n            console.log(doc.data());\n            let user = doc.data();\n            if (user.fcm_token !== token) {\n              user = {\n                ...user,\n                fcm_token: token\n              };\n              db.collection(\"admin\")\n                .doc(userId)\n                .update({\n                  fcm_token: token\n                })\n                .then(() => {})\n                .catch((e) => console.log(e));\n            }\n            console.log(\"user\", user);\n            authCtx.setUser(user);\n            authCtx.setIsLoggedIn(true);\n            // sessionStorage.setItem(\"userId\", userId);\n          })\n          .catch((e) => console.log(e));\n        props.history.push(\"/home\");\n      })\n      .catch((e) => {\n        console.log(e.code);\n        if (e.code === \"auth/wrong-password\") {\n          setError(\"Incorrect password. Try again.\");\n        } else if (e.code === \"auth/network-request-failed\") {\n          setError(\"Internet connection is down!!!\");\n        } else {\n          setError(\"User doesn't exist. Please do register.\");\n        }\n      });\n  };\n\n  return (\n    <>\n      <div className={style.Login}>\n        {/* <Snackbar open={open} handleClose={handleClose} /> */}\n        <h1>Login</h1>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        <form onSubmit={submitHandler}>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            label=\"Email address\"\n            id=\"email\"\n            placeholder=\"Enter email\"\n            text=\"We'll never share your email with anyone else.\"\n            isText=\"true\"\n            onChange={changeHandler}\n            value={userCred.email}\n          />\n\n          <Input\n            type=\"password\"\n            label=\"Password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={changeHandler}\n            value={userCred.password}\n          />\n\n          <Button className={style.Button} variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n          <Button type=\"reset\" className={style.Button} variant=\"primary\">\n            Clear\n          </Button>\n          <br />\n          <br />\n          <br />\n          {/* <p style={{ display: \"inline\" }}>Don't have an account? </p>\n          <a className={style.Link} href=\"/signup\">\n            Register\n          </a> */}\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\n// import { propTypes } from \"react-bootstrap/esm/Image\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst IdleTimeOutModal = (props) => {\n  return (\n    <Modal show={props.showModal} onHide={props.handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>You Have Been Idle!</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>You Will Get Timed Out. You want to stay?</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"danger\" onClick={props.handleLogout}>\n          Logout\n        </Button>\n        <Button variant=\"primary\" onClick={props.handleClose}>\n          Stay\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default IdleTimeOutModal;\n","import React, { useRef, useState } from \"react\";\nimport IdleTimer from \"react-idle-timer\";\n\nconst IdleTimerContainer = (props) => {\n  const idleTimerRef = useRef(null);\n  const [timeoutDuration, setTimeoutDuration] = useState(1000 * 60 * 15); // 10mins\n\n  const onIdleHandler = () => {\n    console.log(\"user is idle...\");\n    if (props.timeout) {\n      props.handleLogout();\n    } else {\n      props.timeoutModal(); // opens the modal\n      idleTimerRef.current.reset();\n      props.timedoutHandler(true); // after the modal, if they are not responding then\n    }\n    // props.timeoutModal(); // opens the modal\n  };\n\n  const onActiveHandler = () => {\n    console.log(\"user is active...\");\n    props.timedoutHandler(false);\n  };\n\n  // const onActionHandler = () => {\n  //   console.log(\"user action...\");\n  //   props.timedoutHandler(false);\n  // };\n\n  return (\n    <IdleTimer\n      ref={idleTimerRef}\n      timeout={timeoutDuration} // {1000 * 60 * 15}, {1000 * 5 * 1}\n      onIdle={onIdleHandler}\n      onActive={onActiveHandler}\n      // onAction={onActionHandler}\n    />\n  );\n};\n\nexport default IdleTimerContainer;\n","import React, { useEffect, useState } from \"react\";\n\nconst OrdersContext = React.createContext({\n  orderData: {\n    online: 0,\n    dinein: 0,\n    ready: 0,\n    cancelled: 0\n  },\n  setOrderData: (orderData) => {}\n});\n\nexport const OrdersContextProvider = (props) => {\n  const [orderData, setOrderData] = useState({\n    online: 0,\n    dinein: 0,\n    ready: 0,\n    cancelled: 0\n  });\n\n  // useEffect(() => {\n  // }, []);\n\n  const setMyOrdersData = (orderData) => {\n    console.log(\"Setting orderData\", orderData);\n    setOrderData(orderData);\n  };\n\n  return (\n    <OrdersContext.Provider\n      value={{\n        orderData: orderData,\n        setOrderData: setMyOrdersData\n      }}\n    >\n      {props.children}\n    </OrdersContext.Provider>\n  );\n};\n\nexport default OrdersContext;\n","import localforage from \"localforage\";\nimport { CardColumns } from \"react-bootstrap\";\nimport { db, firebase } from \"../services/firebase\";\n\nconst noOfDaysInNormalYear = {\n  \"01\": 31,\n  \"02\": 28,\n  \"03\": 31,\n  \"04\": 30,\n  \"05\": 31,\n  \"06\": 30,\n  \"07\": 31,\n  \"08\": 31,\n  \"09\": 30,\n  10: 31,\n  11: 30,\n  12: 31,\n};\nconst noOfDaysInLeapYear = {\n  \"01\": 31,\n  \"02\": 29,\n  \"03\": 31,\n  \"04\": 30,\n  \"05\": 31,\n  \"06\": 30,\n  \"07\": 31,\n  \"08\": 31,\n  \"09\": 30,\n  10: 31,\n  11: 30,\n  12: 31,\n};\n\n// program to check leap year\nconst checkLeapYear = (year) => {\n  //three conditions to find out the leap year\n  if ((0 === year % 4 && 0 !== year % 100) || 0 === year % 400) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst genrateBillOrder = (order) => {\n  console.log(\"orderdb genbil\", order);\n\n  //local storage code\n};\n\nconst billPaidOrder = (order, type, location, isAdded) => {\n  console.log(\"billPaidOrder\", order, location, type);\n  console.log(\"->\", order.items);\n  let orderType;\n  if (type === \"food\") {\n    orderType = \"FoodOrders\";\n  } else {\n    orderType = \"GroceryOrders\";\n  }\n\n  let daitem = order.items;\n  let its = [];\n  for (let item of daitem) {\n    let updateitem = {\n      itemName: item.Name,\n      itemId: item.id,\n      itemPrice: +item.itemPrice,\n      itemSize: +item.itemSize,\n      noOfQuantity: +item.itemQuantity,\n    };\n    its.push(updateitem);\n  }\n\n  let data;\n\n  if (type === \"food\") {\n    data = {\n      ...order,\n      order_items: its,\n      actualPrice: order.totalPrice,\n      status: \"delivered\",\n    };\n  } else {\n    data = {\n      ...order,\n      order_items: its,\n      actualPrice: order.totalPrice,\n      status: \"delivered\",\n    };\n  }\n  data.timestamp = \"\" + new Date().getTime();\n  const date = new Date();\n  let day = date.getDate();\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n  let month = date.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  // delete items bcs we have order_items\n  // console.log(\"data-updated\", data, `${day}.${month}.${date.getFullYear()}`);\n  delete data.items;\n\n  // let orderRef = [];\n  // let df = orderRef.push(data);\n\n  db.collection(orderType)\n    .doc(\"branch\")\n    .collection(location)\n    .doc(`${day}.${month}.${date.getFullYear()}`)\n    .update({\n      orders: firebase.firestore.FieldValue.arrayUnion(data),\n    })\n    .then(() => {\n      isAdded(true);\n      console.log(\"Dine in Item updated\");\n    })\n    .catch((e) => {\n      // console.log(e, \"errorrrrs\");\n      db.collection(orderType)\n        .doc(\"branch\")\n        .collection(location)\n        .doc(`${day}.${month}.${date.getFullYear()}`)\n        .set({\n          orders: [data],\n        })\n        .then(() => {\n          isAdded(true);\n          console.log(\"Dine in Item created\");\n        })\n        .catch((e) => {\n          // console.log(e);\n          isAdded(false);\n        });\n    });\n};\n\nconst createDocumentIds = (days, month, year) => {\n  let docIds = [];\n  for (let i = 1; i <= days; i++) {\n    let doc = \"\";\n    if (i < 10) {\n      doc = \"0\" + i + \".\" + month + \".\" + year;\n    } else {\n      doc = i + \".\" + month + \".\" + year;\n    }\n    docIds.push(doc);\n  }\n  return docIds;\n};\n\nconst addTelOrders = (order, type, location, isAdded) => {\n  console.log(\"..............>>\", order, location);\n  console.log(\"->\", order.items, type);\n  let orderType;\n  if (type === \"food\") {\n    orderType = \"FoodOrders\";\n  } else {\n    orderType = \"GroceryOrders\";\n  }\n\n  let daitem = order.items;\n  let its = [];\n  for (let item of daitem) {\n    let updateitem = {\n      itemName: item.Name,\n      itemId: item.id,\n      itemPrice: item.itemPrice,\n      itemSize: item.itemSize,\n      // noOfQuantity: item.itemQuantity\n    };\n    its.push(updateitem);\n  }\n  // console.log(\"itss\", its);\n  let data;\n  if (type === \"food\") {\n    data = {\n      ...order,\n      order_items: its,\n      actualPrice: order.totalPrice,\n      status: \"booked\",\n    };\n  } else {\n    data = {\n      ...order,\n      order_items: its,\n      actualPrice: order.totalPrice,\n      status: \"booked\",\n    };\n  }\n  data.timestamp = \"\" + new Date().getTime();\n  const date = new Date();\n  let day = date.getDate();\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n  let month = date.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  // delete items bcs we have order_items\n  delete data.items;\n  console.log(\"ordersss\", data);\n\n  db.collection(orderType)\n    .doc(\"todayOrders\")\n    .collection(location)\n    .doc(data.id)\n    .set(data)\n    .then((docRef) => {\n      isAdded(true);\n    })\n    .catch((e) => {\n      console.log(e);\n      isAdded(false);\n    });\n};\n\nconst getDeliveredOrders = (type, location, setOrders) => {\n  let ty = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n  } else {\n    ty = \"GroceryOrders\";\n  }\n  let date = new Date();\n  let day = date.getDate();\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n  let month = date.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  let year = date.getFullYear();\n  date = day + \".\" + month + \".\" + year;\n  db.collection(ty)\n    .doc(\"branch\")\n    .collection(location)\n    .doc(date)\n    .get()\n    .then((doc) => {\n      let orders = doc.data().orders;\n      setOrders(orders);\n    })\n    .catch((e) => {\n      console.log(e);\n      setOrders(null);\n    });\n};\n\n// // read all - food & grocery\nconst getOrders = (date, type, location, setOrders) => {\n  // let list = [];\n  let ty = \"\";\n  // let date = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n    // date = \"02.11.2021\";\n  } else {\n    ty = \"GroceryOrders\";\n    // date = \"03.11.2021\";\n  }\n  let datee = new Date();\n  let day = datee.getDate();\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n  let month = datee.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  let year = datee.getFullYear();\n  date = day + \".\" + month + \".\" + year;\n  // console.log(\"date\", date);\n  // let listStat = new Array(10).fill(0);\n  let onlineStat = new Array(10).fill(0);\n  let dineInStat = new Array(10).fill(0);\n  db.collection(ty)\n    .doc(\"branch\")\n    .collection(location)\n    .doc(date)\n    .get()\n    .then((doc) => {\n      let orders = doc.data().orders;\n      // console.log(\"o\", orders);\n      // let monthStat = doc.data().month;\n      let onlineRevenue = 0;\n      let dineInRevenue = 0;\n      // console.log(orders);\n      orders.forEach((o) => {\n        let hour = new Date(parseInt(o.timestamp)).getHours();\n        if (o.type === \"online\") {\n          onlineRevenue += o.totalPrice;\n        } else {\n          dineInRevenue += o.totalPrice;\n        }\n        // console.log(hour);\n        if (hour >= 6 && hour < 8) {\n          if (o.type === \"online\") {\n            onlineStat[0]++;\n          } else {\n            dineInStat[0]++;\n          }\n        } else if (hour >= 8 && hour < 10) {\n          if (o.type === \"online\") {\n            onlineStat[1]++;\n          } else {\n            dineInStat[1]++;\n          }\n        } else if (hour >= 10 && hour < 12) {\n          if (o.type === \"online\") {\n            onlineStat[2]++;\n          } else {\n            dineInStat[2]++;\n          }\n        } else if (hour >= 12 && hour < 14) {\n          if (o.type === \"online\") {\n            onlineStat[3]++;\n          } else {\n            dineInStat[3]++;\n          }\n        } else if (hour >= 14 && hour < 16) {\n          if (o.type === \"online\") {\n            onlineStat[4]++;\n          } else {\n            dineInStat[4]++;\n          }\n        } else if (hour >= 16 && hour < 18) {\n          if (o.type === \"online\") {\n            onlineStat[5]++;\n          } else {\n            dineInStat[5]++;\n          }\n        } else if (hour >= 18 && hour < 20) {\n          if (o.type === \"online\") {\n            onlineStat[6]++;\n          } else {\n            dineInStat[6]++;\n          }\n        } else if (hour >= 20 && hour < 22) {\n          if (o.type === \"online\") {\n            onlineStat[7]++;\n          } else {\n            dineInStat[7]++;\n          }\n        } else if (hour >= 22 && hour < 24) {\n          if (o.type === \"online\") {\n            onlineStat[8]++;\n          } else {\n            dineInStat[8]++;\n          }\n        } else if (hour >= 0 && hour < 6) {\n          if (o.type === \"online\") {\n            onlineStat[9]++;\n          } else {\n            dineInStat[9]++;\n          }\n        }\n      });\n      // monthStat.sort((a, b) =>\n      //   a.monthNo > b.monthNo ? 1 : b.monthNo > a.monthNo ? -1 : 0\n      // );\n      // for (let i = 0; i < monthStat.length; i++) {\n      //   listStat[i] += monthStat[i].noOfOrders;\n      // }\n      // console.log(\"list-data\", listStat);\n      if (orders.length === 0) {\n        setOrders(\"empty\");\n      } else {\n        let listStat = {\n          onlineStat: onlineStat,\n          onlineRevenue: onlineRevenue,\n          dineInStat: dineInStat,\n          dineInRevenue: dineInRevenue,\n        };\n        setOrders(orders, listStat);\n      }\n    })\n    .catch((e) => {\n      let listStat = {\n        onlineStat: 0,\n        onlineRevenue: 0,\n        dineInStat: 0,\n        dineInRevenue: 0,\n      };\n      console.log(\"getFo\", e);\n      setOrders(\"empty\", listStat);\n    });\n};\n\n// get orders for whole month\nconst getMonthOrders = (type, location, filter, setOrders) => {\n  // current month\n  // previous month - differnt year\n  let date = filter.value.split(\"-\");\n  let year = date[0];\n  let month = date[1];\n  let days;\n  let noOfDays;\n\n  let ty = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n    // date = \"02.11.2021\";\n  } else {\n    ty = \"GroceryOrders\";\n    // date = \"03.11.2021\";\n  }\n  let list = [];\n  let listPromises = [];\n  // leap year or not\n  let isLeap = checkLeapYear(parseInt(year));\n  if (isLeap) {\n    days = noOfDaysInNormalYear;\n  } else {\n    days = noOfDaysInLeapYear;\n  }\n  if (new Date().getMonth() + 1 == month) {\n    // current month\n    noOfDays = new Date().getDate();\n  } else {\n    // other month\n    noOfDays = days[month];\n  }\n  let docIds = createDocumentIds(noOfDays, month, year);\n  // console.log(\"docIds\", docIds);\n  docIds.forEach((id) => {\n    listPromises.push(\n      db.collection(ty).doc(\"branch\").collection(location).doc(id).get()\n    );\n  });\n  let listOrders = [];\n  // creating empty arrays\n  // let listStat = new Array(noOfDays).fill(0);\n  let onlineStat = new Array(noOfDays).fill(0);\n  let dineInStat = new Array(noOfDays).fill(0);\n  let onlineRevenue = 0;\n  let dineInRevenue = 0;\n  Promise.all(listPromises)\n    .then((values) => {\n      values.forEach((val) => {\n        // console.log(\"data\", val.data());\n        let data = val.data();\n        list.push(data);\n      });\n    })\n    .then(() => {\n      if (list.length === 0) {\n        setOrders(\"empty\");\n      } else {\n        // console.log(\"else\", list);\n        for (let i = 0; i < list.length; i++) {\n          // console.log(\"list\", list);\n          if (list[i] !== undefined) {\n            let orders = list[i].orders;\n            listOrders = [...listOrders, ...orders];\n            // if(list[i])\n            orders.forEach((o) => {\n              if (o.type === \"online\") {\n                onlineStat[i]++;\n                onlineRevenue += o.totalPrice;\n              } else {\n                dineInStat[i]++;\n                dineInRevenue += o.totalPrice;\n              }\n            });\n          }\n        }\n        // console.log(list);\n        let listStat = {\n          onlineStat: onlineStat,\n          onlineRevenue: onlineRevenue,\n          dineInStat: dineInStat,\n          dineInRevenue: dineInRevenue,\n        };\n        setOrders(listOrders, listStat);\n      }\n    })\n    .catch((e) => {\n      let listStat = {\n        onlineStat: 0,\n        onlineRevenue: 0,\n        dineInStat: 0,\n        dineInRevenue: 0,\n      };\n      setOrders(\"empty\", listStat);\n      console.log(e);\n    });\n};\n\n// get orders for whole year\nconst getYearOrders = (type, location, filter, setOrders) => {\n  let ty = \"\";\n  let date = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n    // date = \"02.11.2021\";\n  } else {\n    ty = \"GroceryOrders\";\n    // date = \"03.11.2021\";\n  }\n\n  let list = [];\n  let listOrders = [];\n  let listStat = [];\n  let listPromises = [];\n  let year = filter.value;\n  let docIds = createDocumentIds(31, \"12\", year);\n  // console.log(\"docIds\", docIds);\n  docIds.forEach((id) => {\n    listPromises.push(\n      db.collection(ty).doc(\"branch\").collection(location).doc(id).get()\n    );\n  });\n\n  Promise.all(listPromises)\n    .then((values) => {\n      values.forEach((val) => {\n        // console.log(\"data\", val.data());\n        let data = val.data();\n        if (data !== undefined) {\n          list.push(data);\n          // let order = val.data().orders;\n          // let statData = val.data().month;\n          // listOrders.push(order);\n          // listStat.push(statData);\n        }\n      });\n    })\n    .then(() => {\n      // console.log(\"list\", list);\n      if (list.length === 0) {\n        setOrders(\"empty\");\n      } else {\n        list.forEach((l) => {\n          listOrders = [...listOrders, ...l.orders];\n        });\n        let monthStat = list[list.length - 1].month;\n        monthStat.sort((a, b) =>\n          a.monthNo > b.monthNo ? 1 : b.monthNo > a.monthNo ? -1 : 0\n        );\n        for (let i = 0; i < monthStat.length; i++) {\n          listStat[i] += monthStat[i].noOfOrders;\n        }\n        // console.log(\"list-data\", listStat);\n        setOrders(listOrders, listStat);\n      }\n    })\n    .catch((e) => console.log(e));\n};\nvar unsubscribe;\n\nconst removeListener = () => {\n  try {\n    if (unsubscribe instanceof Function) {\n      unsubscribe();\n    } else {\n      console.log(\"Not a function\");\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst getTodayOrders = (date, type, location, setOrders) => {\n  let ty = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n    // date = \"02.11.2021\";\n  } else {\n    ty = \"GroceryOrders\";\n    // date = \"03.11.2021\";\n  }\n  let list = [];\n  unsubscribe = db\n    .collection(ty)\n    .doc(\"todayOrders\")\n    .collection(location)\n    .onSnapshot(\n      (docs) => {\n        docs.forEach((doc) => {\n          list.push(doc.data());\n        });\n        setOrders(list);\n        list = [];\n        console.log(\"unsub\", unsubscribe);\n      },\n      (e) => console.log(e)\n    );\n  // db.collection(ty)\n  //   .doc(\"todayOrders\")\n  //   .collection(location)\n  //   .get()\n  //   .then((docs) => {\n  //     docs.forEach((doc) => {\n  //       // console.log(\"doc\", doc.data());\n  //       list.push(doc.data());\n  //     });\n  //     setOrders(list);\n  //   })\n  //   .catch((e) => console.log(e));\n  // db.collection(ty)\n  //   .doc(\"todayOrders\")\n  //   .collection(location)\n  //   .onSnapshot((docs) => {\n  //     docs.forEach((doc) => {\n  //       list.push(doc.data());\n  //     });\n  //     setOrders(list);\n  //     list = [];\n  //   });\n};\n\nconst updateOrderStatus = (type, location, order, status, isUpdated) => {\n  let ty = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n    // date = \"02.11.2021\";\n  } else {\n    ty = \"GroceryOrders\";\n    // date = \"03.11.2021\";\n  }\n\n  // let orderStatus = status;\n  let data = \"\";\n  if (status === \"preparing\") {\n    data = {\n      status: \"preparing\",\n    };\n    db.collection(ty)\n      .doc(\"todayOrders\")\n      .collection(location)\n      .doc(order.id)\n      .update(data)\n      .then(() => {\n        isUpdated(true);\n      })\n      .catch((e) => {\n        console.log(e);\n        isUpdated(false);\n      });\n  } else if (status === \"assigned\") {\n    data = {\n      status: \"assigned\",\n      dBoyId: order.dBoyId,\n    };\n    db.collection(ty)\n      .doc(\"todayOrders\")\n      .collection(location)\n      .doc(order.id)\n      .update(data)\n      .then(() => {\n        db.collection(\"DeliveryUsers\")\n          .doc(\"Branches\")\n          .collection(location)\n          .doc(order.dBoyId)\n          .update({\n            userStatus: \"Assigned\",\n          })\n          .then(() => {\n            isUpdated(true);\n          })\n          .catch((e) => {\n            console.log(e);\n            // isUpdated(false);\n          });\n      })\n      .catch((e) => {\n        console.log(e);\n        isUpdated(false);\n      });\n  }\n  console.log(\"updateOrderStatus\", location, order.id);\n};\n\nconst getRestaurantStatus = (location, sendData) => {\n  db.collection(\"meta\")\n    .doc(\"metaDetails\")\n    .get()\n    .then((doc) => {\n      console.log(doc.data());\n      sendData({\n        status: \"success\",\n        data: doc.data().isHoliday[`${location}`],\n      });\n    })\n    .catch((e) => {\n      console.log(e);\n      sendData({\n        status: \"failure\",\n        error: e,\n      });\n    });\n};\n\nconst setRestaurantStatus = (location, isRestaurantOpen, sendData) => {\n  var isHoliday = {};\n  isHoliday[`isHoliday.${location}`] = isRestaurantOpen;\n\n  console.log(isHoliday, location, isRestaurantOpen);\n\n  db.collection(\"meta\")\n    .doc(\"metaDetails\")\n    .update(isHoliday)\n    .then(() => {\n      sendData(true);\n    })\n    .catch((e) => {\n      console.log(e);\n      sendData(false);\n    });\n};\n\n// Get Orders Based On Parameters\n// const getOrdersBP = (type, location, setOrders) => {};\n\nexport {\n  getOrders,\n  getTodayOrders,\n  getMonthOrders,\n  getYearOrders,\n  updateOrderStatus,\n  addTelOrders,\n  genrateBillOrder,\n  billPaidOrder,\n  removeListener,\n  getDeliveredOrders,\n  getRestaurantStatus,\n  setRestaurantStatus,\n};\n\n// const updateOrderStatus = (date, type, location, order, status) => {\n//   console.log(\"updateOrderStatusDB\", order, status);\n//   // if u have listener then no need to get orders again\n//   // now we will get the order and update immedietly\n//   // let list = [];\n//   let ty = \"\";\n//   // let date = \"\";\n//   if (type === \"food\") {\n//     ty = \"FoodOrders\";\n//     date = \"02.11.2021\";\n//   } else {\n//     ty = \"GroceryOrders\";\n//     date = \"03.11.2021\";\n//   }\n//   getTodayOrders(date, type, location, (orders, manualBillNo) => {\n//     if (orders === \"empty\") {\n//       console.log(\"No Items!!!\");\n//     } else {\n//       console.log(\"ordersINDB\", orders, manualBillNo);\n//       let index = orders.findIndex((o) => o.id === order.id);\n//       let updatedOrder = {\n//         ...order,\n//         status: status\n//       };\n//       orders[index] = updatedOrder;\n//       db.collection(ty)\n//         .doc(\"branch\")\n//         .collection(location)\n//         .doc(date)\n//         .update({\n//           orders: orders\n//         })\n//         .then(() => {\n//           console.log(\"successfully updated!!!\");\n//         })\n//         .catch((e) => console.log(e));\n//     }\n//   });\n// };\n\n// const getTodayOrders = (date, type, location, setOrders) => {\n//   // let list = [];\n//   let ty = \"\";\n//   // let date = \"\";\n//   if (type === \"food\") {\n//     ty = \"FoodOrders\";\n//     date = \"02.11.2021\";\n//   } else {\n//     ty = \"GroceryOrders\";\n//     date = \"03.11.2021\";\n//   }\n//   // let date = new Date();\n//   // let day = date.getDate();\n//   // if (day < 10) {\n//   //   day = \"0\" + day;\n//   // }\n//   // let month = date.getMonth() + 1;\n//   // if (month < 10) {\n//   //   month = \"0\" + month;\n//   // }\n//   // let year = date.getFullYear();\n//   // date = day + \".\" + month + \".\" + year;\n//   // console.log(\"date\", date);\n//   db.collection(ty)\n//     .doc(\"branch\")\n//     .collection(location)\n//     .doc(date)\n//     // .get()\n//     // .then((doc) => {\n//     .onSnapshot((doc) => {\n//       let orders = doc.data().orders;\n//       let manualBillingNo = doc.data().manualBillNo;\n//       // console.log(\"o\", orders);\n//       // let monthStat = doc.data().month;\n//       if (orders.length === 0) {\n//         setOrders(\"empty\");\n//       } else {\n//         setOrders(orders, manualBillingNo);\n//       }\n//     });\n//   // .catch((e) => {\n//   //   console.log(\"getFo\", e);\n//   //   setOrders(\"empty\");\n//   // });\n// };\n","import React, { useContext, useEffect, useState } from \"react\";\nimport OrdersContext from \"../context/orders-context\";\nimport Form from \"react-bootstrap/Form\";\nimport { getRestaurantStatus, setRestaurantStatus } from \"../api/OrderDB\";\nimport AuthContext from \"../context/auth-context\";\n\nconst Counter = (props) => {\n  const orderContext = useContext(OrdersContext);\n  const authCtx = useContext(AuthContext);\n  const [isRestaurantOpen, setIsRestaurantOpen] = useState(false);\n\n  useEffect(() => {\n    getRestaurantStatus(authCtx.user.location, (val) => {\n      console.log(\"asdas\", val);\n      if (val.status === \"success\") {\n        setIsRestaurantOpen(val.data);\n      }\n    });\n  }, [authCtx.user.location]);\n\n  const setRestaurantOpen = () => {\n    const ques = isRestaurantOpen\n      ? \"Do you want to close the restaurant?\"\n      : \"Do you want to open the restaurant?\";\n\n    if (confirm(ques) === true) {\n      setRestaurantStatus(authCtx.user.location, !isRestaurantOpen, (val) => {\n        if (val) {\n          setIsRestaurantOpen((prevState) => !prevState);\n        } else {\n          alert(\"Some error, try after sometime!!!\");\n        }\n      });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"row header-count\">\n        <div className=\"inner-div\">\n          <div className=\"card\">\n            <h5>Online Orders:</h5>\n            <p className=\"count\">{orderContext.orderData.online}</p>\n          </div>\n        </div>\n        <div className=\"inner-div\">\n          <div className=\"card\">\n            <h5>Telephone:</h5>\n            <p className=\"count\">{orderContext.orderData.telephone}</p>\n          </div>\n        </div>\n        <div className=\"inner-div\">\n          <div className=\"card\">\n            <h5>On-Delivery:</h5>\n            <p className=\"count\">{orderContext.orderData.ready}</p>\n          </div>\n        </div>\n        <div className=\"inner-div\">\n          <div className=\"card\">\n            <h5>Cancelled:</h5>\n            <p className=\"count\">{orderContext.orderData.cancelled}</p>\n          </div>\n        </div>\n      </div>\n      <div style={{ paddingLeft: \"300px\" }}>\n        <Form>\n          <Form.Check\n            type=\"switch\"\n            id=\"custom-switch\"\n            label=\"Restaurant Status\"\n            checked={isRestaurantOpen}\n            onChange={setRestaurantOpen}\n          />\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default Counter;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Counter from \"../ui/Counter\";\nimport Search from \"../ui/Search\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../context/auth-context\";\n// import OrdersContext from \"../context/orders-context\";\n\nconst Overlay = (props) => {\n  return (\n    <div className=\"content\">\n      <ul>\n        <li className=\"inner-list\">\n          <p>Welcome {props.authCtx.user.name} !</p>\n        </li>\n        {/* <li className=\"inner-list\">\n                  <a href=\"#\" className=\"list-link\">\n                    <i className=\"fas fa-cog\"></i>Settings\n                  </a>\n                </li> */}\n        <li className=\"inner-list\">\n          <div className=\"list-link\" onClick={props.logoutHandler}>\n            <i className=\"fas fa-sign-out-alt\"></i>Logout\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nconst Navbar = (props) => {\n  const [isOverlay, setIsOverlay] = useState(false);\n  const authCtx = useContext(AuthContext);\n\n  // useEffect(() => {\n  //   console.log(\"authCtx\", authCtx.user);\n  // }, [authCtx.user]);\n\n  const overlayHandler = () => {\n    setIsOverlay((prevState) => {\n      // console.log(userDetail, \"overlay\");\n      return !prevState;\n    });\n  };\n\n  // const [orderData, setOrderData] = useState({\n  //   online: 0,\n  //   dinein: 0,\n  //   ready: 0,\n  //   cancelled: 0\n  // });\n\n  return (\n    <section className=\"nav-bar\">\n      {authCtx.user !== null && (\n        <div className=\"navbar\">\n          <div className=\"logo\">\n            <img className=\"img-fluid\" src=\"/images/logo.jpg\" alt=\"Logo\" />\n          </div>\n          <Counter />\n          {/* <Search /> */}\n          <ul className=\"nav-item\">\n            <li className=\"list-item\">\n              <a className=\"list-link\" href=\"#l\">\n                <i className=\"far fa-bell\"></i>\n              </a>\n            </li>\n            <li className=\"list-item\">\n              <button\n                type=\"button\"\n                onClick={overlayHandler}\n                className=\"btn collapsible\"\n              >\n                <div className=\"flex\">\n                  <img\n                    className=\"img-fluid\"\n                    src={authCtx.user.img}\n                    alt=\"profilepic\"\n                  />\n                  <p className=\"aname\">\n                    {authCtx.user.name}\n                    <i className=\"fas fa-angle-down\"></i>\n                  </p>\n                </div>\n              </button>\n              {isOverlay && (\n                <Overlay\n                  authCtx={authCtx}\n                  logoutHandler={props.logoutHandler}\n                />\n              )}\n            </li>\n            <li className=\"list-item\">\n              <Link\n                to=\"/home/profile\"\n                activeClassName=\"active\"\n                className=\"list-link\"\n              >\n                <i className=\"fas fa-cog\"></i>\n              </Link>\n            </li>\n            {/* <li className=\"list-item\">\n              <a className=\"list-link\" href=\"#l\">\n                <i className=\"fas fa-cog\"></i>\n              </a>\n            </li> */}\n          </ul>\n        </div>\n      )}\n\n      {/* <!-- Header Ends --> */}\n    </section>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nimport classes from \"./Card.module.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.Card} ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;\n","// import styled from \"styled-components\";\n\nconst Backdrop = (props) => {\n  // const BackDrop = styled.div`\n  //   position: fixed;\n  //   top: 0;\n  //   left: 0;\n  //   width: 100%;\n  //   height: 100vh;\n  //   z-index: 1000;\n  //   background: rgba(0, 0, 0, 0.75);\n  // `;\n\n  return (\n    <div\n      onClick={props.onClose}\n      style={{\n        position: \"fixed\",\n        top: \"0\",\n        left: \"0\",\n        width: \"100%\",\n        height: \"100vh\",\n        zIndex: \"1000\",\n        background: \"rgba(0, 0, 0, 0.75)\"\n      }}\n    />\n  );\n};\n\nexport default Backdrop;\n// import styled from \"styled-components\";\n\n// const Backdrop = (props) => {\n//   const BackDrop = styled.div`\n//     position: fixed;\n//     top: 0;\n//     left: 0;\n//     width: 100%;\n//     height: 100vh;\n//     z-index: 1000;\n//     background: rgba(0, 0, 0, 0.75);\n//   `;\n\n//   return <BackDrop onClick={props.onClose} />;\n// };\n\n// export default Backdrop;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./DeliveryModal.module.css\";\nimport Card from \"../Card/Card\";\nimport Backdrop from \"../Backdrop\";\n// import $ from \"jquery\";\nimport { getDeliveryUsers } from \"../../api/DeliveryDB\";\nimport AuthContext from \"../../context/auth-context\";\nimport { db } from \"../../services/firebase\";\n\nconst ModalOverlay = (props) => {\n  const [deliveryUsers, setDeliveryUsers] = useState(null);\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    let location = authCtx.user.location;\n    // console.log(\"location\", location);\n    // getDeliveryUsers(location, (users) => {\n    // location = location[0].toUpperCase() + location.substring(1);\n    let list = [];\n    var unsubscribe = db\n      .collection(\"DeliveryUsers\")\n      .doc(\"Branches\")\n      .collection(location)\n      .where(\"verification\", \"==\", \"verified\")\n      .onSnapshot((docs) => {\n        docs.forEach((doc) => {\n          let dUser = {\n            ...doc.data(),\n            currentOrders: [],\n          };\n          props.orders.forEach((order) => {\n            if (dUser.user_id === order.dBoyId) {\n              dUser.currentOrders.push({\n                orderId: order.orderId,\n                address: order.userDetails.userAddress,\n              });\n            }\n          });\n          list.push(dUser);\n        });\n        console.log(\"deli\", list);\n        console.log(\"orders\", props.orders);\n        setDeliveryUsers((prevState) => {\n          return [...list];\n        });\n        list = [];\n      });\n    return () => {\n      unsubscribe();\n    };\n    // });\n  }, [authCtx.user.location]);\n\n  let ui = null;\n  if (deliveryUsers === null) {\n    ui = <p>Loading!!!</p>;\n  } else if (deliveryUsers.length === 0) {\n    ui = <p>No delivery users available!!!</p>;\n  } else {\n    ui = deliveryUsers.map((user) => {\n      let statusUi = null;\n      if (user.userStatus === \"Online\") {\n        statusUi = (\n          <>\n            <p className={styles.status}>\n              {/* <span className={styles.busy}>On Delivery</span> */}\n              <span className={styles.free}>Available</span>\n            </p>\n            <p\n              className={styles.assign}\n              onClick={() => props.assignDeliveryUser(props.order, user)}\n            >\n              {/* <span className={styles.span}>Assign&nbsp;&#10003;</span> */}\n              <span className={styles.span}>Assign&nbsp;&#10003;</span>\n            </p>\n          </>\n        );\n      } else if (user.userStatus === \"Offline\") {\n        statusUi = (\n          <>\n            <p className={styles.status}>\n              <span className={styles.busy}>Offline</span>\n            </p>\n            <p className={styles.assign}>\n              <span className={styles.span}>Offline&nbsp;&#10003;</span>\n            </p>\n          </>\n        );\n      } else if (user.userStatus === \"RideOn\") {\n        statusUi = (\n          <>\n            <p className={styles.status}>\n              <span className={styles.free}>Ride On</span>\n            </p>\n            <p className={styles.assign}>\n              {/* <span className={styles.span}>Ride-On&nbsp;&#10003;</span> */}\n            </p>\n          </>\n        );\n      } else if (user.userStatus === \"Assigned\") {\n        statusUi = (\n          <>\n            <p className={styles.status}>\n              <span className={styles.free}>Assigned</span>\n            </p>\n            {props.order.dBoyId === user.user_id ? (\n              <p className={styles.assign}>\n                <span\n                  className={styles.span1}\n                  title={`This order is already assigned to ${user.user_username}`}\n                  style={{ textDecoration: \"underline\" }}\n                >\n                  Can't Assign\n                </span>\n              </p>\n            ) : (\n              <p\n                className={styles.assign}\n                onClick={() => {\n                  props.assignDeliveryUser(props.order, user);\n                }}\n              >\n                <span className={styles.span}>Re-Assign&nbsp;&#10003;</span>\n              </p>\n            )}\n          </>\n        );\n      }\n      return (\n        <div\n          className={styles.row}\n          style={{ marginBottom: \"5px\" }}\n          key={user.user_id}\n        >\n          <p className={styles.name}>{user.user_username}</p>\n          <p className={styles.no}>{user.user_phone_number}</p>\n          {statusUi}\n          <p className={styles.no} title>\n            {user.currentOrders.length > 0\n              ? user.currentOrders.map((ord, i) => (\n                  <>\n                    <p\n                      title={ord.address}\n                      style={{ textDecoration: \"underline\" }}\n                    >\n                      {ord.orderId}\n                    </p>\n                    {/* {i < user.currentOrders.length - 1 ? \";\" : \"\"} */}\n                  </>\n                ))\n              : \"Empty\"}\n          </p>\n        </div>\n      );\n    });\n  }\n  return (\n    <div class={styles.modal}>\n      <Card>\n        <div className={styles.assignmodal}>\n          <div className={styles.row} style={{ marginBottom: \"10px\" }}>\n            <p className={styles.hname}>Delivery Person</p>\n            <p className={styles.hno}>Mobile Number</p>\n            <p className={styles.hstatus}>Status</p>\n            <p className={styles.hassign}>Assign</p>\n            <p className={styles.hcurrentOrder}>Current Orders</p>\n          </div>\n          {ui}\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nconst DeliveryModal = (props) => {\n  // console.log(\"edit\", props.item);\n  return (\n    <>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.closeModal} />,\n        document.getElementById(\"backdrop-root\")\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay\n          onClose={props.closeModal}\n          // title={props.title}\n          assignDeliveryUser={props.assignDeliveryUser}\n          // updateItem={props.updateItem}\n          order={props.order}\n          orders={props.orders}\n        />,\n        document.getElementById(\"overlay-root\")\n      )}\n    </>\n  );\n};\n\nexport default DeliveryModal;\n","import React, { useEffect, useState } from \"react\";\nimport { getDeliveredOrders } from \"../../api/OrderDB\";\nimport DeliveryModal from \"../../ui/DeliveryModal/DeliveryModal\";\n\nconst OrderMaintain = (props) => {\n  const [assignModal, setAssignModal] = useState(false);\n  const [orders, setOrders] = useState(undefined);\n\n  const deliveryAssignHandler = (order) => {\n    setAssignModal(order);\n  };\n\n  useEffect(() => {\n    if (location.pathname.includes(\"delivered\")) {\n      getDeliveredOrders(props.type, props.location, (orders) => {\n        console.log(\"delvieredOrders\", orders);\n        setOrders(orders);\n      });\n    } else {\n      setOrders(props.orders);\n    }\n  }, [props.orders]);\n\n  return (\n    <>\n      {assignModal && (\n        <DeliveryModal\n          orders={props.orders}\n          order={assignModal}\n          assignDeliveryUser={(order, user) => {\n            props.assignDeliveryUser(order, user);\n            setAssignModal(false);\n          }}\n          closeModal={() => setAssignModal(false)}\n        />\n      )}\n      <div class=\"order-head row\">\n        <p className=\"oid\">Order ID</p>\n        <p className=\"uname\">User Name</p>\n        <p className=\"add\">Address</p>\n        <p className=\"date\">In Time</p>\n        <p className=\"cat\">Category</p>\n        <p className=\"amount\">Amount</p>\n        <p className=\"tq\">Qty</p>\n        <p className=\"tp\">Total Price</p>\n        <p className=\"status\">Status</p>\n      </div>\n      {orders === undefined || orders === null\n        ? \"No Orders\"\n        : orders.map((order) => {\n            let timestamp = new Date(parseInt(order.timestamp));\n            let year = timestamp.getFullYear();\n            let month = timestamp.getMonth() + 1;\n            if (month < 10) {\n              month = \"0\" + month;\n            }\n            let day = timestamp.getDate();\n            if (day < 10) {\n              day = \"0\" + day;\n            }\n            let hours = timestamp.getHours();\n            let mins = timestamp.getMinutes();\n            let timePeriod = \"AM\";\n            if (hours > 12) {\n              timePeriod = \"PM\";\n              hours = hours - 12;\n            }\n            if (hours < 10) {\n              hours = \"0\" + hours;\n            }\n            if (mins < 10) {\n              mins = \"0\" + mins;\n            }\n            return (\n              <details className=\"order-view\" key={order.orderId}>\n                <summary className=\"row\">\n                  <p className=\"oid\">#{order.orderId}</p>\n                  <p className=\"uname\">\n                    {order.userDetails?.userName ||\n                      order.order_address?.userName}\n                  </p>\n                  <p className=\"add\">\n                    {order.userDetails?.userAddress ||\n                      order.order_address?.userAddress}\n                    <br />\n                    Phone:{\" \"}\n                    {order.userDetails?.phone || order.order_address?.phone}\n                  </p>\n                  <p className=\"date\">\n                    {`${day}-${month}-${year}`} {hours}:{mins} {timePeriod}\n                  </p>\n                  <p className=\"cat\">{order.type}</p>\n                  <p className=\"amount\">\n                    {/* {order.payment.isPaid ? \"Paid\" : \"Not Paid\"} */}\n                    {/* <span className=\"paid\"></span> */}\n                    {order.payment.isPaid ? (\n                      <span className=\"paid\">Paid</span>\n                    ) : (\n                      <span className=\"pod\">POD</span>\n                    )}\n                  </p>\n                  <p className=\"tq\">{order.noOfItems}</p>\n                  <p className=\"tp\">\n                    <i class=\"fas fa-rupee\"></i>\n                    {order.totalPrice + order.deliveryCharge}\n                  </p>\n                  <p className=\"status\">\n                    {/* <span className=\"new\"> */}\n                    {order.status === \"booked\" ? (\n                      <span className=\"new\">NewOrder</span>\n                    ) : order.status === \"preparing\" ? (\n                      <span className=\"prepare\">Preparing</span>\n                    ) : order.status === \"assigned\" ? (\n                      <span className=\"ready\">Assigned</span>\n                    ) : order.status === \"accepted\" ? (\n                      <span className=\"ready\">Accepted</span>\n                    ) : order.status === \"rideon\" ? (\n                      <span className=\"ready\">On-Delivery</span>\n                    ) : order.status === \"delivered\" ? (\n                      <span className=\"delivered\">Delivered</span>\n                    ) : order.status === \"rejected\" ? (\n                      <span className=\"cancelled\">Rejected</span>\n                    ) : (\n                      <span className=\"cancelled\">Cancelled</span>\n                    )}\n                    {/* </span> */}\n                    {/* <span className=\"prepare\">Preparing</span> */}\n                    {/* <span className=\"ready\">New Order</span>\n            <span className=\"delivered\">New Order</span> */}\n                  </p>\n                </summary>\n                <div className=\"details row\">\n                  {order.order_items?.map((item) => {\n                    return (\n                      <p key={item.itemId} className=\"item\">\n                        {item.itemName} x {item.itemSize}\n                      </p>\n                    );\n                  })}\n\n                  {order.status === \"booked\" ? (\n                    <button\n                      className=\"btn btn-dark\"\n                      type=\"button\"\n                      onClick={() =>\n                        props.updateOrderStatus(order, \"preparing\")\n                      }\n                    >\n                      Preparing\n                    </button>\n                  ) : order.status === \"preparing\" ? (\n                    <>\n                      <button\n                        className=\"btn btn-dark\"\n                        type=\"button\"\n                        onClick={() => deliveryAssignHandler(order)}\n                      >\n                        Ready To Deliver\n                      </button>\n                    </>\n                  ) : order.status === \"assigned\" ||\n                    order.status === \"accepted\" ||\n                    order.status === \"rejected\" ? (\n                    <>\n                      <button\n                        className=\"btn btn-dark\"\n                        type=\"button\"\n                        onClick={() => deliveryAssignHandler(order)}\n                      >\n                        Re-Assign Delivery Boy\n                      </button>\n                    </>\n                  ) : order.status === \"rideon\" ? (\n                    <>\n                      <button\n                        className=\"btn btn-dark\"\n                        type=\"button\"\n                        onClick={() => deliveryAssignHandler(order)}\n                      >\n                        Re-Assign Delivery Boy\n                      </button>\n                    </>\n                  ) : order.status === \"delivered\" ? (\n                    <span className=\"delivered\">Delivered</span>\n                  ) : (\n                    <span className=\"cancelled\">Cancelled</span>\n                  )}\n\n                  {/* <button type=\"button\" onClick={() => acceptHandler()}>\n                    Accept\n                  </button>\n                  <button type=\"button\" onClick={() => cancelHandler()}>\n                    Cancel\n                  </button> */}\n                  {/* <p className=\"cancel\">Cancel</p> */}\n                  {/* <p className=\"deliverydetails\">Akhil,&nbsp;8072711781</p> */}\n                </div>\n              </details>\n            );\n          })}\n    </>\n  );\n};\n\nexport default OrderMaintain;\n","import { db, firebase } from \"../services/firebase\";\n\nconst getItem = (title, type, itemId, location, addOutOfStock) => {\n  // console.log(\"ItemDB\", title);\n  // let list = [];\n  db.collection(type)\n    .doc(type + \"_Types\")\n    .collection(title) // BreakFast, PersonalCare\n    .doc(itemId)\n    .get()\n    .then((doc) => {\n      let item = doc.data();\n      console.log(\"itemm\", item, location);\n      if (item.branch[location].unit <= item.branch[location].minimumUnit) {\n        addOutOfStock(item);\n      } else {\n        addOutOfStock(null);\n      }\n    })\n    .catch((e) => console.log(\"getItem()\", e));\n};\n\nconst setItem = (title, type, item, location, addOutOfStock) => {\n  console.log(\"item\", item, title, type, location);\n  let data = {\n    ...item,\n  };\n  // let data = {\n  //   [location]: {\n  //     ...item[location],\n  //     unit: parseInt(item[location].unit),\n  //   },\n  // };\n  data.branch[location] = {\n    ...item.branch[location],\n    unit: parseInt(item.branch[location].unit),\n  };\n  if (type === \"Food\") {\n    if (item.Type === \"Breakfast\") {\n      title = \"BreakFast\";\n    } else if (item.Type === \"Lunch\") {\n      title = \"Lunch\";\n    } else if (item.Type === \"Dinner\") {\n      title = \"Dinner\";\n    }\n  } else {\n    if (item.Type === \"Rice\") {\n      title = \"Rice\";\n    } else if (item.Type === \"Fruits_Vegetables\") {\n      title = \"Fruits_Vegetables\";\n    } else if (item.Type === \"Summer_Drinks_Beverage\") {\n      title = \"Summer_Drinks_Beverage\";\n    } else if (item.Type === \"soaps\") {\n      title = \"soaps\";\n    } else if (item.Type === \"Pharmacy\") {\n      title = \"Pharmacy\";\n    } else if (item.Type === \"Organics\") {\n      title = \"Organics\";\n    }\n  }\n  db.collection(type)\n    .doc(type + \"_Types\")\n    .collection(title) // BreakFast, PersonalCare\n    .doc(item.id)\n    .update(data)\n    .then(() => {\n      console.log(\"success\");\n      addOutOfStock(true);\n    })\n    .catch((e) => {\n      console.log(\"setItem()\", e);\n      addOutOfStock(false);\n    });\n};\n\n// read all - food & grocery\nconst getItems = (title, type, setItems) => {\n  console.log(\"ItemDB\", title, type);\n  let list = [];\n  db.collection(type)\n    .doc(type + \"_Types\")\n    .collection(title) // BreakFast, PersonalCare\n    .get()\n    .then((docs) => {\n      docs.forEach((doc) => {\n        let item = doc.data();\n        item.id = doc.id;\n        list.push(item);\n      });\n    })\n    .then(() => {\n      setItems(list);\n    })\n    .catch((e) => console.log(\"getItems()\", e));\n};\n\n// get multi title items\nconst getMultiTitleItems = (titles, type, setItems) => {\n  // let titles = [...title];\n  let list = [];\n  let listPromises = [];\n  titles.forEach((tit) => {\n    console.log(\"tit\", tit, type);\n    listPromises.push(\n      db\n        .collection(type)\n        .doc(type + \"_Types\")\n        .collection(tit) // BreakFast, PersonalCare\n        .get()\n    );\n  });\n  Promise.all(listPromises)\n    .then((value) => {\n      // console.log(\"res\", value);\n      value.forEach((val) => {\n        val.forEach((res) => {\n          list.push(res.data());\n        });\n      });\n      return list;\n    })\n    .then((data) => {\n      console.log(\"2nd then\", data);\n      setItems(data);\n    })\n    .catch((e) => console.log(e));\n};\n\n// add item - food & grocery\nconst addItem = (item, price, type, authCtx, isAdded) => {\n  console.log(\"item\", item, type, price);\n  let title = \"\";\n  let priceData = \"\";\n  if (type === \"Food\") {\n    if (item.category === \"BreakFast\") {\n      title = \"BreakFast\";\n    } else if (item.category === \"Lunch\") {\n      title = \"Lunch\";\n    } else if (item.category === \"Dinner\") {\n      title = \"Dinner\";\n    }\n  } else {\n    if (item.category === \"Fruits_Vegetables\") {\n      title = \"Fruits_Vegetables\";\n    } else if (item.category === \"Rice\") {\n      title = \"Rice\";\n    } else if (item.category === \"Summer_Drinks_Beverages\") {\n      title = \"Summer_Drinks_Beverages\";\n    } else if (item.category === \"soaps\") {\n      title = \"soaps\";\n    } else if (item.category === \"Pharmacy\") {\n      title = \"Pharmacy\";\n    } else if (item.category === \"Organics\") {\n      title = \"Organics\";\n    }\n  }\n\n  let bucketName = type === \"Food\" ? \"Foods\" : \"Grocery\";\n  let storageRef = firebase.storage().ref();\n  let subCategoryTimestamp = +new Date().getTime() + \"-\" + item.img.file.name;\n  let imgRef = storageRef.child(`${bucketName}/${subCategoryTimestamp}`);\n  // console.log(\"submit\", subCategoryTimestamp, priceData);\n  imgRef.put(item.img.file).then(() => {\n    imgRef\n      .getDownloadURL()\n      .then((img) => {\n        let nameSearch = createNameSearchArray(item.name);\n        let data = \"\";\n        data = {\n          Bestseller: true,\n          Name: item.name,\n          Type: item.category,\n          actual_price: 0,\n          branch: {},\n          categories: [],\n          currency: \"\",\n          current_price: +item.currentPrice,\n          dealoftheday: item.dealOfTheDay,\n          description: item.desc,\n          image: img,\n          isproductavailable: item.isProductAvailable,\n          product_id: item.productId,\n          quantityPerUnit: 1,\n          shop_name: \"Thalaivar\",\n          unit: \"1\",\n          name_search: [...nameSearch],\n        };\n        data.branch[authCtx.user.location] = {\n          Bestseller: item.bestSeller,\n          BranchName: authCtx.user.location,\n          current_price: +item.currentPrice,\n          dealoftheday: item.dealOfTheDay,\n          unit: parseInt(item.actualUnit),\n        };\n\n        db.collection(type)\n          .doc(type + \"_Types\")\n          .collection(title)\n          .add(data)\n          .then((docRef) => {\n            console.log(\"docRef\", docRef);\n            db.collection(type)\n              .doc(type + \"_Types\")\n              .collection(title)\n              .doc(docRef.id)\n              .update({\n                id: docRef.id,\n              })\n              .then(() => {\n                isAdded(true);\n                console.log(\"Item added\");\n              })\n              .catch((e) => {\n                isAdded(false);\n                console.log(e);\n              });\n          })\n          .catch((e) => {\n            console.log(e);\n            isAdded(false);\n          });\n      })\n      .catch((e) => {\n        console.log(e);\n        isAdded(false);\n      });\n  });\n};\n\n// update item - food & grocery\nconst updateItem = (\n  item,\n  price,\n  quantity,\n  title,\n  type,\n  location,\n  isUpdated\n) => {\n  // console.log(\"--\", item, price, quantity, title, type, location);\n  // create name search\n  let nameSearch = createNameSearchArray(item.Name);\n  // without image\n  if (item.img === undefined) {\n    console.log(\"item.img-undefined\", item);\n    let data = {\n      ...item,\n      Name: item.Name,\n      description: item.description,\n      // category: item.category,\n      Type: item.Type,\n      // [location]: {\n      //   isproductavailable: item[location].isproductavailable,\n      //   Bestseller: item[location].Bestseller,\n      //   dealoftheday: item[location].dealoftheday,\n      //   unit: parseInt(item[location].unit),\n      //   minimumUnit: parseInt(item[location].minimumUnit),\n      //   quantityPerUnit: parseInt(item[location].quantityPerUnit),\n      //   price: priceData,\n      // },\n      name_search: [...nameSearch],\n    };\n    data.branch[location] = {\n      Bestseller: item.branch[location].Bestseller,\n      BranchName: location,\n      current_price: +item.branch[location].current_price,\n      dealoftheday: item.branch[location].dealoftheday,\n      unit: +item.branch[location].unit,\n    };\n    // if (type === \"Food\") {\n    //   data = {\n    //     ...data,\n    //     style: item.style,\n    //   };\n    // }\n    // // console.log(\"data\", data);\n    db.collection(type)\n      .doc(type + \"_Types\")\n      .collection(title)\n      .doc(item.id)\n      .update(data)\n      .then(() => {\n        let updatedData = {\n          ...data,\n          id: item.id,\n          image: item.image,\n          currency: item.currency,\n        };\n        isUpdated(updatedData);\n      })\n      .catch((e) => {\n        isUpdated(false);\n        console.log(\"updateItem()\", e);\n      });\n  } else {\n    console.log(\"item.img\", item.img.name, item.img, item.img.file);\n    // image\n    let bucketName = type === \"Food\" ? \"Foods\" : \"Grocery\";\n    let storageRef = firebase.storage().ref();\n    let subCategoryTimestamp = +new Date().getTime() + \"-\" + item.img.name;\n    let imgRef = storageRef.child(`${bucketName}/${subCategoryTimestamp}`);\n    // console.log(\"submit\", subCategoryTimestamp, priceData);\n    imgRef\n      .put(item.img)\n      .then(() => {\n        console.log(\"img ref put...\");\n        imgRef\n          .getDownloadURL()\n          .then((img) => {\n            let data = {\n              ...item,\n              Name: item.Name,\n              image: img,\n              description: item.description,\n              Type: item.Type,\n              name_search: [...nameSearch],\n            };\n            data.branch[location] = {\n              Bestseller: item.branch[location].Bestseller,\n              BranchName: location,\n              current_price: +item.branch[location].current_price,\n              dealoftheday: item.branch[location].dealoftheday,\n              unit: +item.branch[location].unit,\n            };\n            delete data.img;\n            // console.log(\"img\", img, data);\n\n            db.collection(type)\n              .doc(type + \"_Types\")\n              .collection(title)\n              .doc(item.id)\n              .update({\n                ...data,\n              })\n              .then(() => {\n                isUpdated(data);\n                // delete previous image from storage\n                let storaRef = firebase.storage();\n                storaRef\n                  .refFromURL(item.image)\n                  .delete()\n                  .then(() =>\n                    console.log(\"image deleted successfullty, MyBin.js[284]\")\n                  )\n                  .catch((e) => console.log(e, \"already deleted\"));\n              })\n              .catch((e) => {\n                isUpdated(false);\n                console.log(\"updateItem()\", e);\n              });\n          })\n          .catch((e) => {\n            console.log(\"img update\", e);\n            isUpdated(false);\n          });\n      })\n      .catch((e) => {\n        isUpdated(false);\n        console.log(\"put image\", e);\n      });\n  }\n};\n\nconst createNameSearchArray = (name) => {\n  let pName = name.toLowerCase();\n  let list = [];\n  let sum = \"\";\n  for (let i = 0; i < pName.length; i++) {\n    sum += pName[i];\n    list.push(sum);\n  }\n  return list;\n};\n\n// delete item - food & grocery\nconst deleteItem = (item, title, type, isDeleted) => {\n  db.collection(type)\n    .doc(type + \"_Types\")\n    .collection(title)\n    .doc(item.id)\n    .delete()\n    .then(() => {\n      console.log(\"successfully deleted\");\n      firebase\n        .storage()\n        .refFromURL(item.image)\n        .delete()\n        .then(() => {\n          console.log(\"image deleted successfullty from firebase storage\");\n          isDeleted(true);\n        })\n        .catch((e) => {\n          console.log(e);\n          isDeleted(false);\n        });\n    })\n    .catch((e) => {\n      console.log(\"deleteItem()\", e);\n      isDeleted(false);\n    });\n};\n\nexport {\n  setItem,\n  getItem,\n  getItems,\n  addItem,\n  deleteItem,\n  updateItem,\n  getMultiTitleItems,\n};\n","import localforage from \"localforage\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { getMultiTitleItems } from \"../../api/ItemDB\";\nimport {\n  addTelOrders,\n  genrateBillOrder,\n  billPaidOrder,\n} from \"../../api/OrderDB\";\nimport AuthContext from \"../../context/auth-context\";\n\nconst ManualBilling = (props) => {\n  const authCtx = useContext(AuthContext);\n  const [manual, setManual] = useState(null);\n  const [generate, setGenerate] = useState(null);\n  useEffect(() => {\n    let titles = [\"BreakFast\", \"Lunch\", \"Dinner\"];\n    // let titles = [\"Lunch\", \"Dinner\"];\n    console.log(\"type\", props.type);\n    let type = \"Food\";\n    if (props.type !== \"food\") {\n      type = \"Grocery\";\n      titles = [\n        \"Fruits_Vegetables\",\n        \"Rice\",\n        \"Summer_Drinks_Beverages\",\n        \"soaps\",\n      ];\n    }\n    getMultiTitleItems(titles, type, (res) => {\n      let list = [];\n      res.forEach((item) => {\n        item.branch[props.location] !== undefined && list.push(item);\n      });\n      props.setItems(list);\n    });\n  }, [props.type]);\n\n  const onChangeHandler = (event) => {\n    let name = event.target.name;\n    let value = event.target.value;\n    if (name === \"manual\") {\n      setManual(value);\n      console.log(value);\n    } else if (name === \"gennbill\") {\n      setGenerate(value);\n    }\n  };\n\n  const addteleorder = () => {\n    addTelOrders(props.currentOrder, props.type, props.location, (isAdded) => {\n      if (isAdded) {\n        // db added\n        window.alert(\"Successfully Added!!!\");\n        removeOrder(props.currentOrder.orderId, props.type);\n      } else {\n        // error not adding\n        window.alert(\"Not Added... Try Again!!!\");\n      }\n    });\n  };\n\n  const generateBill = () => {\n    // console.log(\"hjlllll\");\n    // setGenerate(\"gennbill\");\n    // genrateBillOrder(props.currentOrder);\n    props.generateBill();\n    // if (props.type === \"food\") {\n    // let foodOrderList = [];\n    // localforage\n    //   .getItem(\"food-order\")\n    //   .then((value) => {\n    //     console.log(\"fOrde\", value);\n    //     if (value === null) {\n    //       // new order\n    //     }\n    //   })\n    //   .catch((e) => console.log(e));\n    // }\n    // localforage.setItem(\"food-order\", props.currentOrder);\n  };\n\n  const removeOrder = (orderId, type) => {\n    props.removeOrder(orderId, type);\n  };\n\n  const paidOrders = () => {\n    // console.log(\"hjlllll\");\n    billPaidOrder(props.currentOrder, props.type, props.location, (isAdded) => {\n      if (isAdded) {\n        window.alert(\"Successfully Added to local store!!!\");\n      } else {\n        // error not adding\n        window.alert(\"Not Added... Try Again!!!\");\n      }\n    });\n  };\n\n  return (\n    <div className=\"manual row\">\n      <div>\n        <input\n          type=\"radio\"\n          id=\"dineIn\"\n          name=\"manual\"\n          value=\"dineIn\"\n          onChange={onChangeHandler}\n        />\n        <label htmlFor=\"dineIn\">&nbsp;Dine-In</label>\n      </div>\n      <div style={{ marginRight: \"auto\", padding: \"0 5px\" }}>\n        <input\n          type=\"radio\"\n          id=\"telephone\"\n          name=\"manual\"\n          value=\"telephone\"\n          onChange={onChangeHandler}\n        />\n        <label htmlFor=\"telephone\">&nbsp;Telephone order</label>\n      </div>\n      <div className=\"col-12\"></div>\n\n      <div className=\"billno\">\n        <button\n          type=\"button\"\n          className=\"add\"\n          onClick={() => props.createOrder(manual)}\n          disabled={!manual}\n        >\n          New Order <b>+</b>\n        </button>\n        <h4>Ongoing Bills</h4>\n        <div className=\"scroll\">\n          {props.ongoingOrders.map((order) => {\n            return (\n              <div\n                key={order.orderId}\n                className=\"card\"\n                style={{ cursor: \"pointer\" }}\n                onClick={() => props.setCurrentOrder(order)}\n              >\n                <p className=\"bno\">{order.orderId}</p>\n                <p className=\"number\">{order.userDetails.phone}</p>\n                <p className=\"tq\">{order.noOfItems}</p>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"billdetails\">\n        <div\n          className=\"row\"\n          style={{ justifyContent: \"space-between\", alignItems: \"center\" }}\n        >\n          {/* {console.log(props.currentOrder)} */}\n          <p className=\"bno\">{props.currentOrder.orderId}</p>\n          <p className=\"text\">Bill Details</p>\n          {props.ongoingOrders.length > 0 && props.currentOrder.orderId !== \"\" && (\n            <>\n              <input\n                list=\"searchItem\"\n                name=\"searchItems\"\n                id=\"searchItems\"\n                autoComplete=\"off\"\n                placeholder=\"Type to search...\"\n                onChange={props.onChange}\n                style={{ outline: \"0\", cursor: \"pointer\" }}\n              />\n              <datalist id=\"searchItem\">\n                {props.items.map((item) => {\n                  return <option key={item.id} value={item.Name} />;\n                })}\n              </datalist>\n            </>\n          )}\n        </div>\n        <div className=\"row head\">\n          <p className=\"iname\">Item Name</p>\n          <p className=\"ino\">Item Size</p>\n          <p className=\"quantity\">Quantity</p>\n          <p className=\"rate\">Rate</p>\n          <p className=\"price\">Price</p>\n        </div>\n        <div className=\"scroll\">\n          {props.currentOrder.items.map((item, i) => {\n            let priceUi = (\n              <>\n                <p className=\"ino\">{item.itemQuantity}</p>\n                <input\n                  name=\"itemSize\"\n                  type=\"number\"\n                  className=\"quantity\"\n                  placeholder=\"0\"\n                  min=\"0\"\n                  value={item.itemSize}\n                  onChange={(e) => props.onChange(e, item)}\n                />\n                <p className=\"rate\">{item.itemPrice}</p>\n              </>\n            );\n            if (\n              // item.branch[props.location].actualPrice === -1 &&\n              item.branch[props.location].current_price === -1 &&\n              item.branch[props.location].length === undefined\n            ) {\n              priceUi = (\n                <>\n                  <p className=\"ino\">\n                    <select\n                      className=\"itemId\"\n                      name=\"itemQuantity\"\n                      value={item.itemQuantity}\n                      onChange={(e) => props.onChange(e, item)}\n                    >\n                      <option value=\"quarter\">Quarter</option>\n                      <option value=\"half\">Half</option>\n                      <option value=\"full\">Full</option>\n                    </select>\n                  </p>\n                  <input\n                    name=\"itemSize\"\n                    type=\"number\"\n                    className=\"quantity\"\n                    placeholder=\"0\"\n                    min=\"0\"\n                    value={item.itemSize}\n                    onChange={(e) => props.onChange(e, item)}\n                  />\n                  <p className=\"rate\">{item.itemPrice}</p>\n                </>\n              );\n            } else if (item.branch[props.location].length >= 0) {\n              priceUi = (\n                <>\n                  <p className=\"ino\">\n                    <select\n                      className=\"itemId\"\n                      name=\"itemQuantity\"\n                      value={item.itemQuantity}\n                      onChange={(e) => props.onChange(e, item)}\n                    >\n                      <option value=\"grams\">Grams</option>\n                      <option value=\"kilograms\">KiloGrams</option>\n                      <option value=\"litres\">Litres</option>\n                      <option value=\"kilolitres\">KiloLitres</option>\n                    </select>\n                  </p>\n                  <input\n                    name=\"itemSize\"\n                    type=\"number\"\n                    className=\"quantity\"\n                    placeholder=\"0\"\n                    min=\"0\"\n                    value={item.itemSize}\n                    onChange={(e) => props.onChange(e, item)}\n                  />\n                  <p className=\"rate\">{item.itemPrice}</p>\n                </>\n              );\n            }\n            return (\n              <div className=\"row item\" key={item.id}>\n                <p name=\"itemName\" className=\"iname\">\n                  {item.Name}\n                </p>\n                {priceUi}\n                {/* {console.log(\"itemsss\", item)} */}\n                <p className=\"price\">{item.itemSize * item.itemPrice}</p>\n                <i\n                  class=\"fa fa-minus-circle remove-item\"\n                  aria-hidden=\"true\"\n                  onClick={() => props.removeItem(item.id)}\n                ></i>\n              </div>\n            );\n          })}\n          {/* <div className=\"row item\">\n            <p className=\"ino\">243</p>\n            <input\n              type=\"text\"\n              className=\"iname\"\n              placeholder=\"Chicken Briyani\"\n            />\n            <input type=\"number\" className=\"quantity\" placeholder=\"0\" />\n            <p className=\"rate\">120</p>\n            <p className=\"price\">240</p>\n          </div> */}\n        </div>\n        {/* <button type=\"button\" className=\"add\">\n          +\n        </button> */}\n        <div className=\"footer row\">\n          <p className=\"iname\">Total</p>\n          <p className=\"quantity\">{props.currentOrder.noOfItems}</p>\n          <p className=\"rate\">=</p>\n          <p className=\"price\">{props.currentOrder.totalPrice}</p>\n        </div>\n      </div>\n      {props.currentOrder.type === \"dinein\" ? (\n        <>\n          <div className=\"billgenerate\">\n            <h4>Bill Status</h4>\n            <p className=\"bno\">\n              Order-Id:&ensp;<b>{props.currentOrder.orderId}</b>\n            </p>\n            <p className=\"number\">\n              Name:&ensp;\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={props.currentOrder.userDetails.userName}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"number\">\n              Phone:&ensp;\n              <input\n                type=\"tel\"\n                name=\"phone\"\n                size=\"15\"\n                value={props.currentOrder.userDetails.phone}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"address\">\n              Address:&ensp;\n              <textarea\n                name=\"address\"\n                size=\"15\"\n                value={props.currentOrder.userDetails.userAddress}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"tq\">\n              Total Quantity:&ensp;<b>{props.currentOrder.noOfItems}</b>\n            </p>\n            <p className=\"tp\">\n              Total Price:&ensp;<i className=\"fas fa-rupee\"></i>\n              <b>{props.currentOrder.totalPrice}</b>\n            </p>\n            <p className=\"tq\">\n              Mode Of\n              <br />\n              Payment:&ensp;\n              <select\n                name=\"paymentMode\"\n                value={props.currentOrder.payment.paymentMethod}\n                onChange={props.onChange}\n              >\n                <option value=\"cash\">Cash</option>\n                <option value=\"debit/credit\">Debit/Credit</option>\n                <option value=\"phonepe\">Phone-Pe</option>\n                <option value=\"gpay\">GPay</option>\n              </select>\n            </p>\n\n            {generate === \"gennbill\" ? (\n              <>\n                <button type=\"button\" value=\"paid\" onClick={paidOrders}>\n                  Paid\n                </button>\n              </>\n            ) : (\n              <>\n                <button\n                  type=\"button\"\n                  name=\"gennbill\"\n                  value=\"gennbill\"\n                  onClick={generateBill}\n                >\n                  Generate Bill\n                </button>\n                <br />\n                <button\n                  type=\"button\"\n                  name=\"gennbill\"\n                  value=\"gennbill\"\n                  onClick={() =>\n                    removeOrder(props.currentOrder.orderId, props.type)\n                  }\n                >\n                  Remove Order\n                </button>\n              </>\n            )}\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"billgenerate\">\n            <h4>Adding telephone orders</h4>\n            <p className=\"bno\">\n              Order-Id:&ensp;<b>{props.currentOrder.orderId}</b>\n            </p>\n            <p className=\"number\">\n              Name:&ensp;\n              <input\n                type=\"text\"\n                name=\"username\"\n                size=\"15\"\n                value={props.currentOrder.userDetails.userName}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"number\">\n              Phone:&ensp;\n              <input\n                type=\"tel\"\n                name=\"phone\"\n                size=\"15\"\n                value={props.currentOrder.userDetails.phone}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"address\">\n              Address:&ensp;\n              <textarea\n                name=\"address\"\n                size=\"15\"\n                value={props.currentOrder.userDetails.userAddress}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"tq\">\n              Total Quantity:&ensp;<b>{props.currentOrder.noOfItems}</b>\n            </p>\n            <p className=\"tp\">\n              Total Price:&ensp;<i className=\"fas fa-rupee\"></i>\n              <b>{props.currentOrder.totalPrice}</b>\n            </p>\n            <p className=\"tq\">\n              Mode Of\n              <br />\n              Payment:&ensp;\n              <select\n                name=\"paymentMode\"\n                value={props.currentOrder.payment.paymentMethod}\n                onChange={props.onChange}\n              >\n                <option value=\"cash\">Cash</option>\n                <option value=\"debit/credit\">Debit/Credit</option>\n                <option value=\"phonepe\">Phone-Pe</option>\n                <option value=\"gpay\">GPay</option>\n              </select>\n            </p>\n            <button type=\"button\" onClick={addteleorder}>\n              Move to preparing\n            </button>\n            <br />\n            <button\n              type=\"button\"\n              name=\"gennbill\"\n              value=\"gennbill\"\n              onClick={() =>\n                removeOrder(props.currentOrder.orderId, props.type)\n              }\n            >\n              Remove Order\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ManualBilling;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Switch, Route, NavLink, useHistory } from \"react-router-dom\";\n// import Orders from \"../components/Dashboard/Orders\";\nimport StockMaintainance from \"../components/Dashboard/StockMaintainance\";\nimport OrderMaintain from \"../components/Dashboard/OrderMaintain\";\nimport ManualBilling from \"../components/Manual/ManualBilling\";\nimport {\n  billPaidOrder,\n  getTodayOrders,\n  removeListener,\n  updateOrderStatus,\n} from \"../api/OrderDB\";\nimport AuthContext from \"../context/auth-context\";\n// import snackbarLink from \"../ui/Snackbar/SnackbarLink\";\nimport OrdersContext from \"../context/orders-context\";\n// import { onMessageListener, messaging } from \"../services/firebase\";\nimport { store } from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport \"animate.css/animate.min.css\";\nimport { getItem, getMultiTitleItems, setItem } from \"../api/ItemDB\";\nimport localForage from \"localforage\";\nimport localforage from \"localforage\";\nimport { db } from \"../services/firebase\";\n// import GUN from \"gun\";\n\nconst Dashboard = (props) => {\n  // const gun = GUN();\n  const authCtx = useContext(AuthContext);\n  const ordersContext = useContext(OrdersContext);\n  // const history = useHistory();\n  const [items, setItems] = useState([]);\n  const [type, setType] = useState(\"food\");\n  const [orders, setOrders] = useState({\n    allOrders: [],\n    newOrders: [],\n    preparingOrders: [],\n    onDeliveryOrders: [],\n    deliveredOrders: [],\n  });\n  const [outOfStockItems, setOutOfStockItems] = useState({\n    food: [],\n    grocery: [],\n  });\n  // for manual orders\n  const [manualBillNo, setManualBillNo] = useState({\n    telephoneBillNoFood: 0,\n    telephoneBillNoGrocery: 0,\n    manualBillNoFood: 0,\n    manualBillNoGrocery: 0,\n  });\n  const [ongoingOrders, setOngoingOrders] = useState({\n    food: [],\n    grocery: [],\n  });\n  const [currentOrder, setCurrentOrder] = useState({\n    food: {\n      actualPrice: 0,\n      cancelReason: \"\",\n      dBoyId: \"\",\n      deliveryCharge: 0,\n      discount: 0,\n      id: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      noOfItems: 0,\n      orderId: \"\",\n      items: [],\n      payment: {\n        isPaid: false,\n        paymentMethod: \"\",\n      },\n      status: \"\",\n      timestamp: \"\",\n      totalPrice: 0,\n      tax: 0,\n      type: \"dinein\",\n      userDetails: {\n        latitude: 0,\n        longitude: 0,\n        phone: \"\",\n        userAddress: \"\",\n        userId: \"\",\n        userName: \"\",\n      },\n      userid: \"\",\n    },\n    grocery: {\n      actualPrice: 0,\n      cancelReason: \"\",\n      dBoyId: \"\",\n      deliveryCharge: 0,\n      discount: 0,\n      id: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      noOfItems: 0,\n      orderId: \"\",\n      items: [],\n      payment: {\n        isPaid: false,\n        paymentMethod: \"\",\n      },\n      status: \"\",\n      timestamp: \"\",\n      totalPrice: 0,\n      tax: 0,\n      type: \"dinein\",\n      userDetails: {\n        latitude: 0,\n        longitude: 0,\n        phone: \"\",\n        userAddress: \"\",\n        userId: \"\",\n        userName: \"\",\n      },\n      userid: \"\",\n    },\n  });\n\n  navigator.serviceWorker.onmessage = (event) => {\n    // console.log(\"front\", event.data, event.data.messageType);\n    // console.log(\"front-history\", history.location);\n    let notification = event.data.notification;\n    let data = event.data.data;\n    if (data.type === \"food\") {\n      localForage\n        .getItem(\"outOfStockFood\")\n        .then((value) => {\n          if (value === null || value.length === 0) {\n            getItem(\n              data.category,\n              data.type,\n              data.orderId,\n              authCtx.user.location,\n              (item) => {\n                if (item === null) {\n                  console.log(\"In Stock\");\n                } else {\n                  console.log(\"Out Of Stock\");\n                  // add data local db\n                  setOutOfStockItems((prevState) => {\n                    let list = [...prevState.food, item];\n                    localForage.setItem(\"outOfStockFood\", list);\n                    return {\n                      ...prevState,\n                      food: list,\n                    };\n                  });\n                }\n              }\n            );\n          } else {\n            let index = value.findIndex((v) => {\n              return v.id === data.orderId;\n            });\n            if (index === -1) {\n              // if item is not there already\n              getItem(\n                data.category,\n                data.type,\n                data.orderId,\n                authCtx.user.location,\n                (item) => {\n                  if (item === null) {\n                    console.log(\"In Stock\");\n                  } else {\n                    console.log(\"Out Of Stock\");\n                    // add data local db\n                    setOutOfStockItems((prevState) => {\n                      let list = [...prevState.food, item];\n                      localForage.setItem(\"outOfStockFood\", list);\n                      return {\n                        ...prevState,\n                        food: list,\n                      };\n                    });\n                  }\n                }\n              );\n            }\n          }\n        })\n        .catch((e) => console.log(e));\n    } else {\n      localForage\n        .getItem(\"outOfStockGrocery\")\n        .then((value) => {\n          if (value === null) {\n            getItem(\n              data.category,\n              data.type,\n              data.orderId,\n              authCtx.user.location,\n              (item) => {\n                if (item === null) {\n                  console.log(\"In Stock\");\n                } else {\n                  console.log(\"Out Of Stock\");\n                  // add data local db\n                  setOutOfStockItems((prevState) => {\n                    let list = [...prevState.grocery, item];\n                    localForage.setItem(\"outOfStockGrocery\", list);\n                    return {\n                      ...prevState,\n                      grocery: list,\n                    };\n                  });\n                }\n              }\n            );\n          } else {\n            let index = value.findIndex((v) => {\n              return v.id === data.orderId;\n            });\n            if (index === -1) {\n              // if item is not there already\n              getItem(\n                data.category,\n                data.type,\n                data.orderId,\n                authCtx.user.location,\n                (item) => {\n                  if (item === null) {\n                    console.log(\"In Stock\");\n                  } else {\n                    console.log(\"Out Of Stock\");\n                    // add data local db\n                    setOutOfStockItems((prevState) => {\n                      let list = [...prevState.grocery, item];\n                      localForage.setItem(\"outOfStockGrocery\", list);\n                      return {\n                        ...prevState,\n                        grocery: list,\n                      };\n                    });\n                  }\n                }\n              );\n            }\n          }\n        })\n        .catch((e) => console.log(e));\n    }\n    if (event.data.messageType !== \"notification-clicked\") {\n      store.addNotification({\n        title: notification.title,\n        message: notification.body,\n        type: \"default\",\n        insert: \"top\",\n        container: \"bottom-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true,\n        },\n      });\n    }\n  };\n  // messaging.onMessage((payload) => console.log(\"payload\", payload));\n  // messaging.onBackgroundMessage((payload) => console.log(\"bac\", payload));\n\n  // onMessageListener()\n  //   .then((payload) => {\n  //     console.log(\"notificaion msg: \", payload.notification);\n  //   })\n  //   .catch((e) => console.log(e));\n\n  // useEffect(() => {\n  //   let foodList = [];\n  //   let groceryList = [];\n  //   localForage\n  //     .getItem(\"outOfStockFood\")\n  //     .then((value) => {\n  //       // console.log(\"outOfStockFood\", value);\n  //       if (value !== null) {\n  //         foodList = value;\n  //       }\n  //       localForage\n  //         .getItem(\"outOfStockGrocery\")\n  //         .then((value) => {\n  //           // console.log(\"outOfStockGrocery\", value);\n  //           if (value !== null) {\n  //             groceryList = value;\n  //           }\n  //           setOutOfStockItems({\n  //             food: foodList,\n  //             grocery: groceryList,\n  //           });\n  //         })\n  //         .catch((e) => console.log(e));\n  //     })\n  //     .catch((e) => console.log(e));\n\n  //   // console.log(\"foodList\", foodList);\n  //   // console.log(\"groceryList\", groceryList);\n  //   // get ongoingFoodOrders & ongoingGroceryOrders\n  //   localforage\n  //     .getItem(\"ongoingFoodOrders\")\n  //     .then((value) => {\n  //       if (value !== null) {\n  //         setOngoingOrders((prevState) => {\n  //           return {\n  //             ...prevState,\n  //             food: value,\n  //           };\n  //         });\n  //       }\n  //       localforage\n  //         .getItem(\"ongoingGroceryOrders\")\n  //         .then((value) => {\n  //           if (value !== null) {\n  //             setOngoingOrders((prevState) => {\n  //               return {\n  //                 ...prevState,\n  //                 grocery: value,\n  //               };\n  //             });\n  //           }\n  //         })\n  //         .catch((e) => console.log(e));\n  //     })\n  //     .catch((e) => console.log(e));\n  // }, []);\n\n  useEffect(() => {\n    console.log(\"useEffect [Dashboard.js] Orders\");\n    let user = authCtx.user;\n    var unsubscribe;\n    if (user !== null) {\n      let date = new Date();\n      let day = date.getDate();\n      if (day < 10) {\n        day = \"0\" + day;\n      }\n      let month = date.getMonth() + 1;\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n      let year = date.getFullYear();\n      date = day + \".\" + month + \".\" + year;\n\n      // getTodayOrders(date, type, user.location, (orderss, manualBillNo) => {\n      let ty = \"\";\n      if (type === \"food\") {\n        ty = \"FoodOrders\";\n        // date = \"02.11.2021\";\n      } else {\n        ty = \"GroceryOrders\";\n        // date = \"03.11.2021\";\n      }\n      let list = [];\n      unsubscribe = db\n        .collection(ty)\n        .doc(\"todayOrders\")\n        .collection(user.location)\n        .onSnapshot(\n          (docs) => {\n            docs.forEach((doc) => {\n              list.push(doc.data());\n            });\n            if (list.length === 0) {\n              setOrders(\"No Orders\");\n            } else {\n              console.log(\"orderss\", list);\n              let data = {\n                allOrders: [],\n                newOrders: [],\n                preparingOrders: [],\n                onDeliveryOrders: [],\n                deliveredOrders: [],\n              };\n\n              let statData = {\n                online: 0,\n                telephone: 0,\n                ready: 0,\n                cancelled: 0,\n              };\n              // allOrders\n              list.sort((a, b) => {\n                if (a.timestamp < b.timestamp) {\n                  return 1;\n                }\n                if (a.timestamp > b.timestamp) {\n                  return -1;\n                }\n                return 0;\n              });\n              data.allOrders = [...list];\n              // other orders\n              list.forEach((o) => {\n                if (o.status === \"booked\") {\n                  data.newOrders.push(o);\n                  // if (orders.allOrders.length !== 0) {\n                  //   console.log(\"orders snap\", orders.allOrders);\n                  //   let index = orders.allOrders.findIndex((ord) => {\n                  //     return o.orderId === ord.orderId;\n                  //   });\n                  //   if (index === -1) {\n                  //     // console.log(\"index\", index, o);\n                  //     snackbarLink(o, \"New Order\");\n                  //   }\n                  // }\n                } else if (o.status === \"preparing\") {\n                  data.preparingOrders.push(o);\n                  // } else if (o.status === \"ondelivery\") {\n                } else if (\n                  o.status === \"assigned\" ||\n                  o.status === \"ondelivery\"\n                ) {\n                  data.onDeliveryOrders.push(o);\n                  statData.ready++;\n                } else if (o.status === \"delivered\") {\n                  data.deliveredOrders.push(o);\n                }\n                if (o.type === \"online\") {\n                  statData.online++;\n                } else if (o.type === \"telephone\") {\n                  statData.telephone++;\n                }\n              });\n              setOrders((prevState) => {\n                return data;\n              });\n              ordersContext.setOrderData(statData);\n            }\n            // setOrders(list);\n            list = [];\n            // console.log(\"unsub\", unsubscribe);\n          },\n          (e) => console.log(e)\n        );\n    }\n    return () => {\n      if (unsubscribe instanceof Function) {\n        unsubscribe();\n      } else {\n        console.log(\"Not a function\");\n      }\n      // unsubscribe();\n      // removeListener();\n      console.log(\"cleanup for listener\");\n    };\n  }, [type, authCtx]);\n\n  const removeHandler = (id) => {\n    // console.log(\"remove\", id);\n    if (type === \"food\") {\n      setOutOfStockItems((prevState) => {\n        let list = [...prevState.food];\n        let index = list.findIndex((v) => v.id === id);\n        list.splice(index, 1);\n        localForage\n          .setItem(\"outOfStockFood\", list)\n          .then(() => console.log(\"food successfully updated!!!\"))\n          .catch((e) => console.log(e));\n        return {\n          ...prevState,\n          food: list,\n        };\n      });\n    } else {\n      setOutOfStockItems((prevState) => {\n        let list = [...prevState.grocery];\n        let index = list.findIndex((v) => v.id === id);\n        list.splice(index, 1);\n        localForage\n          .setItem(\"outOfStockGrocery\", list)\n          .then(() => console.log(\"grocery successfully updated!!!\"))\n          .catch((e) => console.log(e));\n        return {\n          ...prevState,\n          grocery: list,\n        };\n      });\n    }\n  };\n\n  // update outOfStock\n  const checkHandler = (item) => {\n    if (type === \"food\") {\n      setItem(item.category, type, item, authCtx.user.location, (isAdded) => {\n        if (isAdded) {\n          setOutOfStockItems((prevState) => {\n            let list = [...prevState.food];\n            let index = list.findIndex((v) => v.id === item.id);\n            list.splice(index, 1);\n            localForage\n              .setItem(\"outOfStockFood\", list)\n              .then(() => console.log(\"food successfully updated!!!\"))\n              .catch((e) => console.log(e));\n            return {\n              ...prevState,\n              food: list,\n            };\n          });\n        } else {\n          alert(\"Some error!!!\");\n        }\n      });\n    } else {\n      setItem(item.category, type, item, (isAdded) => {\n        if (isAdded) {\n          setOutOfStockItems((prevState) => {\n            let list = [...prevState.grocery];\n            let index = list.findIndex((v) => v.id === item.id);\n            list.splice(index, 1);\n            localForage\n              .setItem(\"outOfStockGrocery\", list)\n              .then(() => console.log(\"grocery successfully updated!!!\"))\n              .catch((e) => console.log(e));\n            return {\n              ...prevState,\n              grocery: list,\n            };\n          });\n        } else {\n          alert(\"Some error!!!\");\n        }\n      });\n    }\n  };\n\n  const createOrder = (manual) => {\n    // setManualBillNo((prevState) => {\n    //   if (type === \"food\") {\n    //     if (manual === \"dineIn\") {\n    //       return {\n    //         ...prevState,\n    //         // manualBillNoFood: prevState.manualBillNoFood + 1,\n    //         manualBillNoFood: new Date().getTime(),\n    //       };\n    //     } else {\n    //       return {\n    //         ...prevState,\n    //         // telephoneBillNoFood: prevState.telephoneBillNoFood + 1,\n    //         telephoneBillNoFood: new Date().getTime(),\n    //       };\n    //     }\n    //   } else {\n    //     if (manual === \"dineIn\") {\n    //       return {\n    //         ...prevState,\n    //         // manualBillNoGrocery: prevState.manualBillNoGrocery + 1,\n    //         manualBillNoGrocery: new Date().getTime(),\n    //       };\n    //     } else {\n    //       return {\n    //         ...prevState,\n    //         // telephoneBillNoGrocery: prevState.telephoneBillNoGrocery + 1,\n    //         telephoneBillNoGrocery: new Date().getTime(),\n    //       };\n    //     }\n    //   }\n    // });\n\n    let time = new Date().getTime();\n    if (type === \"food\") {\n      setOngoingOrders((prevState) => {\n        let list = [...prevState.food];\n        let newData = {\n          // orderId: \"FD\" + (manualBillNo.manualBillNoFood + 1);\n          actualPrice: 0,\n          cancelReason: \"\",\n          dBoyId: \"\",\n          deliveryCharge: 0,\n          discount: 0,\n          id: \"FD\" + time,\n          latitude: \"\",\n          longitude: \"\",\n          noOfItems: 0,\n          orderId: \"FD\" + time,\n          items: [],\n          payment: {\n            isPaid: true,\n            paymentMethod: \"cash\",\n          },\n          status: \"\",\n          timestamp: \"\",\n          totalPrice: 0,\n          tax: 0,\n          type: \"dinein\",\n          userDetails: {\n            latitude: 0,\n            longitude: 0,\n            phone: \"\",\n            userAddress: \"\",\n            userId: \"\",\n            userName: \"\",\n          },\n          userid: \"\",\n        };\n\n        if (manual === \"telephone\") {\n          newData = {\n            // orderId: \"FT\" + (manualBillNo.telephoneBillNoFood + 1),\n            actualPrice: 0,\n            cancelReason: \"\",\n            dBoyId: \"\",\n            deliveryCharge: 0,\n            discount: 0,\n            id: \"FT\" + time,\n            latitude: \"\",\n            longitude: \"\",\n            noOfItems: 0,\n            orderId: \"FT\" + time,\n            items: [],\n            payment: {\n              isPaid: false,\n              paymentMethod: \"cash\",\n            },\n            status: \"\",\n            timestamp: \"\",\n            totalPrice: 0,\n            tax: 0,\n            type: \"telephone\",\n            userDetails: {\n              latitude: 0,\n              longitude: 0,\n              phone: \"\",\n              userAddress: \"\",\n              userId: \"\",\n              userName: \"\",\n            },\n            userid: \"\",\n          };\n        }\n        localforage.setItem(\"ongoingFoodOrders\", [...list, newData]);\n        return {\n          ...prevState,\n          food: [...list, newData],\n        };\n      });\n    } else {\n      setOngoingOrders((prevState) => {\n        let list = [...prevState.grocery];\n        let newData = {\n          // orderId: \"GD\" + (manualBillNo.manualBillNoGrocery + 1),\n          actualPrice: 0,\n          cancelReason: \"\",\n          dBoyId: \"\",\n          deliveryCharge: 0,\n          discount: 0,\n          id: \"GD\" + time,\n          latitude: \"\",\n          longitude: \"\",\n          noOfItems: 0,\n          orderId: \"GD\" + time,\n          items: [],\n          payment: {\n            isPaid: true,\n            paymentMethod: \"cash\",\n          },\n          status: \"\",\n          timestamp: \"\",\n          totalPrice: 0,\n          tax: 0,\n          type: \"dinein\",\n          userDetails: {\n            latitude: 0,\n            longitude: 0,\n            phone: \"\",\n            userAddress: \"\",\n            userId: \"\",\n            userName: \"\",\n          },\n          userid: \"\",\n        };\n        if (manual === \"telephone\") {\n          newData = {\n            // orderId: \"GT\" + (manualBillNo.telephoneBillNoGrocery + 1),\n            actualPrice: 0,\n            cancelReason: \"\",\n            dBoyId: \"\",\n            deliveryCharge: 0,\n            discount: 0,\n            id: \"GT\" + time,\n            latitude: \"\",\n            longitude: \"\",\n            noOfItems: 0,\n            orderId: \"GT\" + time,\n            items: [],\n            payment: {\n              isPaid: false,\n              paymentMethod: \"cash\",\n            },\n            status: \"\",\n            timestamp: \"\",\n            totalPrice: 0,\n            tax: 0,\n            type: \"telephone\",\n            userDetails: {\n              latitude: 0,\n              longitude: 0,\n              phone: \"\",\n              userAddress: \"\",\n              userId: \"\",\n              userName: \"\",\n            },\n            userid: \"\",\n          };\n        }\n        localforage.setItem(\"ongoingGroceryOrders\", [...list, newData]);\n        return {\n          ...prevState,\n          grocery: [...list, newData],\n        };\n      });\n    }\n  };\n\n  const removeOrder = (orderId, type) => {\n    // console.log(\"order\", orderId, type);\n    setOngoingOrders((prevState) => {\n      if (type === \"food\") {\n        let listFood = [...prevState.food];\n        let index = listFood.findIndex((val) => val.orderId === orderId);\n        listFood.splice(index, 1);\n        localforage.setItem(\"ongoingFoodOrders\", [...listFood]);\n        return {\n          ...prevState,\n          food: [...listFood],\n        };\n      } else {\n        let listGrocery = [...prevState.grocery];\n        let index = listGrocery.findIndex((val) => val.orderId === orderId);\n        listGrocery.splice(index, 1);\n        localforage.setItem(\"ongoingGroceryOrders\", [...listGrocery]);\n        return {\n          ...prevState,\n          grocery: [...listGrocery],\n        };\n      }\n    });\n    setCurrentOrder({\n      food: {\n        actualPrice: 0,\n        cancelReason: \"\",\n        dBoyId: \"\",\n        deliveryCharge: 0,\n        discount: 0,\n        id: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        noOfItems: 0,\n        orderId: \"\",\n        items: [],\n        payment: {\n          isPaid: false,\n          paymentMethod: \"\",\n        },\n        status: \"\",\n        timestamp: \"\",\n        totalPrice: 0,\n        tax: 0,\n        type: \"dinein\",\n        userDetails: {\n          latitude: 0,\n          longitude: 0,\n          phone: \"\",\n          userAddress: \"\",\n          userId: \"\",\n          userName: \"\",\n        },\n        userid: \"\",\n      },\n      grocery: {\n        actualPrice: 0,\n        cancelReason: \"\",\n        dBoyId: \"\",\n        deliveryCharge: 0,\n        discount: 0,\n        id: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        noOfItems: 0,\n        orderId: \"\",\n        items: [],\n        payment: {\n          isPaid: false,\n          paymentMethod: \"\",\n        },\n        status: \"\",\n        timestamp: \"\",\n        totalPrice: 0,\n        tax: 0,\n        type: \"dinein\",\n        userDetails: {\n          latitude: 0,\n          longitude: 0,\n          phone: \"\",\n          userAddress: \"\",\n          userId: \"\",\n          userName: \"\",\n        },\n        userid: \"\",\n      },\n    });\n  };\n\n  const onChangeHandler = (e, item) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    let index = items.findIndex((i) => i.Name === value);\n    if (index !== -1) {\n      let item = items[index];\n      if (name === \"searchItems\") {\n        if (type === \"food\") {\n          setCurrentOrder((prevState) => {\n            let list = [...prevState.food.items];\n            console.log(\"change-food\", prevState);\n            let food = prevState.food;\n            // below two lines is to ensure that we only add unique items\n            let i = food.items.findIndex((i) => i.id === item.id);\n            // console.log(\"change\", item, props.location);\n            if (i === -1) {\n              let newItem = {\n                ...item,\n                // itemId: item.id,\n                // itemName: item.Name,\n                itemPrice: item.branch[authCtx.user.location].current_price,\n                itemSize: 1,\n                itemQuantity: 1,\n              };\n              // if (\n              //   item.branch[authCtx.user.location].actualPrice === -1 &&\n              //   item.branch[authCtx.user.location].currentPrice\n              // ) {\n              //   newItem = {\n              //     ...item,\n              //     itemPrice: item.branch[authCtx.user.location].cquarterPrice,\n              //     itemSize: 1,\n              //     itemQuantity: \"quarter\",\n              //   };\n              // }\n              food.totalPrice += newItem.itemPrice;\n              food.noOfItems = food.noOfItems + 1;\n              food.items = [...list, newItem];\n              localforage\n                .getItem(\"ongoingFoodOrders\")\n                .then((value) => {\n                  if (value === null) {\n                    let list = [];\n                    list.push(food);\n                    localforage.setItem(\"ongoingFoodOrders\", list);\n                  } else {\n                    // let list = [...value];\n                    let list = [];\n                    list.push(food);\n                    localforage.setItem(\"ongoingFoodOrders\", list);\n                  }\n                })\n                .catch((e) => console.log(e));\n              return {\n                ...prevState,\n                food: food,\n              };\n            } else {\n              alert(\"Already added that item!!!\");\n              food.items = [...list];\n              return {\n                ...prevState,\n                food: food,\n              };\n            }\n          });\n        } else {\n          // console.log(\"change-grocery\");\n          if (item.branch[authCtx.user.location] === undefined) {\n            alert(\"Not available in your location!!!\");\n          }\n          setCurrentOrder((prevState) => {\n            let list = [...prevState.grocery.items];\n            let grocery = prevState.grocery;\n            let i = grocery.items.findIndex((i) => i.id === item.id);\n            if (i === -1) {\n              let newItem = {\n                ...item,\n                // itemId: item.id,\n                // itemName: item.Name,\n                itemPrice: item.branch[authCtx.user.location].current_price,\n                itemSize: 1,\n                itemQuantity: 1,\n              };\n              // if (item[authCtx.user.location].price.length <= 0) {\n              //   newItem = {\n              //     ...item,\n              //     itemPrice: item[authCtx.user.location].price.cquarterPrice,\n              //     itemSize: 1,\n              //     itemQuantity: \"quarter\",\n              //   };\n              // }\n              grocery.totalPrice += newItem.itemPrice;\n              grocery.noOfItems = grocery.noOfItems + 1;\n              grocery.items = [...list, newItem];\n              return {\n                ...prevState,\n                grocery: grocery,\n              };\n            } else {\n              alert(\"Already added that item!!!\");\n              grocery.items = [...list];\n              return {\n                ...prevState,\n                grocery: grocery,\n              };\n            }\n          });\n        }\n        document.getElementById(\"searchItems\").value = \"\";\n      }\n    } else if (name === \"phone\" || name === \"username\" || name === \"address\") {\n      if (type === \"food\") {\n        setCurrentOrder((prevState) => {\n          let food = prevState.food;\n          if (name === \"phone\") {\n            food.userDetails.phone = value;\n          } else if (name === \"username\") {\n            food.userDetails.userName = value;\n          } else if (name === \"address\") {\n            food.userDetails.userAddress = value;\n          }\n          return {\n            ...prevState,\n            food: food,\n          };\n        });\n      } else {\n        setCurrentOrder((prevState) => {\n          let grocery = prevState.grocery;\n          if (name === \"phone\") {\n            grocery.userDetails.phone = value;\n          } else if (name === \"username\") {\n            grocery.userDetails.userName = value;\n          } else if (name === \"address\") {\n            grocery.userDetails.userAddress = value;\n          }\n          return {\n            ...prevState,\n            food: grocery,\n          };\n        });\n      }\n    } else if (name === \"paymentMode\") {\n      if (type === \"food\") {\n        setCurrentOrder((prevState) => {\n          let food = prevState.food;\n          food.payment.paymentMethod = value;\n          return {\n            ...prevState,\n            food: food,\n          };\n        });\n      } else {\n        setCurrentOrder((prevState) => {\n          let grocery = prevState.grocery;\n          grocery.payment.paymentMethod = value;\n          return {\n            ...prevState,\n            grocery: grocery,\n          };\n        });\n      }\n    } else if (name === \"itemSize\") {\n      // console.log(\"change-itemSize--\", currentOrder, item);\n      if (type === \"food\") {\n        setCurrentOrder((prevState) => {\n          let list = [...prevState.food.items];\n          let index = list.findIndex((l) => l.id === item.id);\n          let updatedItem = {\n            ...list[index],\n            itemSize: value,\n          };\n          list[index] = updatedItem;\n          let food = prevState.food;\n          food.items = [...list];\n          let sumPrice = 0;\n          let size = 0;\n          food.items.forEach((item) => {\n            sumPrice += item.itemPrice * item.itemSize;\n            size += parseInt(item.itemSize);\n          });\n          food.totalPrice = sumPrice;\n          food.noOfItems = size;\n          return {\n            ...prevState,\n            food: food,\n          };\n        });\n      } else {\n        setCurrentOrder((prevState) => {\n          let list = [...prevState.grocery.items];\n          let index = list.findIndex((l) => l.id === item.id);\n          let updatedItem = {\n            ...list[index],\n            itemSize: value,\n          };\n          list[index] = updatedItem;\n          let grocery = prevState.grocery;\n          grocery.items = [...list];\n          let sumPrice = 0;\n          let size = 0;\n          grocery.items.forEach((item) => {\n            sumPrice += item.itemPrice * item.itemSize;\n            size += parseInt(item.itemSize);\n          });\n          grocery.totalPrice = sumPrice;\n          grocery.noOfItems = size;\n          return {\n            ...prevState,\n            grocery: grocery,\n          };\n        });\n      }\n    } else if (name === \"itemQuantity\") {\n      // console.log(\"change-itemQuantity\", currentOrder, item);\n      if (type === \"food\") {\n        setCurrentOrder((prevState) => {\n          let list = [...prevState.food.items];\n          let index = list.findIndex((l) => l.id === item.id);\n          let price = item[authCtx.user.location].price.cquarterPrice;\n          if (value === \"half\") {\n            price = item[authCtx.user.location].price.chalfPrice;\n          } else if (value === \"full\") {\n            price = item[authCtx.user.location].price.cfullPrice;\n          }\n          let updatedItem = {\n            ...list[index],\n            itemQuantity: value,\n            itemPrice: price,\n          };\n          list[index] = updatedItem;\n          let food = prevState.food;\n          food.items = [...list];\n          let sumPrice = 0;\n          food.items.forEach((item) => {\n            sumPrice += item.itemPrice * item.itemSize;\n          });\n          food.totalPrice = sumPrice;\n          return {\n            ...prevState,\n            food: food,\n          };\n        });\n      } else {\n        console.log(\"No code yet for grocery, bcs it is different\");\n      }\n    }\n  };\n\n  const removeItem = (id) => {\n    // console.log(\"removeItem\", id);\n    if (type === \"food\") {\n      setCurrentOrder((prevState) => {\n        let list = [...prevState.food.items];\n        let index = list.findIndex((l) => l.id === id);\n        list.splice(index, 1);\n        let food = prevState.food;\n        food.noOfItems = food.noOfItems - 1;\n        food.items = [...list];\n        let sumPrice = 0;\n        let size = 0;\n        list.forEach((item) => {\n          sumPrice += item.itemPrice * item.itemSize;\n          size += parseInt(item.itemSize);\n        });\n        food.totalPrice = sumPrice;\n        food.noOfItems = size;\n        return {\n          ...prevState,\n          food: food,\n        };\n      });\n    } else {\n      // console.log(\"change-grocery\");\n      setCurrentOrder((prevState) => {\n        let list = [...prevState.grocery.items];\n        let index = list.findIndex((l) => l.id === id);\n        list.splice(index, 1);\n        let grocery = prevState.grocery;\n        grocery.noOfItems = grocery.noOfItems + 1;\n        grocery.items = [...list];\n        let sumPrice = 0;\n        let size = 0;\n        grocery.items.forEach((item) => {\n          sumPrice += item.itemPrice * item.itemSize;\n          size += parseInt(item.itemSize);\n        });\n        grocery.totalPrice = sumPrice;\n        grocery.noOfItems = size;\n        return {\n          ...prevState,\n          grocery: grocery,\n        };\n      });\n    }\n  };\n\n  const generateBill = () => {\n    if (type === \"food\") {\n      console.log(\"currentOrder\", currentOrder.food);\n      if (\n        currentOrder.food.totalPrice === 0 ||\n        currentOrder.food.noOfItems === 0\n      ) {\n        alert(\"Price or Item should not be 0(Zero)!!!\");\n      } else {\n        billPaidOrder(\n          currentOrder.food,\n          type,\n          authCtx.user.location,\n          (isAdded) => {\n            if (isAdded) {\n              // window.alert(\"Successfully Added to local store!!!\");\n              // for thermal printer && data added to backend\n              alert(\"Food Bill Generated for - \" + currentOrder.food.orderId);\n              removeOrder(currentOrder.food.orderId, type);\n            } else {\n              // error not adding\n              window.alert(\"Not Added... Try Again!!!\");\n            }\n          }\n        );\n      }\n    } else {\n      console.log(\"currentOrder-grocery\", currentOrder.grocery);\n      if (\n        currentOrder.food.totalPrice === 0 ||\n        currentOrder.food.noOfItems === 0\n      ) {\n        alert(\"Price or Item should not be 0(Zero)!!!\");\n      } else {\n        billPaidOrder(\n          currentOrder.grocery,\n          type,\n          authCtx.user.location,\n          (isAdded) => {\n            if (isAdded) {\n              // window.alert(\"Successfully Added to local store!!!\");\n              // for thermal printer && data added to backend\n              alert(\n                \"Grocery Bill Generated for - \" + currentOrder.grocery.orderId\n              );\n              removeOrder(currentOrder.grocery.orderId, type);\n            } else {\n              // error not adding\n              window.alert(\"Not Added... Try Again!!!\");\n            }\n          }\n        );\n      }\n    }\n  };\n\n  const sendNotificationToDeliveryUser = async (order, dGuy, status) => {\n    console.log(\"order\", order);\n    const FIREBASE_API_KEY =\n      \"AAAA_JouL7I:APA91bHU1dqei_StIKqJVED6WsQRD4JKUhauk2VvPy3KUtGOQ715PTmmE8yTK5cFfJvcs0EXsrVAO2YBEdIPYYzktL4FdNXTkf3TV8V6_keOr842VNuDiGfw3Ulv-rkDXzYeNo-_8Wul\";\n    const address =\n      \"TO: \" + order.userDetails?.userName ||\n      order.order_address.userName +\n        \", Address: \" +\n        order.userDetails?.userAddress ||\n      order.order_address.userAddress;\n    const message = {\n      registration_ids: [],\n      notification: {\n        title: \"New Order - \" + order.orderId,\n        body: address,\n        vibrate: 1,\n        sound: 1,\n        show_in_foreground: true,\n        priority: \"high\",\n        content_available: true,\n      },\n      data: {\n        title: \"New Order - \" + order.orderId,\n        body: address,\n        id: order.id,\n      },\n    };\n    message.registration_ids.push(dGuy.user_token);\n\n    let headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"key=\" + FIREBASE_API_KEY,\n    });\n\n    let response = await fetch(\"https://fcm.googleapis.com/fcm/send\", {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(message),\n    });\n    response = await response.json();\n    console.log(\"response\", response);\n    store.addNotification({\n      title: \"Notification Sent!!!\",\n      message: \"To Delivery User: \" + dGuy.user_username,\n      type: \"default\",\n      insert: \"top\",\n      container: \"bottom-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 5000,\n        onScreen: true,\n      },\n    });\n  };\n\n  // status change - preparing, assigned\n  const updateOrder = (order, status, dGuy) => {\n    updateOrderStatus(\n      type,\n      authCtx.user.location,\n      order,\n      status,\n      (isUpdated) => {\n        if (isUpdated) {\n          setOrders((prevState) => {\n            if (status === \"preparing\") {\n              let updatedOrder = {\n                ...order,\n                status: \"preparing\",\n              };\n              // all orders array\n              let allOrders = [...prevState.allOrders];\n              let allIndex = allOrders.findIndex((o) => o.id === order.id);\n              allOrders[allIndex] = updatedOrder;\n              // new Orders array\n              let newOrders = [...prevState.newOrders];\n              let newIndex = newOrders.findIndex((o) => o.id === order.id);\n              // delete from newOrders and push into preparingOrders\n              newOrders.splice(newIndex, 1);\n              let preparingOrders = [...prevState.preparingOrders];\n              preparingOrders.push(updatedOrder);\n              return {\n                ...prevState,\n                allOrders: allOrders,\n                newOrders: newOrders,\n                preparingOrders: preparingOrders,\n              };\n            } else if (status === \"assigned\") {\n              // send notification to delivery boy\n              sendNotificationToDeliveryUser(order, dGuy, \"assigned\");\n              // change delivery boy status to \"assigned\"\n              let updatedOrder = {\n                ...order,\n                status: \"assigned\",\n              };\n              // all orders array\n              let allOrders = [...prevState.allOrders];\n              let allIndex = allOrders.findIndex((o) => o.id === order.id);\n              allOrders[allIndex] = updatedOrder;\n\n              // new Orders array\n              let preparingOrders = [...prevState.preparingOrders];\n              let prepareIndex = preparingOrders.findIndex(\n                (o) => o.id === order.id\n              );\n              // delete from newOrders and push into preparingOrders\n              preparingOrders.splice(prepareIndex, 1);\n              let onDeliveryOrders = [...prevState.onDeliveryOrders];\n              onDeliveryOrders.push(updatedOrder);\n              return {\n                ...prevState,\n                allOrders: allOrders,\n                preparingOrders: preparingOrders,\n                onDeliveryOrders: onDeliveryOrders,\n              };\n            }\n          });\n        } else {\n          alert(\"Order Not Updated, Try Again!!!\");\n        }\n      }\n    );\n  };\n\n  const assignDeliveryUser = (order, user) => {\n    let data = {\n      ...order,\n      dBoyId: user.user_id,\n    };\n    // console.log(\"assignDeliveryUser\", data);\n    updateOrder(data, \"assigned\", user);\n  };\n\n  return (\n    <>\n      <div className=\"row headnav\">\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/allorder\">All Orders</NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/neworder\">New Arrivals</NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/preparing\">Preparing</NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/ondeliver\">On Delivery</NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/delivered\">Delivered</NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/manual\">Manual</NavLink>\n        </div>\n        <div className=\"dropdown\">\n          <select\n            onChange={(e) => {\n              // console.log(e.target.value);\n              setType(e.target.value);\n            }}\n          >\n            <option value=\"food\">Food</option>\n            <option value=\"grocery\">Grocery</option>\n          </select>\n        </div>\n        {/* {authCtx.user !== null && (\n          <StockMaintainance\n            items={\n              type === \"food\" ? outOfStockItems.food : outOfStockItems.grocery\n            }\n            location={authCtx.user.location}\n            type={type}\n            removeHandler={removeHandler}\n            checkHandler={checkHandler}\n          />\n        )} */}\n      </div>\n      <div>\n        <Switch>\n          <Route path=\"/home/dashboard/allorder\">\n            <OrderMaintain\n              orders={orders.allOrders}\n              updateOrderStatus={(order, status) => updateOrder(order, status)}\n              assignDeliveryUser={assignDeliveryUser}\n            />\n          </Route>\n          <Route path=\"/home/dashboard/neworder\">\n            <OrderMaintain\n              orders={orders.newOrders}\n              updateOrderStatus={(order, status) => {\n                updateOrderStatus(order, status);\n              }}\n            />\n          </Route>\n          <Route path=\"/home/dashboard/preparing\">\n            <OrderMaintain\n              orders={orders.preparingOrders}\n              assignDeliveryUser={assignDeliveryUser}\n            />\n          </Route>\n          <Route path=\"/home/dashboard/ondeliver\">\n            <OrderMaintain orders={orders.onDeliveryOrders} />\n          </Route>\n          <Route path=\"/home/dashboard/delivered\">\n            <OrderMaintain\n              orders={orders.deliveredOrders}\n              type={type}\n              location={authCtx.user !== null && authCtx.user.location}\n            />\n          </Route>\n          <Route path=\"/home/dashboard/manual\">\n            {authCtx.user !== null && (\n              <ManualBilling\n                removeOrder={removeOrder}\n                onChange={onChangeHandler}\n                items={items}\n                type={type}\n                setItems={(res) => setItems(res)}\n                ongoingOrders={\n                  type === \"food\" ? ongoingOrders.food : ongoingOrders.grocery\n                }\n                currentOrder={\n                  type === \"food\" ? currentOrder.food : currentOrder.grocery\n                }\n                generateBill={generateBill}\n                removeItem={removeItem}\n                location={authCtx.user.location}\n                setCurrentOrder={(order) => {\n                  // console.log(\"order\", ongoingOrders.food);\n                  if (type === \"food\") {\n                    setCurrentOrder((prevState) => {\n                      return {\n                        ...prevState,\n                        food: order,\n                      };\n                    });\n                  } else {\n                    setCurrentOrder((prevState) => {\n                      return {\n                        ...prevState,\n                        grocery: order,\n                      };\n                    });\n                  }\n                }}\n                createOrder={createOrder}\n              />\n            )}\n          </Route>\n        </Switch>\n        {/* <Switch>\n          <Route path=\"/home/dashboard/foodorder\">\n            <Orders type=\"food\" />\n          </Route>\n          <Route path=\"/home/dashboard/groceryorder\">\n            <Orders type=\"grocery\" />\n          </Route>\n        </Switch> */}\n        {/* <StockMaintainance /> */}\n      </div>\n      <div id=\"snackbar-container\"></div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Food = () => {\n  return (\n    <section>\n      <div className=\"row fooditem\">\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/menu.png\" alt=\"addnew\" />\n            <p className=\"title\">Add New</p>\n            <Link to=\"/home/fooditems/addnew\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/dish1.png\"\n              alt=\"breakfast\"\n            />\n            <p className=\"title\">Breakfast</p>\n            <Link\n              to=\"/home/fooditems/breakfast\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/dish.png\" alt=\"lunch\" />\n            <p className=\"title\">Lunch</p>\n            <Link to=\"/home/fooditems/lunch\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/hot.png\" alt=\"dinner\" />\n            <p className=\"title\">Dinner</p>\n            <Link to=\"/home/fooditems/dinner\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        {/* <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/roasted-chicken.png\"\n              alt=\"starters\"\n              width=\"200px\"\n            />\n            <p className=\"title\">Starters</p>\n            <Link\n              to=\"/home/fooditems/starters\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/canapes.png\"\n              alt=\"desserts\"\n            />\n            <p className=\"title\">Desserts</p>\n            <Link\n              to=\"/home/fooditems/desserts\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/fast-food1.png\"\n              // src=\"/loaders/24064-food-squeeze-with-burger-and-hot-dog.gif\"\n              alt=\"bigdeal\"\n            />\n            <p className=\"title\">Big Deal Offers</p>\n            <Link\n              to=\"/home/fooditems/bigdeal\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/drink.png\"\n              alt=\"freshjuice\"\n            />\n            <p className=\"title\">Fresh Juice</p>\n            <Link to=\"/home/fooditems/juice\" className=\"stretched-link\"></Link>\n          </div>\n        </div> */}\n      </div>\n    </section>\n  );\n};\n\nexport default Food;\n","import React, { useEffect, useState } from \"react\";\nimport Chart from \"chart.js/auto\";\n\nconst LineChart = (props) => {\n  // const [labels, setLabels] = useState(null);\n  // const [data, setData] = useState(null);\n  // const [config, setConfig] = useState(null);\n\n  useEffect(() => {\n    let labels = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n    let stat = props.stat;\n    if (props.filter.type === \"month\") {\n      // labels = [\"week1\", \"week2\", \"week3\", \"week4\"];\n      labels = [];\n      for (let i = 0; i < stat.onlineStat.length; i++) {\n        if (i < 9) {\n          labels.push(\"0\" + (i + 1));\n        } else {\n          labels.push(i + 1);\n        }\n      }\n    } else if (props.filter.type === \"day\") {\n      labels = [\n        \"6-8am\",\n        \"8-10am\",\n        \"10-11.50am\",\n        \"12-2pm\",\n        \"2-4pm\",\n        \"4-6pm\",\n        \"6-8pm\",\n        \"8-10pm\",\n        \"10-11.59pm\",\n        \"12-6am\"\n      ];\n    }\n    let data = {\n      labels: labels,\n      datasets: [\n        {\n          label: \"Online\",\n          data: stat.onlineStat,\n          fill: false,\n          borderColor: \"rgb(75, 192, 192)\",\n          tension: 0.1\n        },\n        {\n          label: \"DineIn\",\n          data: stat.dineInStat,\n          fill: false,\n          borderColor: \"tomato\",\n          tension: 0.1\n        }\n      ]\n    };\n    // setConfig();\n    let config = {\n      type: \"line\",\n      data: data,\n      options: {}\n    };\n\n    const chart = new Chart(document.getElementById(\"lineChart\"), config);\n    // when component unmounts\n    return () => {\n      chart.destroy();\n    };\n  }, [props.stat]);\n\n  // useEffect(() => {\n  //   const chart = new Chart(document.getElementById(\"lineChart\"), config);\n  //   // when component unmounts\n  //   return () => {\n  //     chart.destroy();\n  //   };\n  // }, []);\n\n  return (\n    <div className=\"lineChart\">\n      <h1>Orders - {props.filter.value}</h1>\n\n      <br />\n\n      <canvas id=\"lineChart\"></canvas>\n    </div>\n  );\n};\n\nexport default LineChart;\n","import React, { useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\n\nconst PieChart = (props) => {\n  useEffect(() => {\n    const labels = [\"Online\", \"Dine-In\"];\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: \"Revenue\",\n          data: [props.stat.onlineRevenue, props.stat.dineInRevenue],\n          backgroundColor: [\n            \"rgb(255, 99, 132)\",\n            \"rgb(54, 162, 235)\",\n            \"rgb(255, 205, 86)\"\n          ],\n          hoverOffset: 4\n        }\n      ]\n    };\n\n    const config = {\n      type: \"pie\",\n      data: data,\n      options: {}\n    };\n    const chart = new Chart(document.getElementById(\"pieChart\"), config);\n    // when component unmounts\n    return () => {\n      chart.destroy();\n    };\n  }, [props.stat]);\n\n  return (\n    <div className=\"piechart\">\n      <h1>Total Revenue</h1>\n      <br />\n      <canvas id=\"pieChart\"></canvas>\n    </div>\n  );\n};\n\nexport default PieChart;\n","import { useEffect, useState } from \"react\";\nimport \"./Tables.css\";\n\nconst Tables = (props) => {\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    setOrders(props.orders);\n  }, [props.orders]);\n\n  let ui = null;\n  if (orders.length === 0 || orders === \"empty\") {\n    ui = (\n      <tr>\n        <td style={{ textAlign: \"center\" }}>No Orders</td>\n      </tr>\n    );\n  } else {\n    ui = orders.map((order) => {\n      return (\n        <tr key={order.orderId}>\n          <td>{order.orderId}</td>\n          <td>\n            <p style={{ textTransform: \"capitalize\" }}>\n              {order.userDetails.userName}\n            </p>\n            <p>{order.userDetails.phone}</p>\n          </td>\n          <td>{order.userDetails.userAddress}</td>\n          <td>\n            {order.order_items.map((item) => {\n              return (\n                <p key={item.itemId}>\n                  {item.itemName} - {item.itemSize} - ₹{item.itemPrice}\n                </p>\n              );\n            })}\n          </td>\n          <td>₹{order.totalPrice}</td>\n          <td style={{ textTransform: \"capitalize\" }}>{order.status}</td>\n        </tr>\n      );\n    });\n  }\n\n  return (\n    <>\n      <table className=\"table table-bordered table-hover center\">\n        <thead>\n          <tr>\n            <th>Order Id</th>\n            <th>User</th>\n            <th>Address</th>\n            <th>Items Purchased</th>\n            <th>Amount</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>{ui}</tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Tables;\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nexport const ExportToExcel = ({ apiData, fileName }) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData, fileName) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      className=\"btn btn-primary\"\n      onClick={(e) => exportToCSV(apiData, fileName)}\n    >\n      Export for {fileName}\n    </button>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { getMonthOrders, getOrders, getYearOrders } from \"../../api/OrderDB\";\nimport LineChart from \"../../ui/Charts/LineChart\";\nimport PieChart from \"../../ui/Charts/PieChart\";\nimport Tables from \"../../ui/Tables/Tables\";\nimport AuthContext from \"../../context/auth-context\";\nimport { ExportToExcel } from \"../../helpers/ExportToExcel\";\n\nconst Orders = () => {\n  const authCtx = useContext(AuthContext);\n  const [filter, setFilter] = useState({\n    type: \"\",\n    value: \"\",\n    itemType: \"food\",\n  });\n  const [orders, setOrders] = useState(null);\n  const [stat, setStat] = useState(null);\n  const [showTable, setShowTable] = useState(false);\n\n  useEffect(() => {\n    if (authCtx.user !== null) {\n      let date = new Date();\n      setFilter({\n        type: \"day\",\n        value: date.toISOString().split(\"T\")[0],\n      });\n      let day = date.getDate();\n      if (day < 10) {\n        day = \"0\" + day;\n      }\n      let month = date.getMonth() + 1;\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n      let year = date.getFullYear();\n      date = day + \".\" + month + \".\" + year;\n      // document.getElementById(\"date\").valueAsDate = date;\n      getOrders(date, \"food\", authCtx.user.location, (orders, stat) => {\n        setShowTable(true);\n        setOrders(orders);\n        setStat(stat);\n      });\n    }\n  }, [authCtx.user]);\n\n  const onChangeHandler = (e) => {\n    // console.log(\"value\", e.target.value);\n    if (e.target.name === \"filter\") {\n      setFilter((prevState) => {\n        return {\n          ...prevState,\n          type: e.target.value,\n        };\n      });\n    } else if (e.target.name === \"itemType\") {\n      setFilter((prevState) => {\n        return {\n          ...prevState,\n          itemType: e.target.value,\n        };\n      });\n    } else {\n      setFilter((prevState) => {\n        return {\n          ...prevState,\n          value: e.target.value,\n        };\n      });\n    }\n  };\n\n  const onCheckHandler = () => {\n    console.log(\"check\", filter);\n    let type = filter.itemType;\n    let location = authCtx.user.location;\n    let emptyData = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    if (filter.type === \"month\") {\n      getMonthOrders(type, location, filter, (orders, stat) => {\n        // console.log(\"orders-stat-month\", orders, stat);\n        setShowTable(false);\n        setOrders(orders);\n        setStat(stat);\n      });\n    } else if (filter.type === \"year\") {\n      getYearOrders(type, location, filter, (orders, stat) => {\n        // console.log(\"orders-stat-year\", orders, stat);\n        setShowTable(false);\n        setOrders(orders);\n        if (stat === undefined) {\n          setStat(emptyData);\n        } else {\n          setStat(stat);\n        }\n      });\n    } else if (filter.type === \"day\") {\n      let date = filter.value.split(\"-\");\n      let year = date[0];\n      let month = date[1];\n      let day = date[2];\n      date = day + \".\" + month + \".\" + year;\n      // console.log(date);\n      // console.log(\"date\", date);\n      getOrders(date, type, authCtx.user.location, (orders, stat) => {\n        setShowTable(true);\n        setOrders(orders);\n        setStat(stat);\n      });\n    }\n  };\n\n  // const generateExcel = () => {};\n\n  let ui = null;\n  if (filter.type === \"year\") {\n    ui = (\n      <input\n        type=\"number\"\n        min=\"2018\"\n        max=\"\"\n        id=\"year\"\n        name=\"year\"\n        onChange={onChangeHandler}\n        value={filter.value}\n        autoComplete=\"off\"\n      />\n    );\n  } else if (filter.type === \"month\") {\n    ui = (\n      <input\n        type=\"month\"\n        id=\"month\"\n        name=\"month\"\n        onChange={onChangeHandler}\n        value={filter.value}\n      />\n    );\n  } else {\n    ui = (\n      <input\n        type=\"date\"\n        id=\"date\"\n        name=\"date\"\n        onChange={onChangeHandler}\n        value={filter.value}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className=\"row stats\">\n        <div className=\"col-6 line\">\n          {stat !== null && (\n            <LineChart labelName=\"test\" filter={filter} stat={stat} />\n          )}\n        </div>\n        <div className=\"col-4 pie\">\n          {stat !== null && <PieChart filter={filter} stat={stat} />}\n        </div>\n        <div className=\"col-2 calender\">\n          <div className=\"dropdown\">\n            <select\n              name=\"itemType\"\n              onChange={onChangeHandler}\n              value={filter.itemType}\n            >\n              <option value=\"food\">Food</option>\n              <option value=\"grocery\">Grocery</option>\n            </select>\n          </div>\n          <form>\n            <input\n              type=\"radio\"\n              name=\"filter\"\n              id=\"day\"\n              value=\"day\"\n              checked={filter.type === \"day\" ? true : false}\n              onChange={onChangeHandler}\n            />\n            <label htmlFor=\"day\">Day</label>\n            <br />\n            <input\n              type=\"radio\"\n              name=\"filter\"\n              id=\"month\"\n              value=\"month\"\n              checked={filter.type === \"month\" ? true : false}\n              onChange={onChangeHandler}\n            />\n            <label htmlFor=\"month\">Month</label>\n            <br />\n            <input\n              type=\"radio\"\n              name=\"filter\"\n              id=\"year\"\n              value=\"year\"\n              checked={filter.type === \"year\" ? true : false}\n              onChange={onChangeHandler}\n            />\n            <label htmlFor=\"year\">Year</label>\n            <br />\n            {ui}\n            <br />\n            <br />\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={onCheckHandler}\n            >\n              Check\n            </button>\n            {/* <button type=\"button\" className=\"btn btn-primary\">\n              Clear\n            </button> */}\n          </form>\n        </div>\n        <div className=\"col-12 export\">\n          {showTable ? (\n            orders !== null && (\n              <>\n                {orders.length === 0 || orders === \"empty\" ? (\n                  <h1>No Orders To Export</h1>\n                ) : (\n                  <div className=\"export-\">\n                    <ExportToExcel apiData={orders} fileName={filter.value} />\n                    <Tables orders={orders} />\n                  </div>\n                )}\n                {/* <ExportToExcel apiData={orders} fileName={filter.value} /> */}\n              </>\n            )\n          ) : (\n            <div>\n              {/* <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                onClick={generateExcel}\n              >\n                Generate Excel : {filter.value}\n              </button> */}\n              {orders !== null &&\n              (orders.length === 0 || orders === \"empty\") ? (\n                <h1>No Orders To Export</h1>\n              ) : (\n                <ExportToExcel apiData={orders} fileName={filter.value} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Orders;\n\n// useEffect(() => {\n// $(\"#yearPicker\").datetimepicker({\n//   format: \"YYYY\",\n//   viewMode: \"years\"\n// });\n// $(\".date-picker-year\").datepicker({\n//   changeYear: true,\n//   showButtonPanel: true,\n//   dateFormat: \"yy\",\n//   onClose: function (dateText, inst) {\n//     var year = $(\"#ui-datepicker-div .ui-datepicker-year :selected\").val();\n//     $(this).datepicker(\"setDate\", new Date(year, 1));\n//   }\n// });\n// $(\".date-picker-year\").focus(function () {\n//   $(\".ui-datepicker-month\").hide();\n// });\n// }, []);\n","import React, { useEffect, useState } from \"react\";\nimport \"./card.css\";\n\nconst Card = (props) => {\n  useEffect(() => {\n    let item = props.item;\n    let branch = item.branch[props.location];\n    console.log(\"item\", item, branch, props.location);\n  }, []);\n  let ui = null;\n  // console.log(\n  //   \"item-undefined\",\n  //   props.item[props.location][\"price\"][\"currentPrice\"]\n  // );\n  if (props.item.branch[props.location][\"current_price\"] !== undefined) {\n    ui = props.item.branch[props.location][\"current_price\"];\n  }\n\n  return (\n    <>\n      <div class=\"col-lg-3 col-md-4 col-sm-3\">\n        <div class=\"card\">\n          <div class=\"overlay\">{props.item.Type}</div>\n          <img src={props.item.image} alt={props.item.Name} />\n          <div class=\"card-body\">\n            <h3 class=\"card-title\">\n              {props.item.Name}\n              {/* {props.item.Name}<span>({props.item.Name})</span> */}\n            </h3>\n            <div\n              class=\"edit-option\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => props.updateItem(props.item)}\n            >\n              <i class=\"fa fa-pencil-square-o\"></i>\n            </div>\n            {/* <div\n              class=\"trash-option\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => props.deleteItem(props.item)}\n            >\n              <i class=\"fa fa-trash\"></i>\n            </div> */}\n            <p>Desc: {props.item.description}</p>\n            <p>\n              Style:&ensp;\n              <b style={{ fontSize: \"18px\", textTransform: \"uppercase\" }}>\n                {props.item.style}\n              </b>\n            </p>\n            <p class=\"time\" style={{ textTransform: \"capitalize\" }}>\n              {/* {props.item.category} */}\n              {props.item.Type}\n            </p>\n            {/* <p class=\"time\">Dinner</p> */}\n            <div class=\"row quantity\">\n              {/* <p class=\"quantity\">Qty Per Unit:&ensp;</p>\n              <b>{props.item[props.location][\"quantityPerUnit\"]}</b>&ensp;&emsp; */}\n              <p class=\"quantity\">Min Unit:&ensp;</p>\n              <b>{props.item.branch[props.location][\"unit\"]}</b>\n            </div>\n            {/* <form></form> */}\n\n            <hr />\n            {/* <p class=\"food-rating\">\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\n            </p> */}\n\n            <p class=\"price \">\n              <i class=\" fa fa-inr\" aria-hidden=\"true\"></i>\n              {/* {props.item[props.location][\"price\"][\"currentPrice\"] === -1\n                ? props.item[props.location][\"price\"][\"cquarterPrice\"] !== -1\n                : props.item[props.location][\"price\"][\"currentPrice\"]} */}\n              {ui}\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"../../reusable/Card/Card\";\n\nconst Food = () => {\n  return (\n    <section>\n      <div className=\"row fooditem\">\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/supermarket.png\"\n              alt=\"addnew\"\n            />\n            <p className=\"title\">Add New Item</p>\n            <Link\n              to=\"/home/grocery/addnewitem\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/rice1.png\" alt=\"addnew\" />\n            <p className=\"title\">Rice</p>\n            <Link to=\"/home/grocery/rice\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/harvest.png\" alt=\"addnew\" />\n            <p className=\"title\">Fruits/Vegetables</p>\n            <Link\n              to=\"/home/grocery/fruitsvegs\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        {/* <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/cannedfood.png\"\n              alt=\"addnew\"\n            />\n            <p className=\"title\">Canned goods</p>\n            <Link\n              to=\"/home/grocery/cannedgoods\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div> */}\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/personalcare.png\"\n              alt=\"addnew\"\n            />\n            <p className=\"title\">Soap's</p>\n            <Link to=\"/home/grocery/soaps\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/softdrink.png\"\n              alt=\"addnew\"\n            />\n            <p className=\"title\">\n              SummerDrinks/\n              <br />\n              Beverages\n            </p>\n            <Link\n              to=\"/home/grocery/summer-drinks-beverages\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/personalcare.png\"\n              alt=\"addnew\"\n            />\n            <p className=\"title\">Pharmacy</p>\n            <Link to=\"/home/grocery/pharmacy\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/rice1.png\" alt=\"addnew\" />\n            <p className=\"title\">Organics</p>\n            <Link to=\"/home/grocery/organics\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        {/* <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/basket.png\"\n              alt=\"breakfast\"\n            />\n            <p className=\"title\">Cleaners</p>\n            <Link to=\"/home/grocery/cleaners\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/grocerycart.png\"\n              alt=\"lunch\"\n            />\n            <p className=\"title\">Others</p>\n            <Link to=\"/home/grocery/others\" className=\"stretched-link\"></Link>\n          </div>\n        </div> */}\n      </div>\n    </section>\n  );\n};\n\nexport default Food;\n","const PreviewCard = (props) => {\n  return (\n    <div className=\"card\">\n      <div className=\"overlay\">\n        {props.item.foodType === \"\" ? null : props.item.foodType}\n      </div>\n      <div className=\"preview\">preview</div>\n      <img\n        className={props.item.img.url !== \"\" ? \"\" : \"card-img\"}\n        id=\"cardImg\"\n        src={\n          props.item.img.url === \"\" ? \"/images/tray.png\" : props.item.img.url\n        }\n        alt=\"item name\"\n      />\n      {/* <img\n        className=\"card-img\"\n        id=\"cardImg\"\n        src=\"/images/tray.png\"\n        alt=\"item name\"\n      /> */}\n      <div className=\"card-body\">\n        <p className=\"item-name\">\n          {props.item.name === \"\" ? \"Item Name\" : props.item.name}&nbsp;\n          <span>\n            ({props.item.altName === \"\" ? \"alternative\" : props.item.altName})\n          </span>\n        </p>\n        <p className=\"item-desc\">\n          &ensp;\n          {props.item.desc === \"\"\n            ? \"Contains a small description of the item\"\n            : props.item.desc}\n        </p>\n        <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\n          {props.item.category === \"\" ? null : props.item.category}\n        </p>\n        {/* <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\n          {props.item.foodType === \"\" ? null : props.item.foodType}\n        </p> */}\n        <p className=\"item-style\">\n          Style:&nbsp;\n          <b style={{ textTransform: \"uppercase\" }}>\n            {props.item.style === \"\" ? \"\" : props.item.style}\n          </b>\n        </p>\n        <p className=\"item-quantity\">\n          Quantity:&nbsp;\n          <b>{props.item.minimumUnit}</b>\n        </p>\n      </div>\n      <div className=\"card-footer\">\n        {/* <p className=\"ratings\">\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n        </p> */}\n        <p className=\"price\">\n          <i className=\"fas fa-rupee\"></i>&nbsp;\n          {props.price === \"normalPrice\"\n            ? props.item.currentPrice\n            : props.item.cfullPrice}\n        </p>\n        <p>\n          Discount Percentage:{\" \"}\n          {props.price === \"normalPrice\"\n            ? 100 -\n              (props.item.currentPrice / props.item.actualPrice) * 100 +\n              \"%\"\n            : 100 - (props.item.cfullPrice / props.item.fullPrice) * 100 + \"%\"}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PreviewCard;\n","import React from \"react\";\nimport PreviewCard from \"./PreviewCard\";\n\nconst AddNewForm = (props) => {\n  let ui = null;\n  if (props.price !== null) {\n    if (props.price === \"quantityPrice\") {\n      ui = (\n        <div className=\"col-12 optional\">\n          <p>\n            Pick the Quantity\n            {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\n          </p>\n          <div className=\"single-row\">\n            <input\n              type=\"checkbox\"\n              id=\"quarter\"\n              name=\"quantity\"\n              value=\"quarter\"\n              onChange={props.onChangeHandler}\n            />\n            <label htmlFor=\"quarter\" className=\"label\">\n              Quarter\n            </label>\n            <label htmlFor=\"quarterPrice\" className=\"price\">\n              Actual Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"quarterPrice\"\n              name=\"quarterPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.quarterPrice}\n            />\n            <label htmlFor=\"cquaterPrice\" className=\"price\">\n              Current Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"cquarterPrice\"\n              name=\"cquarterPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.cquarterPrice}\n            />\n          </div>\n          <div className=\"single-row\">\n            <input\n              type=\"checkbox\"\n              id=\"half\"\n              name=\"quantity\"\n              value=\"half\"\n              onChange={props.onChangeHandler}\n            />\n            <label htmlFor=\"half\" className=\"label\">\n              Half\n            </label>\n            <label htmlFor=\"halfPrice\" className=\"price\">\n              Actual Price\n            </label>\n\n            <input\n              type=\"number\"\n              id=\"halfPrice\"\n              name=\"halfPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.halfPrice}\n            />\n            <label htmlFor=\"chalfPrice\" className=\"price\">\n              Current Price\n            </label>\n\n            <input\n              type=\"number\"\n              id=\"chalfPrice\"\n              name=\"chalfPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.chalfPrice}\n            />\n          </div>\n\n          <div className=\"single-row\">\n            <input\n              type=\"checkbox\"\n              id=\"full\"\n              name=\"quantity\"\n              value=\"full\"\n              onChange={props.onChangeHandler}\n            />\n            <label htmlFor=\"full\" className=\"label\">\n              Full\n            </label>\n            <label htmlFor=\"fullPrice\" className=\"price\">\n              Actual Price\n            </label>\n\n            <input\n              type=\"number\"\n              id=\"fullPrice\"\n              name=\"fullPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.fullPrice}\n            />\n            <label htmlFor=\"cfullPrice\" className=\"price\">\n              Current Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"cfullPrice\"\n              name=\"cfullPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.cfullPrice}\n            />\n          </div>\n        </div>\n      );\n    } else if (props.price === \"normalPrice\") {\n      ui = (\n        <div className=\"col-12 price\">\n          {/* <p>Actual Price</p>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            type=\"number\"\n            id=\"actualPrice\"\n            name=\"actualPrice\"\n            style={{ marginRight: \"15px\" }}\n            min=\"0\"\n            onChange={props.onChangeHandler}\n            value={props.item.actualPrice}\n          /> */}\n          <p>Current Price</p>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            type=\"number\"\n            id=\"currentPrice\"\n            name=\"currentPrice\"\n            min=\"0\"\n            onChange={props.onChangeHandler}\n            value={props.item.currentPrice}\n          />\n        </div>\n      );\n    }\n  }\n\n  return (\n    <form onSubmit={props.draftHandler}>\n      <div className=\"row\">\n        <div className=\"col-md-8\">\n          <div className=\"card-data\">\n            <div className=\"row\">\n              <div className=\"col-sm-5\">\n                <div className=\"inner-row\">\n                  <label htmlFor=\"name\">Enter Product Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.name}\n                    required\n                    autoComplete=\"off\"\n                  />\n                </div>\n\n                <div className=\"inner-row\">\n                  <label htmlFor=\"productId\">Enter Product Id</label>\n                  <input\n                    type=\"text\"\n                    id=\"productId\"\n                    name=\"productId\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.productId}\n                    required\n                    autoComplete=\"off\"\n                  />\n                </div>\n\n                <div className=\"inner-row\">\n                  <label htmlFor=\"desc\">Description</label>\n                  <textarea\n                    id=\"desc\"\n                    name=\"desc\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.desc}\n                    required\n                    autoComplete=\"off\"\n                  ></textarea>\n                </div>\n\n                <div className=\"inner-row\">\n                  <label htmlFor=\"img\">Upload the image</label>\n                  <input\n                    type=\"file\"\n                    id=\"img\"\n                    name=\"img\"\n                    onChange={props.onChangeHandler}\n                    required\n                  />\n                  <small>\n                    The preview of the image can be seen in the card\n                  </small>\n                </div>\n              </div>\n              <div className=\"col-sm-7\">\n                <div className=\"row\">\n                  <div className=\"col-md-4 check\">\n                    <p>Pick Category</p>\n                    <div className=\"single\">\n                      <input\n                        type=\"radio\"\n                        id=\"BreakFast\"\n                        value=\"BreakFast\"\n                        name=\"category\"\n                        onClick={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"BreakFast\">BreakFast</label>\n                    </div>\n                    <div className=\"single\">\n                      <input\n                        type=\"radio\"\n                        id=\"Lunch\"\n                        value=\"Lunch\"\n                        name=\"category\"\n                        onClick={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"Lunch\">Lunch</label>\n                    </div>\n                    <div className=\"single\">\n                      <input\n                        type=\"radio\"\n                        id=\"Dinner\"\n                        value=\"Dinner\"\n                        name=\"category\"\n                        onClick={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"dinner\">Dinner</label>\n                    </div>\n                  </div>\n                  {/* <div className=\"col-md-4 veg\">\n                    <p>Food Type</p>\n                    <input\n                      type=\"radio\"\n                      id=\"nonveg\"\n                      name=\"foodType\"\n                      value=\"non-veg\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"nonveg\">Non-Veg</label>\n\n                    <input\n                      type=\"radio\"\n                      id=\"veg\"\n                      name=\"foodType\"\n                      value=\"veg\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"veg\">Veg</label>\n                  </div> */}\n                  {/* <div className=\"col-md-4 style\">\n                    <p>Pick Style</p>\n                    <input\n                      type=\"radio\"\n                      id=\"southindian\"\n                      name=\"style\"\n                      value=\"southindian\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"southindian\">South Indian</label>\n\n                    <input\n                      type=\"radio\"\n                      id=\"chinese\"\n                      name=\"style\"\n                      value=\"chinese\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"chinese\">Chinese</label>\n                  </div> */}\n                  <div className=\"col-md-7\">\n                    <div className=\"unit\">\n                      <label htmlFor=\"actualUnit\">\n                        Total Unit:\n                        <br />\n                        {/* <small>(Optional)</small> */}\n                      </label>\n                      <input\n                        type=\"number\"\n                        id=\"actualUnit\"\n                        name=\"actualUnit\"\n                        min=\"1\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.actualUnit}\n                      />\n                    </div>\n                    {/* <div className=\"quantity\">\n                      <label htmlFor=\"unit\">Enter Minimum Unit:</label>\n                      <input\n                        type=\"number\"\n                        id=\"unit\"\n                        name=\"minimumUnit\"\n                        min=\"0\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.minimumUnit}\n                        required\n                      />\n                    </div>\n                    <div className=\"unit\">\n                      <label htmlFor=\"quantity\">\n                        Quantity Per Unit:\n                        <br />\n                      </label>\n                      <input\n                        type=\"number\"\n                        id=\"quantity\"\n                        name=\"quantityPerUnit\"\n                        min=\"1\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.quantityPerUnit}\n                        required\n                      />\n                    </div> */}\n                  </div>\n                  <div className=\"col-md-5 others\">\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"dealOfTheDay\"\n                        name=\"dealOfTheDay\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"dealOfTheDay\">Deal of the day</label>\n                    </div>\n                    {/* <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"onSale\"\n                        name=\"onSale\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"onSale\">On Sale</label>\n                    </div> */}\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"isProductAvailable\"\n                        name=\"isProductAvailable\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"isProductAvailable\">\n                        Product Available\n                      </label>\n                    </div>\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"bestSeller\"\n                        name=\"bestSeller\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"bestSeller\">Best Seller</label>\n                      {/* <label htmlFor=\"top\">Top Product</label> */}\n                    </div>\n                  </div>\n                  <div className=\"col-4\">\n                    <input\n                      type=\"radio\"\n                      id=\"normalPrice\"\n                      name=\"price\"\n                      value=\"normalPrice\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\n                  </div>\n                  {/* <div className=\"col-6\">\n                    <input\n                      type=\"radio\"\n                      id=\"quantityPrice\"\n                      name=\"price\"\n                      value=\"quantityPrice\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"quantityPrice\">\n                      &nbsp;Quantity Based Price\n                    </label>\n                  </div> */}\n                  {ui}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <PreviewCard item={props.item} price={props.price} />\n          <div className=\"button\">\n            <button type=\"submit\" className=\"submit-btn\">\n              Save\n            </button>\n            <button type=\"button\" className=\"submit-btn\">\n              Cancel\n            </button>\n            <button\n              type=\"reset\"\n              className=\"submit-btn\"\n              onClick={props.clearHandler}\n              // onClick={this.form.reset()}\n            >\n              Clear\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddNewForm;\n","import React from \"react\";\n// import { propTypes } from \"react-bootstrap/esm/Image\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst DeleteConfirmModal = (props) => {\n  return (\n    <Modal show={props.showModal} onHide={props.handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{props.body}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={props.handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default DeleteConfirmModal;\n","import React, { useState, useContext } from \"react\";\nimport AddNewForm from \"./AddNewForm\";\nimport $ from \"jquery\";\nimport { addItem } from \"../../../api/ItemDB\";\nimport AlertModal from \"../../../reusable/Modals/AlertModal\";\nimport AuthContext from \"../../../context/auth-context\";\nconst AddNew = (props) => {\n  const authCtx = useContext(AuthContext);\n  const [item, setItem] = useState({\n    id: \"\",\n    productId: \"\", // we generate it\n    name: \"\",\n    img: {\n      file: null,\n      url: \"\",\n    },\n    altName: \"\",\n    desc: \"\",\n    category: \"\", // breakfase, lunch, dinner\n    style: \"\", // southindian, northindian\n    foodType: \"\", // nonveg, veg\n    offer: 0, // actual price - offer price = current price\n    bestSeller: false,\n    currencyCode: 356, // 356 - INR\n    dealOfTheDay: false,\n    onSale: false,\n    minimumUnit: 0,\n    actualUnit: 0,\n    quantityPerUnit: 1,\n    isProductAvailable: false,\n    quaterPrice: 0,\n    halfPrice: 0,\n    fullPrice: 0,\n    cquaterPrice: 0,\n    chalfPrice: 0,\n    cfullPrice: 0,\n    actualPrice: 0,\n    currentPrice: 0, // doubt\n    // categories: [\"dhosa\"]\n    // foodAvailable: [\n    //   {\n    //     branch: \"vellore\",\n    //     minimumUnit: 0,\n    //     quantityPerUnit: 0,\n    //     isProductAvailable: false\n    //   }\n    // ],\n  });\n  const [price, setPrice] = useState(null);\n  const [alert, setAlert] = useState(null);\n\n  const onChangeHandler = (event) => {\n    console.log(\"event.name\", event.target.name, event.target.value);\n\n    // setChecked((prevState) => !prevState);\n\n    let value = event.target.value;\n    let ename = event.target.name;\n\n    if (ename === \"img\") {\n      value = event.target.files[0];\n      // console.log(\"url\", URL.createObjectURL(value));\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          img: {\n            file: value,\n            url: URL.createObjectURL(value),\n          },\n        };\n      });\n    } else if (\n      ename === \"dealOfTheDay\" ||\n      ename === \"onSale\" ||\n      ename === \"isProductAvailable\" ||\n      ename === \"bestSeller\"\n    ) {\n      setItem((prevState) => {\n        value = !prevState[event.target.name];\n        // console.log(event.target.name, value);\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    } else if (ename === \"price\") {\n      setPrice(value);\n    } else {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    }\n  };\n\n  const clearHandler = () => {\n    document.getElementById(\"img\").value = \"\";\n    $(\":checkbox\").prop(\"checked\", false);\n    $('input[name=\"category\"]').prop(\"checked\", false);\n    $('input[name=\"foodType\"]').prop(\"checked\", false);\n    $('input[name=\"style\"]').prop(\"checked\", false);\n    $('input[name=\"price\"]').prop(\"checked\", false);\n    setPrice(null);\n    setItem({\n      id: \"\",\n      productId: \"\", // we generate it\n      name: \"\",\n      img: {\n        file: null,\n        url: \"\",\n      },\n      altName: \"\",\n      desc: \"\",\n      category: \"\", // breakfase, lunch, dinner\n      style: \"\", // southindian, northindian\n      foodType: \"\", // nonveg, veg\n      offer: 0, // actual price - offer price = current price\n      bestSeller: false,\n      currencyCode: 356, // 356 - INR\n      dealOfTheDay: false,\n      onSale: false,\n      minimumUnit: 0,\n      actualUnit: 0,\n      quantityPerUnit: 1,\n      isProductAvailable: false,\n      quaterPrice: 0,\n      halfPrice: 0,\n      fullPrice: 0,\n      cquaterPrice: 0,\n      chalfPrice: 0,\n      cfullPrice: 0,\n      actualPrice: 0,\n      currentPrice: 0, // doubt\n      // categories: [\"dhosa\"]\n      // foodAvailable: [\n      //   {\n      //     branch: \"vellore\",\n      //     minimumUnit: 0,\n      //     quantityPerUnit: 0,\n      //     isProductAvailable: false\n      //   }\n      // ],\n    });\n  };\n\n  const draftHandler = (e) => {\n    e.preventDefault();\n    console.log(\"item\", item, price);\n    if (item.category === \"\") {\n      setAlert({\n        title: \"Missing Mandatory Fields\",\n        body: \"Select Category!!!\",\n        status: true,\n      });\n    }\n    // else if (item.foodType === \"\") {\n    //   setAlert({\n    //     title: \"Missing Mandatory Fields\",\n    //     body: \"Select FoodType!!!\",\n    //     status: true\n    //   });\n    // } else if (item.style === \"\") {\n    //   setAlert({\n    //     title: \"Missing Mandatory Fields\",\n    //     body: \"Select Style!!!\",\n    //     status: true\n    //   });\n    // }\n    else if (price === null) {\n      setAlert({\n        title: \"Missing Mandatory Fields\",\n        body: \"select normal price or quantity to proceed!!!\",\n        status: true,\n      });\n    } else {\n      addItem(item, price, props.type, authCtx, (isAdded) => {\n        if (isAdded) {\n          // db added\n          window.alert(\"Successfully Added!!!\");\n          clearHandler();\n        } else {\n          // error not adding\n          window.alert(\"Not Added... Try Again!!!\");\n        }\n      });\n    }\n  };\n\n  return (\n    <div class=\"add-new\">\n      {alert !== null && alert.status === true && (\n        <AlertModal\n          title={alert.title}\n          body={alert.body}\n          showModal={alert.status}\n          handleClose={() => setAlert(null)}\n        />\n      )}\n      <h2>Add one or more items</h2>\n      <div class=\"add-form\">\n        <AddNewForm\n          item={item}\n          onChangeHandler={onChangeHandler}\n          draftHandler={draftHandler}\n          clearHandler={clearHandler}\n          price={price}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AddNew;\n","const PreviewCard = (props) => {\n  return (\n    <div className=\"card\">\n      {/* <div className=\"overlay\">v</div> */}\n      <div className=\"overlay\">\n        {props.item.foodType === \"\" ? null : props.item.foodType}\n      </div>\n      <div className=\"preview\">preview</div>\n      <img\n        className={\n          props.item.img !== undefined && props.item.img.url !== \"\"\n            ? \"\"\n            : \"card-img\"\n        }\n        id=\"cardImg\"\n        src={\n          props.item.img !== undefined && props.item.img.url === \"\"\n            ? \"/images/tray.png\"\n            : props.item.img.url\n        }\n        alt=\"item name\"\n      />\n      {/* <img\n        className=\"card-img\"\n        id=\"cardImg\"\n        src=\"/images/tray.png\"\n        alt=\"item name\"\n      /> */}\n      <div className=\"card-body\">\n        <p className=\"item-name\">\n          {props.item.name === \"\" ? \"Item Name\" : props.item.name}&nbsp;\n          <span>\n            ({props.item.altName === \"\" ? \"alternative\" : props.item.altName})\n          </span>\n        </p>\n        <p className=\"item-desc\">\n          &ensp;\n          {props.item.desc === \"\"\n            ? \"Contains a small description of the item\"\n            : props.item.desc}\n        </p>\n        <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\n          {props.item.category === \"\" ? null : props.item.category}\n        </p>\n        {/* <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\n          {props.item.foodType === \"\" ? null : props.item.foodType}\n        </p> */}\n        {/* <p className=\"item-style\">\n          Style:&nbsp;\n          <b style={{ textTransform: \"uppercase\" }}>\n            {props.item.style === \"\" ? \"\" : props.item.style}\n          </b>\n        </p> */}\n        <p className=\"item-quantity\">\n          Quantity:&nbsp;\n          <b>{props.item.minimumUnit}</b>\n        </p>\n      </div>\n      <div className=\"card-footer\">\n        {/* <p className=\"ratings\">\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n        </p> */}\n        <p className=\"price\">\n          <i className=\"fas fa-rupee\"></i>&nbsp;\n          {props.price === \"normalPrice\"\n            ? props.item.currentPrice\n            : props.item.cfullPrice}\n        </p>\n        <p>\n          Discount Percentage:{\" \"}\n          {props.price === \"normalPrice\"\n            ? 100 -\n              (props.item.currentPrice / props.item.actualPrice) * 100 +\n              \"%\"\n            : 100 - (props.item.cfullPrice / props.item.fullPrice) * 100 + \"%\"}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PreviewCard;\n","import React, { useState } from \"react\";\nimport PreviewCard from \"./PreviewCard\";\n\nconst AddNewForm = (props) => {\n  // const [priceItem, setPriceItem] = useState([\n  //   {\n  //     id: 0,\n  //     quantity: 0,\n  //     units: \"\",\n  //     actualPrice: 0,\n  //     currentPrice: 0\n  //   }\n  // ]);\n\n  const addMoreQuantity = () => {\n    let prevState = props.item.priceItem;\n    let lastdata = prevState[prevState.length - 1];\n    let newId = lastdata.id + 1;\n    let data = {\n      id: newId,\n      quantity: 0,\n      units: \"\",\n      actualPrice: 0,\n      currentPrice: 0,\n    };\n    prevState = [...prevState, data];\n    // console.log(\"prevState\", prevState);\n    props.priceItemChangeHandler(prevState);\n  };\n\n  const reduceQuantity = () => {\n    let prevState = props.item.priceItem;\n    if (prevState.length > 1) {\n      prevState.pop();\n    }\n    // let lastdata = prevState[prevState.length - 1];\n    // let newId = lastdata.id + 1;\n    // let data = {\n    //   id: newId,\n    //   quantity: 0,\n    //   units: \"\",\n    //   actualPrice: 0,\n    //   currentPrice: 0\n    // };\n    prevState = [...prevState];\n    props.priceItemChangeHandler(prevState);\n  };\n\n  const onChangeHandler = (e, id) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    let list = [...props.item.priceItem];\n    let index = list.findIndex((item) => {\n      return item.id === id;\n    });\n    let data = \"\";\n    if (name === \"units\") {\n      data = {\n        ...list[index],\n        [name]: value,\n      };\n    } else {\n      data = {\n        ...list[index],\n        [name]: parseFloat(value),\n      };\n    }\n    list[index] = data;\n    // console.log(\"updated List\", list);\n    // props.setPriceItem(list);\n    props.priceItemChangeHandler(list);\n  };\n\n  let ui = null;\n  if (props.price !== null) {\n    if (props.price === \"quantityPrice\") {\n      ui = (\n        <div className=\"col-12 optional\">\n          <p>\n            Pick the Quantity\n            {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\n          </p>\n          {props.item.priceItem.map((price) => {\n            return (\n              <div key={price.id} className=\"single-row\">\n                <div className=\"pic\">\n                  <input\n                    className=\"pics\"\n                    type=\"number\"\n                    id=\"quantity\"\n                    name=\"quantity\"\n                    min=\"0\"\n                    max=\"1000\"\n                    value={price.quantity}\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                  />\n\n                  <select\n                    className=\"amo\"\n                    name=\"units\"\n                    id=\"units\"\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                    value={price.units}\n                  >\n                    <option value=\"\">--Select--</option>\n                    <option value=\"grams\">grams</option>\n                    <option value=\"kilograms\">kilograms</option>\n                    <option value=\"millilitres\">millilitres</option>\n                    <option value=\"litres\">litres</option>\n                  </select>\n                </div>\n                <div>\n                  <label htmlFor=\"actualPrice\" className=\"price\">\n                    Actual Price&nbsp;\n                  </label>\n                  <i className=\"fas fa-rupee\"></i>\n                  <input\n                    type=\"number\"\n                    id=\"actualPrice\"\n                    name=\"actualPrice\"\n                    min=\"0\"\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                    value={price.actualPrice}\n                  />\n                  <label htmlFor=\"currentPrice\" className=\"price\">\n                    Current Price&nbsp;\n                  </label>\n                  <i className=\"fas fa-rupee\"></i>\n                  <input\n                    type=\"number\"\n                    id=\"currentPrice\"\n                    name=\"currentPrice\"\n                    min=\"0\"\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                    value={price.currentPrice}\n                  />\n                </div>\n              </div>\n            );\n          })}\n\n          <button type=\"button\" onClick={addMoreQuantity}>\n            <i class=\"fas fa-plus-circle\"></i>\n          </button>\n          <button type=\"button\" onClick={reduceQuantity}>\n            <i class=\"fas fa-minus-circle\"></i>\n          </button>\n          {/* <div className=\"single-row\">\n            <input\n              type=\"checkbox\"\n              id=\"half\"\n              name=\"quantity\"\n              value=\"half\"\n              onChange={props.onChangeHandler}\n            />\n            <label htmlFor=\"half\" className=\"label\">\n              Half\n            </label>\n            <label htmlFor=\"halfPrice\" className=\"price\">\n              Actual Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"halfPrice\"\n              name=\"halfPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.halfPrice}\n            />\n            <label htmlFor=\"chalfPrice\" className=\"price\">\n              Current Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"chalfPrice\"\n              name=\"chalfPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.chalfPrice}\n            />\n          </div>\n\n          <div className=\"single-row\">\n            <input\n              type=\"checkbox\"\n              id=\"full\"\n              name=\"quantity\"\n              value=\"full\"\n              onChange={props.onChangeHandler}\n            />\n            <label htmlFor=\"full\" className=\"label\">\n              Full\n            </label>\n            <label htmlFor=\"fullPrice\" className=\"price\">\n              Actual Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"fullPrice\"\n              name=\"fullPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.fullPrice}\n            />\n            <label htmlFor=\"cfullPrice\" className=\"price\">\n              Current Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"cfullPrice\"\n              name=\"cfullPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.cfullPrice}\n            />\n          </div> */}\n        </div>\n      );\n    } else if (props.price === \"normalPrice\") {\n      ui = (\n        <div className=\"col-12 price\">\n          {/* <p>Actual Price</p>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            type=\"number\"\n            id=\"actualPrice\"\n            name=\"actualPrice\"\n            style={{ marginRight: \"15px\" }}\n            min=\"0\"\n            onChange={props.onChangeHandler}\n            value={props.item.priceItem.actualPrice}\n          /> */}\n          <p>Current Price</p>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            type=\"number\"\n            id=\"currentPrice\"\n            name=\"currentPrice\"\n            min=\"0\"\n            onChange={props.onChangeHandler}\n            value={props.item.currentPrice}\n          />\n        </div>\n      );\n    }\n  }\n\n  return (\n    <form onSubmit={props.draftHandler}>\n      <div className=\"row\">\n        <div className=\"col-md-8\">\n          <div className=\"card-data\">\n            <div className=\"row\">\n              <div className=\"col-sm-5\">\n                <div className=\"inner-row\">\n                  <label htmlFor=\"name\">Enter Product Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.name}\n                    required\n                    autoComplete=\"off\"\n                  />\n                </div>\n\n                {/* <div className=\"inner-row\">\n                  <label htmlFor=\"altName\">\n                    Enter Brand Name<small>&nbsp;(optional)</small>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"altName\"\n                    name=\"altName\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.altName}\n                    required\n                    autoComplete=\"off\"\n                  />\n                </div> */}\n                <div className=\"inner-row\">\n                  <label htmlFor=\"altName\">Enter Product Id</label>\n                  <input\n                    type=\"text\"\n                    id=\"productId\"\n                    name=\"productId\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.productId}\n                    required\n                    autoComplete=\"off\"\n                  />\n                </div>\n\n                <div className=\"inner-row\">\n                  <label htmlFor=\"desc\">Description</label>\n                  <textarea\n                    id=\"desc\"\n                    name=\"desc\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.desc}\n                    required\n                    autoComplete=\"off\"\n                  ></textarea>\n                </div>\n\n                <div className=\"inner-row\">\n                  <label htmlFor=\"img\">Upload the image</label>\n                  <input\n                    type=\"file\"\n                    id=\"img\"\n                    name=\"img\"\n                    onChange={props.onChangeHandler}\n                    required\n                  />\n                  <small>\n                    The preview of the image can be seen in the card\n                  </small>\n                </div>\n              </div>\n              <div className=\"col-sm-7\">\n                <div className=\"row\">\n                  <div className=\"col-md-8 check\">\n                    <p>Pick Category</p>\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"Fruits_Vegetables\"\n                            value=\"Fruits_Vegetables\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"Fruits_Vegetables\">\n                            Fruits_Vegetables\n                          </label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"Rice\"\n                            value=\"Rice\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"Rice\">Rice</label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"Summer_Drinks_Beverages\"\n                            value=\"Summer_Drinks_Beverages\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"Summer_Drinks_Beverages\">\n                            Summer_Drinks_Beverages\n                          </label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"soaps\"\n                            value=\"soaps\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"soaps\">Soaps</label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"Pharmacy\"\n                            value=\"Pharmacy\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"Pharmacy\">Pharmacy</label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"Organics\"\n                            value=\"Organics\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"Organics\">Organics</label>\n                        </div>\n                      </div>\n                      {/* <div className=\"col-md-6\">\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"personalCare\"\n                            value=\"personalCare\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"personalCare\">Personal Care</label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"cleaners\"\n                            value=\"cleaners\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"cleaners\">Cleaners</label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"others\"\n                            value=\"others\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"others\">Others</label>\n                        </div>\n                      </div> */}\n                    </div>\n                  </div>\n                  {/* <div className=\"col-md-4 veg\">\n                    <p>Food Type</p>\n                    <input\n                      type=\"radio\"\n                      id=\"nonveg\"\n                      name=\"foodType\"\n                      value=\"non-veg\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"nonveg\">Non-Veg</label>\n\n                    <input\n                      type=\"radio\"\n                      id=\"veg\"\n                      name=\"foodType\"\n                      value=\"veg\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"veg\">Veg</label>\n                  </div> */}\n                  <div className=\"col-md-7\">\n                    <div className=\"unit\">\n                      <label htmlFor=\"actualUnit\">Total Unit:</label>\n                      <input\n                        type=\"number\"\n                        id=\"actualUnit\"\n                        name=\"actualUnit\"\n                        min=\"0\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.actualUnit}\n                        required\n                      />\n                    </div>\n                    {/* <div className=\"quantity\">\n                      <label htmlFor=\"unit\">Enter Minimum Unit:</label>\n                      <input\n                        type=\"number\"\n                        id=\"unit\"\n                        name=\"minimumUnit\"\n                        min=\"0\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.minimumUnit}\n                        required\n                      />\n                    </div>\n                    <div className=\"unit\">\n                      <label htmlFor=\"quantity\">\n                        Quantity Per Unit:\n                        <br />\n                        <small>(Optional)</small>\n                      </label>\n                      <input\n                        type=\"number\"\n                        id=\"quantity\"\n                        name=\"quantityPerUnit\"\n                        min=\"1\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.quantityPerUnit}\n                      />\n                    </div> */}\n                  </div>\n                  <div className=\"col-md-5 others\">\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"dealOfTheDay\"\n                        name=\"dealOfTheDay\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"dealOfTheDay\">Deal of the day</label>\n                    </div>\n                    {/* <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"onSale\"\n                        name=\"onSale\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"onSale\">On Sale</label>\n                    </div> */}\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"isProductAvailable\"\n                        name=\"isProductAvailable\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"isProductAvailable\">\n                        Product Available\n                      </label>\n                    </div>\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"bestSeller\"\n                        name=\"bestSeller\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"bestSeller\">Best Seller</label>\n                      {/* <label htmlFor=\"top\">Top Product</label> */}\n                    </div>\n                  </div>\n                  <div className=\"col-4\">\n                    <input\n                      type=\"radio\"\n                      id=\"normalPrice\"\n                      name=\"price\"\n                      value=\"normalPrice\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\n                  </div>\n                  {/* <div className=\"col-6\">\n                    <input\n                      type=\"radio\"\n                      id=\"quantityPrice\"\n                      name=\"price\"\n                      value=\"quantityPrice\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"quantityPrice\">\n                      &nbsp;Quantity Based Price\n                    </label>\n                  </div> */}\n                  {/* <div className=\"col-12 price\">\n                    <p>Actual Price</p>\n                    <i className=\"fas fa-rupee\"></i>\n                    <input\n                      type=\"number\"\n                      id=\"actualPrice\"\n                      name=\"actualPrice\"\n                      style={{ marginRight: \"15px\" }}\n                      min=\"0\"\n                      onChange={props.onChangeHandler}\n                      value={props.item.actualPrice}\n                    />\n                    <p>Current Price</p>\n                    <i className=\"fas fa-rupee\"></i>\n                    <input\n                      type=\"number\"\n                      id=\"currentPrice\"\n                      name=\"currentPrice\"\n                      min=\"0\"\n                      onChange={props.onChangeHandler}\n                      value={props.item.currentPrice}\n                    />\n                  </div> */}\n                  {ui}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <PreviewCard item={props.item} price={props.price} />\n          <div className=\"button\">\n            <button type=\"submit\" className=\"submit-btn\">\n              Save\n            </button>\n            <button type=\"button\" className=\"submit-btn\">\n              Cancel\n            </button>\n            <button\n              type=\"reset\"\n              className=\"submit-btn\"\n              onClick={props.clearHandler}\n              // onClick={this.form.reset()}\n            >\n              Clear\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddNewForm;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport AddNewForm from \"./AddNewForm\";\nimport $ from \"jquery\";\nimport { addItem } from \"../../../api/ItemDB\";\nimport AlertModal from \"../../../reusable/Modals/AlertModal\";\nimport AuthContext from \"../../../context/auth-context\";\n\nconst AddNewItem = (props) => {\n  const authCtx = useContext(AuthContext);\n  const [item, setItem] = useState({\n    id: \"\",\n    productId: \"\", // we generate it\n    name: \"\",\n    img: {\n      file: null,\n      url: \"\",\n    },\n    // altName: \"\", // brand name\n    desc: \"\",\n    category: \"\", // breakfase, lunch, dinner\n    // style: \"\",\n    foodType: \"\", // nonveg, veg\n    offer: 0, // actual price - offer price = current price\n    bestSeller: false,\n    currencyCode: 356, // 356 - INR\n    dealOfTheDay: false,\n    onSale: false,\n    minimumUnit: 0,\n    actualUnit: 0,\n    quantityPerUnit: 1,\n    isProductAvailable: false,\n    priceItem: [\n      {\n        id: 0,\n        quantity: 0,\n        units: \"\",\n        actualPrice: 0,\n        currentPrice: 0,\n      },\n    ],\n    actualPrice: 0,\n    currentPrice: 0, // doubt\n    // categories: [\"dhosa\"]\n    // foodAvailable: [\n    //   {\n    //     branch: \"vellore\",\n    //     minimumUnit: 0,\n    //     quantityPerUnit: 0,\n    //     isProductAvailable: false\n    //   }\n    // ],\n  });\n  const [price, setPrice] = useState(null);\n  const [alert, setAlert] = useState(null);\n  // const [priceChoice, setPriceChoice] = useState();\n  // useEffect(() => {\n  //   if (price === \"normalPrice\") {\n  //     // console.log(\"normalpyy\");\n\n  //     setItem((prevState) => {\n  //       return {\n  //         ...prevState,\n  //         priceItem: {\n  //           actualPrice: 0,\n  //           currentPrice: 0\n  //         }\n  //       };\n  //     });\n  //   } else {\n  //     // console.log(\"dvgfdihbkvdjk\");\n\n  //     setItem((prevState) => {\n  //       return {\n  //         ...prevState,\n  //         priceItem: [\n  //           {\n  //             id: 0,\n  //             quantity: 0,\n  //             units: \"\",\n  //             actualPrice: 0,\n  //             currentPrice: 0\n  //           }\n  //         ]\n  //       };\n  //     });\n  //   }\n  // }, [price]);\n\n  const onChangeHandler = (event) => {\n    console.log(\"event.name\", event.target.name, event.target.value);\n\n    // setChecked((prevState) => !prevState);\n\n    let value = event.target.value;\n    let ename = event.target.name;\n\n    if (ename === \"img\") {\n      value = event.target.files[0];\n      // console.log(\"url\", URL.createObjectURL(value));\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          img: {\n            file: value,\n            url: URL.createObjectURL(value),\n          },\n        };\n      });\n    } else if (\n      ename === \"dealOfTheDay\" ||\n      ename === \"onSale\" ||\n      ename === \"isProductAvailable\" ||\n      ename === \"bestSeller\"\n    ) {\n      setItem((prevState) => {\n        value = !prevState[event.target.name];\n        // console.log(event.target.name, value);\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    } else if (ename === \"price\") {\n      setPrice(value);\n      if (value === \"normalPrice\") {\n        setItem((prevState) => {\n          return {\n            ...prevState,\n            priceItem: {\n              actualPrice: 0,\n              currentPrice: 0,\n            },\n          };\n        });\n      } else {\n        setItem((prevState) => {\n          return {\n            ...prevState,\n            priceItem: [\n              {\n                id: 0,\n                quantity: 0,\n                units: \"\",\n                actualPrice: 0,\n                currentPrice: 0,\n              },\n            ],\n          };\n        });\n      }\n    } else if (ename === \"actualPrice\") {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          priceItem: {\n            ...prevState.priceItem,\n            actualPrice: value,\n          },\n        };\n      });\n    } else if (ename === \"currentPrice\") {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          // priceItem: {\n          //   ...prevState.priceItem,\n          //   currentPrice: value,\n          // },\n          [event.target.name]: value,\n        };\n      });\n    } else {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    }\n  };\n\n  const clearHandler = () => {\n    document.getElementById(\"img\").value = \"\";\n    $(\":checkbox\").prop(\"checked\", false);\n    $('input[name=\"category\"]').prop(\"checked\", false);\n    $('input[name=\"foodType\"]').prop(\"checked\", false);\n    $('input[name=\"style\"]').prop(\"checked\", false);\n    $('input[name=\"price\"]').prop(\"checked\", false);\n    setPrice(null);\n    setItem({\n      id: \"\",\n      productId: \"\", // we generate it\n      name: \"\",\n      img: {\n        file: null,\n        url: \"\",\n      },\n      // altName: \"\", // brand name\n      desc: \"\",\n      category: \"\", // breakfase, lunch, dinner\n      // style: \"\",\n      foodType: \"\", // nonveg, veg\n      offer: 0, // actual price - offer price = current price\n      bestSeller: false,\n      currencyCode: 356, // 356 - INR\n      dealOfTheDay: false,\n      onSale: false,\n      minimumUnit: 0,\n      actualUnit: 0,\n      quantityPerUnit: 1,\n      isProductAvailable: false,\n      priceItem: [\n        {\n          id: 0,\n          quantity: 0,\n          units: \"\",\n          actualPrice: 0,\n          currentPrice: 0,\n        },\n      ],\n      actualPrice: 0,\n      currentPrice: 0, // doubt\n      // categories: [\"dhosa\"]\n      // foodAvailable: [\n      //   {\n      //     branch: \"vellore\",\n      //     minimumUnit: 0,\n      //     quantityPerUnit: 0,\n      //     isProductAvailable: false\n      //   }\n      // ],\n    });\n  };\n\n  const draftHandler = (e) => {\n    console.log(\"drafthandler\");\n    e.preventDefault();\n    console.log(\"item\", item, price);\n    if (item.category === \"\") {\n      setAlert({\n        title: \"Missing Mandatory Fields\",\n        body: \"Select Category!!!\",\n        status: true,\n      });\n    }\n    // else if (item.foodType === \"\") {\n    //   setAlert({\n    //     title: \"Missing Mandatory Fields\",\n    //     body: \"Select FoodType!!!\",\n    //     status: true,\n    //   });\n    // }\n    // else if (item.style === \"\") {\n    //   setAlert({\n    //     title: \"Missing Mandatory Fields\",\n    //     body: \"Select Style!!!\",\n    //     status: true,\n    //   });\n    // }\n    else if (price === null) {\n      setAlert({\n        title: \"Missing Mandatory Fields\",\n        body: \"select normal price!!!\",\n        // body: \"select normal price or quantity to proceed!!!\",\n        status: true,\n      });\n    } else {\n      let isAddItem = true;\n\n      let pricee = item;  \n      if (pricee.length === undefined || pricee.length === null) {\n        // priceItem is map\n        // if (pricee.actualPrice === 0 || pricee.currentPrice === 0) {\n        if (pricee.currentPrice === 0) {\n          setAlert({\n            title: \"Missing Mandatory Fields\",\n            body: \"Value should be greater than 0!!!\",\n            status: true,\n          });\n          isAddItem = false;\n        }\n      } else {\n        // priceItem is array\n        for (let i = 0; i < pricee.length; i++) {\n          if (pricee[i].units === \"\") {\n            setAlert({\n              title: \"Missing Mandatory Fields\",\n              body: \"select units for all quantity like kilogram, liters etc!!!\",\n              status: true,\n            });\n            isAddItem = false;\n            break;\n          } else if (\n            // pricee[i].quantity <= 0 ||\n            // pricee[i].actualPrice <= 0 ||\n            pricee[i].currentPrice <= 0\n          ) {\n            setAlert({\n              title: \"Missing Mandatory Fields\",\n              body: \"Price should not be 0!!!\",\n              // body: \"Quantity or Price should not be 0!!!\",\n              status: true,\n            });\n            isAddItem = false;\n            break;\n          }\n        }\n      }\n      console.log(\"isaddItem\", isAddItem, props.type, authCtx);\n      if (isAddItem) {\n        addItem(item, price, props.type, authCtx, (isAdded) => {\n          if (isAdded) {\n            // db added\n            window.alert(\"Successfully Added!!!\");\n            clearHandler();\n          } else {\n            // error not adding\n            window.alert(\"Not Added... Try Again!!!\");\n          }\n        });\n      }\n      // console.log(\"new Data\", item);\n    }\n  };\n\n  return (\n    <div class=\"add-new\">\n      {alert !== null && alert.status === true && (\n        <AlertModal\n          title={alert.title}\n          body={alert.body}\n          showModal={alert.status}\n          handleClose={() => setAlert(null)}\n        />\n      )}\n      <h2>Add one or more items</h2>\n      <div class=\"add-form\">\n        <AddNewForm\n          item={item}\n          onChangeHandler={onChangeHandler}\n          priceItemChangeHandler={(list) =>\n            setItem((prevState) => {\n              // console.log(\"list\", list);\n              return {\n                ...prevState,\n                priceItem: list,\n              };\n            })\n          }\n          draftHandler={draftHandler}\n          clearHandler={clearHandler}\n          price={price}\n        />\n        ;\n      </div>\n    </div>\n  );\n};\n\nexport default AddNewItem;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./EditModal.module.css\";\nimport \"./EditModal.css\";\nimport Card from \"../Card/Card\";\nimport Backdrop from \"../Backdrop\";\nimport $ from \"jquery\";\n\nconst ModalOverlay = (props) => {\n  const [item, setItem] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [quantity, setQuantity] = useState({\n    quarter: false,\n    half: false,\n    full: false,\n  });\n  // const [imgView, setImgView] = useState(false);\n\n  useEffect(() => {\n    let item = props.item;\n    if (item !== null) {\n      console.log(\"item\", item);\n      setItem(item);\n      setPrice(\"normalPrice\");\n      // if (\n      //   item.branch[props.location][\"current_price\"] === -1\n      //   // &&\n      //   // item.branch[props.location][\"actualPrice\"] === -1\n      // ) {\n      //   let data = {\n      //     quarter: false,\n      //     half: false,\n      //     full: false\n      //   };\n      //   // if (\n      //   //   item.branch[props.location][\"quarterPrice\"] > 0 &&\n      //   //   item.branch[props.location][\"cquarterPrice\"] > 0\n      //   // ) {\n      //   //   data.quarter = true;\n      //   // }\n      //   // if (\n      //   //   item.branch[props.location][\"halfPrice\"] > 0 &&\n      //   //   item.branch[props.location][\"chalfPrice\"] > 0\n      //   // ) {\n      //   //   data.half = true;\n      //   // }\n      //   // if (\n      //   //   item.branch[props.location][\"fullPrice\"] > 0 &&\n      //   //   item.branch[props.location][\"cfullPrice\"] > 0\n      //   // ) {\n      //   //   data.full = true;\n      //   // }\n      //   // setPrice(\"quantityPrice\");\n      //   setQuantity(data);\n      // } else {\n      //   setPrice(\"normalPrice\");\n      // }\n    }\n  }, [props.item, props.location]);\n\n  const onChangeHandler = (event) => {\n    // console.log(\"event.name\", event.target.name, event.target.value, item);\n    // setChecked((prevState) => !prevState);\n    let value = event.target.value;\n    let ename = event.target.name;\n    // console.log(\"ename\", ename, value);\n\n    if (ename === \"img\") {\n      value = event.target.files[0];\n      // console.log(\"url\", URL.createObjectURL(value));\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [ename]: value,\n        };\n      });\n    } else if (\n      ename === \"dealoftheday\" ||\n      ename === \"onsale\" ||\n      ename === \"Bestseller\" ||\n      ename === \"isproductavailable\"\n    ) {\n      if (ename === \"isproductavailable\") {\n        setItem((prevState) => {\n          value = !prevState[event.target.name];\n          return {\n            ...prevState,\n            [ename]: value,\n          };\n        });\n      } else {\n        setItem((prevState) => {\n          value = !prevState.branch[props.location][event.target.name];\n          // console.log(event.target.name, value);\n          let data = {\n            ...prevState,\n          };\n          data.branch[props.location] = {\n            ...prevState.branch[props.location],\n            [event.target.name]: value,\n          };\n          return data;\n        });\n      }\n    } else if (ename === \"price\") {\n      setPrice(value);\n    } else if (ename === \"actualPrice\") {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [props.location]: {\n            ...prevState[props.location],\n            price: {\n              ...prevState[props.location][\"price\"],\n              actualPrice: value,\n            },\n          },\n        };\n      });\n    } else if (ename === \"current_price\") {\n      setItem((prevState) => {\n        let data = {\n          ...prevState,\n        };\n        data.branch[props.location] = {\n          ...prevState.branch[props.location],\n          [event.target.name]: value,\n        };\n        return data;\n      });\n    } else if (ename === \"quantity\") {\n      console.log(\"quantity\", value);\n      if (value === \"quarter\") {\n        setQuantity((prevState) => {\n          return {\n            ...prevState,\n            quarter: !prevState.quarter,\n          };\n        });\n      } else if (value === \"half\") {\n        setQuantity((prevState) => {\n          return {\n            ...prevState,\n            half: !prevState.half,\n          };\n        });\n      } else if (value === \"full\") {\n        setQuantity((prevState) => {\n          return {\n            ...prevState,\n            full: !prevState.full,\n          };\n        });\n      }\n    } else if (ename === \"quarterPrice\" || ename === \"cquarterPrice\") {\n      let data = {\n        ...item[props.location][\"price\"],\n        quarterPrice: value,\n      };\n      if (ename === \"cquarterPrice\") {\n        data = {\n          ...item[props.location][\"price\"],\n          cquarterPrice: value,\n        };\n      }\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [props.location]: {\n            ...prevState[props.location],\n            price: data,\n          },\n        };\n      });\n    } else if (ename === \"halfPrice\" || ename === \"chalfPrice\") {\n      let data = {\n        ...item[props.location][\"price\"],\n        halfPrice: value,\n      };\n      if (ename === \"chalfPrice\") {\n        data = {\n          ...item[props.location][\"price\"],\n          chalfPrice: value,\n        };\n      }\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [props.location]: {\n            ...prevState[props.location],\n            price: data,\n          },\n        };\n      });\n    } else if (ename === \"fullPrice\" || ename === \"cfullPrice\") {\n      let data = {\n        ...item[props.location][\"price\"],\n        fullPrice: value,\n      };\n      if (ename === \"cfullPrice\") {\n        data = {\n          ...item[props.location][\"price\"],\n          cfullPrice: value,\n        };\n      }\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [props.location]: {\n            ...prevState[props.location],\n            price: data,\n          },\n        };\n      });\n    } else if (\n      ename === \"unit\" ||\n      ename === \"quantityPerUnit\" ||\n      ename === \"minimumUnit\"\n    ) {\n      setItem((prevState) => {\n        let data = {\n          ...prevState,\n        };\n        data.branch[props.location] = {\n          ...prevState.branch[props.location],\n          [event.target.name]: value,\n        };\n        return data;\n        // return {\n        //   ...prevState,\n        //   [props.location]: {\n        //     ...prevState[props.location],\n        //     [ename]: value,\n        //   },\n        // };\n      });\n    } else {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    }\n  };\n\n  const getFile1 = () => {\n    $(\"#uploadButton1\").on(\"click\", function () {\n      $(\"#img\").click();\n    });\n\n    $(\"#img\").change(function () {\n      var file = this.files[0];\n      console.log(file);\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        $(\"#uploadButton1\").css(\n          \"background-image\",\n          'url(\"' + reader.result + '\")'\n        );\n      };\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n      }\n    });\n  };\n\n  const submitHandler = () => {\n    // console.log(\"UpdatedItem\", item);\n    // when mandatory fields are applied then proceed\n    if (price === \"quantityPrice\") {\n      if (\n        quantity.quarter === false &&\n        quantity.half === false &&\n        quantity.full === false\n      ) {\n        alert(\"Pick Quantity or Choose Normal Price!!!\");\n      } else {\n        // let count = 0;\n        // let trueCount = 0;\n        let isUpdate = true;\n        if (quantity.quarter === true) {\n          // trueCount++;\n          if (\n            item[props.location][\"price\"][\"quarterPrice\"] <= 0 &&\n            item[props.location][\"price\"][\"cquarterPrice\"] <= 0\n          ) {\n            alert(\"Update Prices, If Quarter Quantity is Picked!!!\");\n            // props.updateItem(item, price, quantity);\n            isUpdate = false;\n            // count--;\n          } else {\n            // count++;\n          }\n        }\n        if (quantity.half === true) {\n          // trueCount++;\n          if (\n            item[props.location][\"price\"][\"halfPrice\"] <= 0 &&\n            item[props.location][\"price\"][\"chalfPrice\"] <= 0\n          ) {\n            alert(\"Update Prices, If Half Quantity is Picked!!!\");\n            // props.updateItem(item, price, quantity);\n            isUpdate = false;\n            // count--;\n          } else {\n            // count++;\n          }\n        }\n        if (quantity.full === true) {\n          // trueCount++;\n          if (\n            item[props.location][\"price\"][\"fullPrice\"] <= 0 &&\n            item[props.location][\"price\"][\"cfullPrice\"] <= 0\n          ) {\n            alert(\"Update Prices, If Full Quantity is Picked!!!\");\n            // props.updateItem(item, price, quantity);\n            isUpdate = false;\n            // count--;\n          } else {\n            // count++;\n          }\n        }\n        if (isUpdate) {\n          props.updateItem(item, price, quantity);\n          // console.log(\"isUpdate-if\", isUpdate);\n        }\n        // else {\n        //   console.log(\"isUpdate-else\", isUpdate);\n        // }\n      }\n    } else {\n      if (\n        // item[props.location][\"price\"][\"actualPrice\"] > 0 &&\n        item.branch[props.location][\"current_price\"] > 0\n      ) {\n        props.updateItem(item, price, quantity, \"Food\");\n      } else {\n        alert(\"Update Actual/Current Prices!!!\");\n      }\n    }\n  };\n\n  let ui = null;\n  if (price !== null) {\n    // if (price === \"quantityPrice\") {\n    //   ui = (\n    //     <div className=\"col-12\">\n    //       <p>\n    //         Pick the Quantity\n    //         {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\n    //       </p>\n    //       <div className={styles.singlerow}>\n    //         <input\n    //           type=\"checkbox\"\n    //           id=\"quarter\"\n    //           name=\"quantity\"\n    //           value=\"quarter\"\n    //           onChange={onChangeHandler}\n    //           checked={quantity.quarter}\n    //         />\n    //         <label htmlFor=\"quarter\" className=\"label\">\n    //           Quarter\n    //         </label>\n    //         <label htmlFor=\"quaterPrice\" className={styles.price}>\n    //           Actual Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           className={styles.singlenum}\n    //           id=\"quarterPrice\"\n    //           name=\"quarterPrice\"\n    //           min=\"0\"\n    //           value={item[props.location][\"price\"][\"quarterPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //         <label htmlFor=\"cquaterPrice\" className={styles.price}>\n    //           Current Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           id=\"cquarterPrice\"\n    //           name=\"cquarterPrice\"\n    //           min=\"0\"\n    //           className={styles.singlenum}\n    //           value={item[props.location][\"price\"][\"cquarterPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //       </div>\n    //       <div className={styles.singlerow}>\n    //         <input\n    //           type=\"checkbox\"\n    //           id=\"half\"\n    //           name=\"quantity\"\n    //           value=\"half\"\n    //           checked={quantity.half}\n    //           onChange={onChangeHandler}\n    //         />\n    //         <label htmlFor=\"half\" className=\"label\">\n    //           Half\n    //         </label>\n    //         <label htmlFor=\"halfPrice\" className={styles.price}>\n    //           Actual Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           id=\"halfPrice\"\n    //           className={styles.singlenum}\n    //           name=\"halfPrice\"\n    //           min=\"0\"\n    //           value={item[props.location][\"price\"][\"halfPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //         <label htmlFor=\"chalfPrice\" className={styles.price}>\n    //           Current Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           id=\"chalfPrice\"\n    //           name=\"chalfPrice\"\n    //           min=\"0\"\n    //           className={styles.singlenum}\n    //           value={item[props.location][\"price\"][\"chalfPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //       </div>\n\n    //       <div className={styles.singlerow}>\n    //         <input\n    //           type=\"checkbox\"\n    //           id=\"full\"\n    //           name=\"quantity\"\n    //           value=\"full\"\n    //           checked={quantity.full}\n    //           onChange={onChangeHandler}\n    //         />\n    //         <label htmlFor=\"full\" className=\"label\">\n    //           Full\n    //         </label>\n    //         <label htmlFor=\"fullPrice\" className={styles.price}>\n    //           Actual Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           id=\"fullPrice\"\n    //           name=\"fullPrice\"\n    //           min=\"0\"\n    //           className={styles.singlenum}\n    //           value={item[props.location][\"price\"][\"fullPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //         <label htmlFor=\"cfullPrice\" className={styles.price}>\n    //           Current Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           id=\"cfullPrice\"\n    //           name=\"cfullPrice\"\n    //           min=\"0\"\n    //           className={styles.singlenum}\n    //           value={item[props.location][\"price\"][\"cfullPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //       </div>\n    //     </div>\n    //   );\n    // } else if (price === \"normalPrice\") {\n    // }\n    if (price === \"normalPrice\") {\n      ui = (\n        <div className=\"col-12 price\">\n          {/* <label htmlFor=\"actualPrice\" className={styles.price}>\n            Actual Price&ensp;\n          </label>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            min=\"0\"\n            type=\"number\"\n            id=\"actualPrice\"\n            name=\"actualPrice\"\n            style={{ marginRight: \"15px\" }}\n            className={styles.singlenum}\n            value={\n              item[props.location][\"price\"][\"actualPrice\"] > -1 &&\n              item[props.location][\"price\"][\"actualPrice\"]\n            }\n            onChange={onChangeHandler}\n          /> */}\n          <label htmlFor=\"currentPrice\" className={styles.price}>\n            Current Price&ensp;\n          </label>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            min=\"0\"\n            type=\"number\"\n            id=\"currentPrice\"\n            className={styles.singlenum}\n            name=\"current_price\"\n            value={\n              item.branch[props.location][\"current_price\"] > -1 &&\n              item.branch[props.location][\"current_price\"]\n            }\n            onChange={onChangeHandler}\n          />\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div class={styles.modal}>\n      {item !== null && (\n        <Card>\n          <div class={styles.row}>\n            <div class={styles.left}>\n              <div class=\"upload-img\">\n                <input\n                  type=\"file\"\n                  id=\"img\"\n                  name=\"img\"\n                  accept=\".gif, .jpg, .png\"\n                  onChange={onChangeHandler}\n                />\n                <label\n                  onClick={() => {\n                    getFile1();\n                    // setImgView(true);\n                  }}\n                  htmlFor=\"img\"\n                  id=\"uploadButton1\"\n                  style={{\n                    backgroundImage: `url('${item.img}')`,\n                  }}\n                >\n                  <span>+</span>\n                </label>\n              </div>\n              <div\n                class=\"row\"\n                style={{ justifyContent: \"end\", paddingTop: \"15px\" }}\n              >\n                <button\n                  type=\"button\"\n                  class={styles.btn}\n                  style={{ marginRight: \"10px\" }}\n                  onClick={submitHandler}\n                >\n                  Save\n                </button>\n                <button\n                  type=\"button\"\n                  class={styles.btn}\n                  onClick={props.onClose}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n            <div class={styles.right}>\n              <div class=\"row\">\n                <div\n                  class={styles.col}\n                  style={{ width: \"30%\", paddingRight: \"10px\" }}\n                >\n                  <label htmlFor=\"name\">Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"Name\"\n                    name=\"Name\"\n                    class={styles.input}\n                    alt=\"productname\"\n                    value={item.Name}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n                <div class={styles.col} style={{ width: \"70%\" }}>\n                  <label htmlFor=\"desc\">Description</label>\n                  <input\n                    type=\"text\"\n                    id=\"description\"\n                    name=\"description\"\n                    class={styles.input}\n                    alt=\"productdescrb\"\n                    value={item.description}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n              </div>\n              <div\n                class=\"row\"\n                style={{ justifyContent: \"space-between\", padding: \"15px 0\" }}\n              >\n                {/* <select\n                  class={styles.select}\n                  name=\"style\"\n                  id=\"style\"\n                  onChange={onChangeHandler}\n                  value={item.style}\n                >\n                  <option\n                    value=\"southindian\"\n                    // selected={item.style === \"southindian\" ? true : false}\n                  >\n                    SouthIndian\n                  </option>\n                  <option\n                    value=\"chinese\"\n                    // selected={item.style === \"chinese\" ? true : false}\n                  >\n                    Chinese\n                  </option>\n                </select> */}\n                {/* <select class={styles.select} name=\"category\" id=\"category\">\n                <option value=\"breakfast\">Breakfast</option>\n                <option value=\"lunch\">Lunch</option>\n                <option value=\"dinner\">Dinner</option>\n              </select> */}\n                <select\n                  class={styles.select}\n                  name=\"Type\"\n                  id=\"Type\"\n                  onChange={onChangeHandler}\n                  value={item.Type}\n                >\n                  {/* <option\n                    value=\"veg\"\n                    // selected={item.Type === \"veg\" ? true : false}\n                  >\n                    Veg\n                  </option>\n                  <option\n                    value=\"nonveg\"\n                    // selected={item.Type === \"non-veg\" ? true : false}\n                  >\n                    Non-Veg\n                  </option> */}\n                  <option value=\"BreakFast\">BreakFast</option>\n                  <option value=\"Lunch\">Lunch</option>\n                  <option value=\"Dinner\">Dinner</option>\n                </select>\n              </div>\n              <div class=\"row\" style={{ justifyContent: \"space-between\" }}>\n                <div class={styles.col} style={{ width: \"48%\" }}>\n                  <div\n                    class=\"row\"\n                    style={{\n                      justifyContent: \"space-between\",\n                      padding: \"5px 0\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <label htmlFor=\"actualUnit\">Actual Unit:</label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"unit\"\n                      name=\"unit\"\n                      min=\"0\"\n                      onChange={onChangeHandler}\n                      value={item.branch[props.location][\"unit\"]}\n                    />\n\n                    {/* <label htmlFor=\"quantityPerUnit\" style={{ margin: \"0\" }}>\n                      Quantity Per Unit\n                    </label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"quantityPerUnit\"\n                      name=\"quantityPerUnit\"\n                      min=\"1\"\n                      value={item[props.location][\"quantityPerUnit\"]}\n                      onChange={onChangeHandler}\n                    /> */}\n                  </div>\n                  {/* <div\n                    class=\"row\"\n                    style={{\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <label htmlFor=\"unit\" style={{ margin: \"0\" }}>\n                      Minimal Unit\n                    </label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"minimumUnit\"\n                      name=\"minimumUnit\"\n                      min=\"0\"\n                      value={item[props.location][\"minimumUnit\"]}\n                      onChange={onChangeHandler}\n                    />\n                  </div> */}\n                </div>\n                <div class={styles.col} style={{ width: \"48%\" }}>\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dealoftheday\"\n                      name=\"dealoftheday\"\n                      className={styles.check}\n                      checked={item.branch[props.location][\"dealoftheday\"]}\n                      onChange={onChangeHandler}\n                    />\n                    <label htmlFor=\"dealoftheday\" className={styles.label}>\n                      Deal of the day\n                    </label>\n                  </div>\n                  {/* <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"onSale\"\n                      name=\"onSale\"\n                      className={styles.check}\n                      // checked={item.dealoftheday}\n                    />\n                    <label htmlFor=\"onSale\" className={styles.label}>\n                      On Sale\n                    </label>\n                  </div> */}\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"isproductavailable\"\n                      name=\"isproductavailable\"\n                      className={styles.check}\n                      checked={item.isproductavailable}\n                      // checked={item[props.location][\"isproductavailable\"]}\n                      onChange={onChangeHandler}\n                    />\n                    <label\n                      htmlFor=\"isproductavailable\"\n                      className={styles.label}\n                    >\n                      Product Available\n                    </label>\n                  </div>\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"Bestseller\"\n                      name=\"Bestseller\"\n                      className={styles.check}\n                      checked={item.branch[props.location][\"Bestseller\"]}\n                      onChange={onChangeHandler}\n                    />\n                    <label htmlFor=\"Bestseller\" className={styles.label}>\n                      Best Seller\n                    </label>\n                    {/* <label htmlFor=\"top\">Top Product</label> */}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row pricecol\">\n                <div className=\"col-4\">\n                  <input\n                    type=\"radio\"\n                    id=\"normalPrice\"\n                    name=\"price\"\n                    value=\"normalPrice\"\n                    checked={price !== null && price === \"normalPrice\"}\n                    onChange={onChangeHandler}\n                  />\n                  <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\n                </div>\n                {/* <div className=\"col-6\">\n                  <input\n                    type=\"radio\"\n                    id=\"quantityPrice\"\n                    name=\"price\"\n                    value=\"quantityPrice\"\n                    checked={price !== null && price === \"quantityPrice\"}\n                    onChange={onChangeHandler}\n                  />\n                  <label htmlFor=\"quantityPrice\">\n                    &nbsp;Quantity Based Price\n                  </label>\n                </div> */}\n                {ui}\n              </div>\n            </div>\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nconst EditModal = (props) => {\n  // console.log(\"edit\", props.item);\n  return (\n    <>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.closeModal} />,\n        document.getElementById(\"backdrop-root\")\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay\n          onClose={props.closeModal}\n          // title={props.title}\n          updateItem={props.updateItem}\n          item={props.item}\n          location={props.location}\n        />,\n        document.getElementById(\"overlay-root\")\n      )}\n    </>\n  );\n};\n\nexport default EditModal;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./EditModal.module.css\";\nimport \"./EditModal.css\";\nimport Card from \"../Card/Card\";\nimport Backdrop from \"../Backdrop\";\nimport $ from \"jquery\";\n\nconst ModalOverlay = (props) => {\n  const [item, setItem] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [quantity, setQuantity] = useState([]);\n  // const [imgView, setImgView] = useState(false);\n\n  useEffect(() => {\n    let item = props.item;\n    if (item !== null) {\n      console.log(\"item\", item);\n      setItem(item);\n      setPrice(\"normalPrice\");\n      // if (item.branch[props.location][\"current_price\"] === undefined) {\n      //   setPrice(\"quantityPrice\");\n      //   setQuantity(item[props.location][\"price\"]);\n      // } else {\n      //   setPrice(\"normalPrice\");\n      // }\n    }\n  }, [props.item, props.location]);\n\n  const onChangeHandler = (event, id) => {\n    // console.log(\"event.name\", event.target.name, event.target.value, item);\n    // setChecked((prevState) => !prevState);\n    let value = event.target.value;\n    let ename = event.target.name;\n    // console.log(\"ename\", ename, value);\n\n    if (ename === \"img\") {\n      value = event.target.files[0];\n      // console.log(\"url\", URL.createObjectURL(value));\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [ename]: value,\n        };\n      });\n    } else if (\n      ename === \"dealoftheday\" ||\n      ename === \"onsale\" ||\n      ename === \"isproductavailable\" ||\n      ename === \"Bestseller\"\n    ) {\n      if (ename === \"isproductavailable\") {\n        setItem((prevState) => {\n          value = !prevState[event.target.name];\n          return {\n            ...prevState,\n            [ename]: value,\n          };\n        });\n      } else {\n        setItem((prevState) => {\n          value = !prevState.branch[props.location][event.target.name];\n          // console.log(event.target.name, value);\n          let data = {\n            ...prevState,\n          };\n          data.branch[props.location] = {\n            ...prevState.branch[props.location],\n            [event.target.name]: value,\n          };\n          return data;\n        });\n      }\n    } else if (ename === \"price\") {\n      setPrice(value);\n    } else if (ename === \"actualPrice\") {\n      if (price === \"normalPrice\") {\n        // console.log(\"actualPrice-normal\", value);\n        setItem((prevState) => {\n          return {\n            ...prevState,\n            [props.location]: {\n              ...prevState[props.location],\n              price: {\n                ...prevState[props.location][\"price\"],\n                actualPrice: parseFloat(value),\n              },\n            },\n          };\n        });\n      } else {\n        setQuantity((prevState) => {\n          // console.log(\"actualPrice-quan\", prevState);\n          let list = [...prevState];\n          let index = list.findIndex((item) => {\n            return item.id === id;\n          });\n          let data = {\n            ...list[index],\n            [ename]: parseFloat(value),\n          };\n          list[index] = data;\n          return [...list];\n        });\n      }\n    } else if (ename === \"current_price\") {\n      if (price === \"normalPrice\") {\n        // console.log(\"currPrice-normal\", value);\n        setItem((prevState) => {\n          let data = {\n            ...prevState,\n          };\n          data.branch[props.location] = {\n            ...prevState.branch[props.location],\n            [ename]: value,\n          };\n          return data;\n        });\n      } else {\n        // console.log(\"currPrice-quant\", value);\n        setQuantity((prevState) => {\n          let list = [...prevState];\n          let index = list.findIndex((item) => {\n            return item.id === id;\n          });\n          let data = {\n            ...list[index],\n            [ename]: parseFloat(value),\n          };\n          list[index] = data;\n          return [...list];\n        });\n      }\n    } else if (ename === \"quantity\") {\n      // console.log(\"quantity\", value);\n      setQuantity((prevState) => {\n        let list = [...prevState];\n        let index = list.findIndex((item) => {\n          return item.id === id;\n        });\n        let data = \"\";\n        data = {\n          ...list[index],\n          [ename]: parseFloat(value),\n        };\n        list[index] = data;\n        return [...list];\n      });\n    } else if (ename === \"units\") {\n      // console.log(\"units\", value);\n      setQuantity((prevState) => {\n        let list = [...prevState];\n        let index = list.findIndex((item) => {\n          return item.id === id;\n        });\n        let data = {\n          ...list[index],\n          [ename]: value,\n        };\n        list[index] = data;\n        return [...list];\n      });\n    } else if (\n      ename === \"unit\" ||\n      ename === \"quantityPerUnit\" ||\n      ename === \"minimumUnit\"\n    ) {\n      setItem((prevState) => {\n        let data = {\n          ...prevState,\n        };\n        data.branch[props.location] = {\n          ...prevState.branch[props.location],\n          [ename]: value,\n        };\n        return data;\n        // return {\n        //   ...prevState,\n        //   [props.location]: {\n        //     ...prevState[props.location],\n        //     [ename]: value,\n        //   },\n        // };\n      });\n    } else {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    }\n  };\n\n  const getFile1 = () => {\n    $(\"#uploadButton1\").on(\"click\", function () {\n      $(\"#img\").click();\n    });\n\n    $(\"#img\").change(function () {\n      var file = this.files[0];\n      console.log(file);\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        $(\"#uploadButton1\").css(\n          \"background-image\",\n          'url(\"' + reader.result + '\")'\n        );\n      };\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n      }\n    });\n  };\n\n  const submitHandler = () => {\n    // console.log(\"UpdatedItem\", item, quantity, price);\n    let isAddItem = true;\n    if (price === \"normalPrice\") {\n      if (\n        // item[props.location].price.actualPrice <= 0 ||\n        item.branch[props.location].current_price <= 0 ||\n        // item[props.location].price.actualPrice === undefined ||\n        item.branch[props.location].current_price === undefined\n      ) {\n        alert(\"Price should be greater than 0 to proceed further!!!\");\n        isAddItem = false;\n      }\n    } else {\n      for (let i = 0; i < quantity.length; i++) {\n        if (quantity[i].units === \"\") {\n          alert(\"Select units for all quantity like kilogram, liters etc!!!\");\n          isAddItem = false;\n          break;\n        } else if (\n          quantity[i].quantity <= 0 ||\n          quantity[i].actualPrice <= 0 ||\n          quantity[i].currentPrice <= 0\n        ) {\n          alert(\"Quantity or Price should not be 0!!!\");\n          isAddItem = false;\n          break;\n        }\n      }\n    }\n    if (isAddItem) {\n      props.updateItem(item, price, quantity, \"Grocery\");\n    }\n  };\n\n  const addMoreQuantity = () => {\n    setQuantity((prevState) => {\n      let price = prevState;\n      let newId = price.length; // if already two elements[0, 1] then next element id will be [0, 1, 2]\n      let data = {\n        id: newId,\n        quantity: 0,\n        units: \"\",\n        actualPrice: 0,\n        currentPrice: 0,\n      };\n      // price = [...price, data];\n      return [...price, data];\n    });\n  };\n\n  const reduceQuantity = () => {\n    setQuantity((prevState) => {\n      let price = prevState;\n      // let prevState = props.item.priceItem;\n      if (price.length > 1) {\n        price.pop();\n      }\n      return [...price];\n    });\n  };\n\n  let ui = null;\n  if (price !== null) {\n    if (price === \"quantityPrice\") {\n      ui = (\n        <div className=\"col-12\">\n          <p>\n            Pick the Quantity\n            {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\n          </p>\n          {quantity.map((price) => {\n            return (\n              <div className={styles.singlerow} key={price.id}>\n                <div className=\"pic\">\n                  <input\n                    className=\"pics\"\n                    type=\"number\"\n                    id=\"quantity\"\n                    name=\"quantity\"\n                    min=\"0\"\n                    max=\"1000\"\n                    value={price.quantity}\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                  />\n\n                  <select\n                    className=\"amo\"\n                    name=\"units\"\n                    id=\"units\"\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                    value={price.units}\n                  >\n                    <option value=\"\">--Select--</option>\n                    <option value=\"grams\">grams</option>\n                    <option value=\"kilograms\">kilograms</option>\n                    <option value=\"millilitres\">millilitres</option>\n                    <option value=\"litres\">litres</option>\n                  </select>\n                </div>\n                <div>\n                  <label htmlFor=\"quarterPrice\" className={styles.price}>\n                    Actual Price&ensp;\n                  </label>\n                  <i className=\"fas fa-rupee\"></i>\n                  <input\n                    type=\"number\"\n                    className={styles.singlenum}\n                    id=\"actualPrice\"\n                    name=\"actualPrice\"\n                    min=\"0\"\n                    value={price.actualPrice}\n                    onChange={(e) => onChangeHandler(e, price.id)}\n                  />\n                  <label htmlFor=\"cquaterPrice\" className={styles.price}>\n                    Current Price&ensp;\n                  </label>\n                  <i className=\"fas fa-rupee\"></i>\n                  <input\n                    type=\"number\"\n                    id=\"currentPrice\"\n                    name=\"currentPrice\"\n                    min=\"0\"\n                    className={styles.singlenum}\n                    value={price.currentPrice}\n                    onChange={(e) => onChangeHandler(e, price.id)}\n                  />\n                </div>\n              </div>\n            );\n          })}\n          <button className=\"plus\" type=\"button\" onClick={addMoreQuantity}>\n            <i class=\"fas fa-plus-circle\"></i>\n          </button>\n          <button className=\"neg\" type=\"button\" onClick={reduceQuantity}>\n            <i class=\"fas fa-minus-circle\"></i>\n          </button>\n        </div>\n      );\n    } else if (price === \"normalPrice\") {\n      ui = (\n        <div className=\"col-12 price\">\n          {/* <label htmlFor=\"actualPrice\" className={styles.price}>\n            Actual Price&ensp;\n          </label>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            min=\"0\"\n            type=\"number\"\n            id=\"actualPrice\"\n            name=\"actualPrice\"\n            style={{ marginRight: \"15px\" }}\n            className={styles.singlenum}\n            value={item[props.location].price.actualPrice}\n            onChange={onChangeHandler}\n          /> */}\n          <label htmlFor=\"current_price\" className={styles.price}>\n            Current Price&ensp;\n          </label>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            min=\"0\"\n            type=\"number\"\n            id=\"current_price\"\n            className={styles.singlenum}\n            name=\"current_price\"\n            value={item.branch[props.location].current_price}\n            onChange={onChangeHandler}\n          />\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div class={styles.modal}>\n      {item !== null && (\n        <Card>\n          <div class={styles.row}>\n            <div class={styles.left}>\n              <div class=\"upload-img\">\n                <input\n                  type=\"file\"\n                  id=\"img\"\n                  name=\"img\"\n                  accept=\".gif, .jpg, .png\"\n                  onChange={onChangeHandler}\n                />\n                <label\n                  onClick={() => {\n                    getFile1();\n                    // setImgView(true);\n                  }}\n                  htmlFor=\"img\"\n                  id=\"uploadButton1\"\n                  style={{\n                    backgroundImage: `url('${props.img}')`,\n                  }}\n                >\n                  <span>+</span>\n                </label>\n              </div>\n              <div\n                class=\"row\"\n                style={{ justifyContent: \"end\", paddingTop: \"15px\" }}\n              >\n                <button\n                  type=\"button\"\n                  class={styles.btn}\n                  style={{ marginRight: \"10px\" }}\n                  onClick={submitHandler}\n                >\n                  Save\n                </button>\n                <button\n                  type=\"button\"\n                  class={styles.btn}\n                  onClick={props.onClose}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n            <div class={styles.right}>\n              <div class=\"row\">\n                <div\n                  class={styles.col}\n                  style={{ width: \"30%\", paddingRight: \"10px\" }}\n                >\n                  <label htmlFor=\"name\">Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"Name\"\n                    name=\"Name\"\n                    class={styles.input}\n                    alt=\"productname\"\n                    value={item.Name}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n                <div class={styles.col} style={{ width: \"70%\" }}>\n                  <label htmlFor=\"desc\">Description</label>\n                  <input\n                    type=\"text\"\n                    id=\"description\"\n                    name=\"description\"\n                    class={styles.input}\n                    alt=\"productdescrb\"\n                    value={item.description}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n              </div>\n              <div\n                class=\"row\"\n                style={{ justifyContent: \"space-between\", padding: \"15px 0\" }}\n              >\n                {/* <select\n                  class={styles.select}\n                  name=\"style\"\n                  id=\"style\"\n                  onChange={onChangeHandler}\n                  value={item.style}\n                >\n                  <option\n                    value=\"southindian\"\n                    // selected={item.style === \"southindian\" ? true : false}\n                  >\n                    SouthIndian\n                  </option>\n                  <option\n                    value=\"chinese\"\n                    // selected={item.style === \"chinese\" ? true : false}\n                  >\n                    Chinese\n                  </option>\n                </select> */}\n                {/* <select class={styles.select} name=\"category\" id=\"category\">\n                <option value=\"breakfast\">Breakfast</option>\n                <option value=\"lunch\">Lunch</option>\n                <option value=\"dinner\">Dinner</option>\n              </select> */}\n                <select\n                  class={styles.select}\n                  name=\"Type\"\n                  id=\"Type\"\n                  onChange={onChangeHandler}\n                  value={item.Type}\n                >\n                  <option value=\"Fruits_Vegetables\">Fruits_Vegetables</option>\n                  <option value=\"Rice\">Rice</option>\n                  <option value=\"Summer_Drinks_Beverages\">\n                    Summer_Drinks_Beverages\n                  </option>\n                  <option value=\"soaps\">Soaps</option>\n                  <option value=\"Pharmacy\">Pharmacy</option>\n                  <option value=\"Organics\">Organics</option>\n                </select>\n              </div>\n              <div class=\"row\" style={{ justifyContent: \"space-between\" }}>\n                <div class={styles.col} style={{ width: \"48%\" }}>\n                  <div\n                    class=\"row\"\n                    style={{\n                      justifyContent: \"space-between\",\n                      padding: \"5px 0\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <label htmlFor=\"actualUnit\">Actual Unit:</label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"unit\"\n                      name=\"unit\"\n                      min=\"0\"\n                      onChange={onChangeHandler}\n                      value={item.branch[props.location].unit}\n                    />\n                    {/* <label htmlFor=\"quantityPerUnit\" style={{ margin: \"0\" }}>\n                      Quantity Per Unit\n                    </label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"quantityPerUnit\"\n                      name=\"quantityPerUnit\"\n                      min=\"1\"\n                      value={item[props.location].quantityPerUnit}\n                      onChange={onChangeHandler}\n                    /> */}\n                  </div>\n                  {/* <div\n                    class=\"row\"\n                    style={{\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <label htmlFor=\"unit\" style={{ margin: \"0\" }}>\n                      Minimal Unit\n                    </label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"minimumUnit\"\n                      name=\"minimumUnit\"\n                      min=\"0\"\n                      value={item[props.location].minimumUnit}\n                      onChange={onChangeHandler}\n                    />\n                  </div> */}\n                </div>\n                <div class={styles.col} style={{ width: \"48%\" }}>\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dealoftheday\"\n                      name=\"dealoftheday\"\n                      className={styles.check}\n                      checked={item.branch[props.location].dealoftheday}\n                      onChange={onChangeHandler}\n                    />\n                    <label htmlFor=\"dealoftheday\" className={styles.label}>\n                      Deal of the day\n                    </label>\n                  </div>\n                  {/* <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"onSale\"\n                      name=\"onSale\"\n                      className={styles.check}\n                      // checked={item.dealoftheday}\n                    />\n                    <label htmlFor=\"onSale\" className={styles.label}>\n                      On Sale\n                    </label>\n                  </div> */}\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"isproductavailable\"\n                      name=\"isproductavailable\"\n                      className={styles.check}\n                      // checked={item[props.location].isproductavailable}\n                      checked={item.isproductavailable}\n                      onChange={onChangeHandler}\n                    />\n                    <label\n                      htmlFor=\"isproductavailable\"\n                      className={styles.label}\n                    >\n                      Product Available\n                    </label>\n                  </div>\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"Bestseller\"\n                      name=\"Bestseller\"\n                      className={styles.check}\n                      checked={item.branch[props.location].Bestseller}\n                      onChange={onChangeHandler}\n                    />\n                    <label htmlFor=\"Bestseller\" className={styles.label}>\n                      Best Seller\n                    </label>\n                    {/* <label htmlFor=\"top\">Top Product</label> */}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row pricecol\">\n                <div className=\"col-4\">\n                  <input\n                    type=\"radio\"\n                    id=\"normalPrice\"\n                    name=\"price\"\n                    value=\"normalPrice\"\n                    checked={price !== null && price === \"normalPrice\"}\n                    onChange={onChangeHandler}\n                  />\n                  <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\n                </div>\n                {/* <div className=\"col-6\">\n                  <input\n                    type=\"radio\"\n                    id=\"quantityPrice\"\n                    name=\"price\"\n                    value=\"quantityPrice\"\n                    checked={price !== null && price === \"quantityPrice\"}\n                    onChange={onChangeHandler}\n                  />\n                  <label htmlFor=\"quantityPrice\">\n                    &nbsp;Quantity Based Price\n                  </label>\n                </div> */}\n                {ui}\n              </div>\n            </div>\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nconst GroceryEditModal = (props) => {\n  // console.log(\"edit\", props.item);\n  return (\n    <>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.closeModal} />,\n        document.getElementById(\"backdrop-root\")\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay\n          onClose={props.closeModal}\n          // title={props.title}\n          updateItem={props.updateItem}\n          item={props.item}\n          location={props.location}\n        />,\n        document.getElementById(\"overlay-root\")\n      )}\n    </>\n  );\n};\n\nexport default GroceryEditModal;\n","import \"./Snackbar.css\";\n\nfunction snackbar(item, status) {\n  var el = document.createElement(\"div\");\n  el.className = \"snackbar\";\n  var y = document.getElementById(\"snackbar-container\");\n  el.innerHTML = item.Name + \" - \" + status;\n  y.append(el);\n  el.className = \"snackbar show\";\n  setTimeout(function () {\n    el.className = el.className.replace(\"snackbar show\", \"snackbar\");\n  }, 3000);\n}\n\n// function snackbar1(item, status) {\n//   var el = document.createElement(\"div\");\n//   el.className = \"snackbar\";\n//   var y = document.getElementById(\"snackbar-container\");\n//   el.innerHTML = \"Some Text1 Message\";\n//   y.append(el);\n//   el.className = \"snackbar show\";\n//   setTimeout(function () {\n//     el.className = el.className.replace(\"snackbar show\", \"snackbar\");\n//   }, 3000);\n// }\n\nexport default snackbar;\n","import React from \"react\";\n// import { propTypes } from \"react-bootstrap/esm/Image\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst DeleteConfirmModal = (props) => {\n  return (\n    <Modal show={props.showModal} onHide={props.handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Delete Confirmation!!!</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>Are you sure want to delete it?</Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"danger\"\n          onClick={() => props.confirmDelete(props.item)}\n        >\n          Delete\n        </Button>\n        <Button variant=\"primary\" onClick={props.handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default DeleteConfirmModal;\n","import React, { useEffect, useState } from \"react\";\n// import { Toast, ToastContainer } from \"react-bootstrap\";\n// import { getFood } from \"../../api/FoodDB\";\nimport { getItems, deleteItem, updateItem } from \"../../api/ItemDB\";\nimport EditModal from \"../../ui/EditModal/EditModal\";\nimport GroceryEditModal from \"../../ui/EditModal/GroceryEditModal\";\nimport snackbar from \"../../ui/Snackbar/Snackbar\";\nimport Card from \"../Card/Card\";\nimport DeleteConfirmModal from \"../Modals/DeleteConfirmModal\";\n\nconst Items = (props) => {\n  const [item, setItem] = useState(null);\n  const [items, setItems] = useState(null);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [updateModal, setUpdateModel] = useState(false);\n\n  useEffect(() => {\n    getItems(props.title, props.type, (res) => {\n      console.log(\"res\", res);\n      let list = [];\n      let item;\n      res.forEach((it) => {\n        if (it.branch[props.authCtx.user.location] === undefined) {\n          if (props.type === \"Food\") {\n            item = {\n              ...it,\n            };\n            item.branch[props.authCtx.user.location] = {\n              Bestseller: false,\n              BranchName: props.authCtx.user.location,\n              current_price: 0,\n              dealoftheday: false,\n              unit: 0,\n            };\n          } else {\n            item = {\n              ...it,\n            };\n            item.branch[props.authCtx.user.location] = {\n              Bestseller: false,\n              BranchName: props.authCtx.user.location,\n              current_price: 0,\n              dealoftheday: false,\n              unit: 0,\n            };\n          }\n          list.push(item);\n        } else {\n          list.push(it);\n        }\n      });\n      // console.log(\"list\", list);\n      setItems(list);\n    });\n  }, [props.title, props.type]);\n\n  const updateItemHandler = (updatedItem, price, quantity, type) => {\n    // if data not updated\n    // console.log(\"upitem\", updatedItem, price, quantity, type);\n    // console.log(\"updatedItem\", item);\n    let isUpdate = true;\n    if (item === updatedItem) {\n      if (type === \"Food\") {\n        alert(\"You didn't update anything!!!\");\n        isUpdate = false;\n      } else {\n        if (price === \"normalPrice\") {\n          // console.log(item[props.authCtx.user.location].price);\n          if (\n            item.branch[props.authCtx.user.location].current_price ===\n            updatedItem.branch[props.authCtx.user.location].current_price\n          ) {\n            alert(\"You didn't update anything!!!\");\n            isUpdate = false;\n          }\n        } else {\n          if (item.branch[props.authCtx.user.location].price === quantity) {\n            alert(\"You didn't update anything!!!\");\n            isUpdate = false;\n          }\n        }\n      }\n    }\n    if (isUpdate) {\n      // updated\n      updateItem(\n        updatedItem,\n        price,\n        quantity,\n        props.title,\n        props.type,\n        props.authCtx.user.location,\n        (isUpdated) => {\n          if (isUpdated === false) {\n            snackbar(item, \"Sorry Not Updated\");\n          } else {\n            console.log(\"isUpdated\", isUpdated);\n            let list = [...items];\n            let index = list.findIndex((i) => {\n              return i.id === updatedItem.id;\n            });\n            list[index] = isUpdated;\n            setItems(list);\n            snackbar(item, \"Successfully Updated\");\n            setUpdateModel(false);\n          }\n        }\n      );\n    }\n  };\n\n  const deleteItems = (item) => {\n    // console.log(\"items\", item);\n    deleteItem(item, props.title, props.type, (isDeleted) => {\n      if (isDeleted) {\n        let itemsList = [...items];\n        let list = itemsList.filter((it) => {\n          return it.id !== item.id;\n        });\n        setItems(list);\n        snackbar(item, \"Successfully Deleted\");\n      } else {\n        snackbar(item, \"Failed To Delete, Try Again!!!\");\n      }\n    });\n    setDeleteModal(false);\n  };\n\n  let ui = null;\n  if (items === null) {\n    ui = <p>Loading!!!</p>;\n  } else {\n    if (items.length <= 0) {\n      ui = <p>No Items!!!</p>;\n    } else {\n      ui = items.map((item, i) => (\n        <Card\n          key={i}\n          item={item}\n          deleteItem={(it) => {\n            setDeleteModal(true);\n            setItem(it);\n          }}\n          type={props.type}\n          location={props.authCtx.user.location}\n          updateItem={(it) => {\n            setItem(it);\n            setUpdateModel(props.type);\n          }}\n        />\n      ));\n    }\n  }\n\n  return (\n    <>\n      {updateModal === \"Food\" ? (\n        <EditModal\n          item={item}\n          showModal={updateModal}\n          closeModal={() => setUpdateModel(false)}\n          updateItem={updateItemHandler}\n          location={props.authCtx.user.location}\n        />\n      ) : (\n        updateModal === \"Grocery\" && (\n          <GroceryEditModal\n            item={item}\n            showModal={updateModal}\n            closeModal={() => setUpdateModel(false)}\n            updateItem={updateItemHandler}\n            location={props.authCtx.user.location}\n          />\n        )\n      )}\n      {/* {updateModal && (\n        <GroceryEditModal\n          item={item}\n          showModal={updateModal}\n          closeModal={() => setUpdateModel(false)}\n          updateItem={updateItemHandler}\n        />\n      )} */}\n      {deleteModal && (\n        <DeleteConfirmModal\n          item={item}\n          showModal={deleteModal}\n          handleClose={() => setDeleteModal(false)}\n          confirmDelete={deleteItems}\n          location={props.authCtx.user.location}\n        />\n      )}\n      <h1>{props.title}</h1>\n      <div class=\"row item-card\">{ui}</div>\n      <div id=\"snackbar-container\"></div>\n    </>\n  );\n};\n\nexport default Items;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport { db, auth, firebase } from \"../services/firebase\";\nimport AuthContext from \"../context/auth-context\";\nimport snackbar from \"../ui/Snackbar/Snackbar\";\n\nconst Profile = () => {\n  const authCtx = useContext(AuthContext);\n  const [newData, setNewData] = useState({\n    name: \"\",\n    prfl_img: null,\n    mno: \"\"\n  });\n\n  const [password, setPassword] = useState({\n    // oldPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\"\n  });\n\n  useEffect(() => {\n    if (authCtx.user !== null) {\n      let user = authCtx.user;\n      setNewData({\n        name: user.name,\n        prfl_img: null,\n        mno: user.phone\n      });\n    }\n  }, [authCtx.user]);\n\n  $(document).ready(function () {\n    $(\"#togglePassword\").click(function () {\n      var x = document.getElementById(\"newpass\");\n      if (x.type === \"password\") {\n        x.type = \"text\";\n      } else {\n        x.type = \"password\";\n      }\n      $(\"#togglePassword\").toggleClass(\"fa-eye-slash\");\n    });\n\n    $(\"#togglePassword1\").click(function () {\n      var x = document.getElementById(\"pass\");\n      if (x.type === \"password\") {\n        x.type = \"text\";\n      } else {\n        x.type = \"password\";\n      }\n      $(\"#togglePassword1\").toggleClass(\"fa-eye-slash\");\n    });\n  });\n\n  const getFile1 = () => {\n    $(\"#uploadButton1\").on(\"click\", function () {\n      $(\"#img\").click();\n    });\n\n    $(\"#img\").change(function () {\n      var file = this.files[0];\n      console.log(file);\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        $(\"#uploadButton1\").css(\n          \"background-image\",\n          'url(\"' + reader.result + '\")'\n        );\n      };\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n      }\n    });\n  };\n\n  // onChangeHandler()\n  // submitHandler()\n  const updateUser = (newData) => {\n    // console.log(\"updating user details\", newData);\n    let authUser = authCtx.user;\n    let name = authUser.name;\n    let phone = authUser.phone;\n    // only image is updated\n    // both udpated\n    if (newData.prfl_img !== undefined && newData.prfl_img !== null) {\n      // version - 8\n      let bucketName = \"images\";\n      let img = newData.prfl_img;\n      let storageRef = firebase.storage().ref();\n      let timestamp = +new Date().getTime() + \"-\" + newData.prfl_img.name;\n      // console.log(\"timestamp\", timestamp);\n      let imgRef = storageRef.child(`${bucketName}/${timestamp}`);\n      // let photoUrl = \"\";\n      // delete previous photo from storage, but not the default photo\n      imgRef\n        .put(img)\n        .then((snapshot) => {\n          imgRef.getDownloadURL().then((imgUrl) => {\n            // photoUrl = imgUrl;\n            db.collection(\"admin\")\n              .doc(authUser.id)\n              .update({\n                name: newData.name,\n                phone: newData.mno,\n                img: imgUrl\n              })\n              .then(() => {\n                if (\n                  authUser.img !==\n                  \"https://www.w3schools.com/howto/img_avatar.png\"\n                ) {\n                  firebase\n                    .storage()\n                    .refFromURL(authUser.img)\n                    .delete()\n                    .then(() =>\n                      console.log(\n                        \"image deleted successfullty from firebase storage\"\n                      )\n                    );\n                }\n                alert(\"successfully updated\");\n                // console.log(\"successfully updated data to db\");\n                authCtx.setUser({\n                  ...authUser,\n                  name: newData.name,\n                  phone: newData.mno,\n                  img: imgUrl\n                });\n\n                document.getElementById(\"img\").value = \"\";\n                $(\"#uploadButton\").css(\"background-image\", 'url(\"\")');\n              })\n              .catch((e) => console.log(\"getDownloadUrl\", e));\n          });\n        })\n        .catch((e) => {\n          console.log(\"img put\", e);\n        });\n    } else {\n      // no img\n      if (name !== newData.name || phone !== newData.mno) {\n        // console.log(\"name, mno\", newData);\n        db.collection(\"admin\")\n          .doc(authUser.id)\n          .update({\n            name: newData.name,\n            phone: newData.mno\n          })\n          .then(() => {\n            alert(\"successfully updated\");\n            console.log(\"successfully updated data to db\");\n            authCtx.setUser({\n              ...authUser,\n              name: newData.name,\n              phone: newData.mno\n            });\n          })\n          .catch((e) => console.log(e));\n      } else {\n        alert(\"change anything to update!!!\");\n      }\n    }\n    // } else {\n    //   // User is signed out\n    //   // ...\n    // }\n    // });\n  };\n\n  const updatePassword = (password) => {\n    // console.log(\"newPas\", password);\n    if (password.confirmPassword !== password.newPassword) {\n      alert(\"New Password is not equal to Confirm Password!!!\");\n    } else {\n      auth.onAuthStateChanged((user) => {\n        if (user !== null) {\n          // console.log(\"userId\", user.uid);\n          user\n            .updatePassword(password.newPassword)\n            .then(() => {\n              // let item = {\n              //   Name: \"Password\"\n              // };\n              // snackbar(item, \"updated successfully\");\n              alert(\"password updated successfully!!!\");\n              setPassword({\n                newPassword: \"\",\n                confirmPassword: \"\"\n              });\n            })\n            .catch((e) => {\n              if (e.code === \"auth/requires-recent-login\") {\n                alert(\n                  \"Changing sensitive information, So please try again immediately after login. If password is wrong, try with new password you tried.\"\n                );\n              }\n              console.log(e);\n            });\n        }\n      });\n    }\n  };\n\n  const onChangeHandler = (event) => {\n    // console.log(event.target.name);\n    let value = null;\n    if (event.target.name === \"prfl_img\") {\n      value = event.target.files[0];\n    } else {\n      value = event.target.value;\n    }\n    if (\n      event.target.name === \"newPassword\" ||\n      event.target.name === \"confirmPassword\"\n    ) {\n      setPassword((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value\n        };\n      });\n    } else {\n      setNewData((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value\n        };\n      });\n    }\n  };\n\n  return (\n    <div className=\"settings\">\n      <div className=\"row form\">\n        {/* box-shadow bg white */}\n        <div className=\"col-md-5\">\n          <div class=\"upload-img\">\n            <input\n              type=\"file\"\n              id=\"img\"\n              name=\"prfl_img\"\n              accept=\".gif, .jpg, .png\"\n              onChange={onChangeHandler}\n            />\n            <label\n              onClick={() => {\n                getFile1();\n                // setImgView(true);\n              }}\n              htmlFor=\"img\"\n              id=\"uploadButton1\"\n              style={\n                {\n                  // backgroundImage: `url('${props.img}')`\n                }\n              }\n            >\n              <span>+</span>\n            </label>\n          </div>\n          {authCtx.user !== null && (\n            <>\n              <p className=\"name\">{authCtx.user.name}</p>\n              <p className=\"phn\">{authCtx.user.phone}</p>\n              <p className=\"email\">{authCtx.user.email}</p>\n              <p className=\"branch\">{authCtx.user.location}</p>\n            </>\n          )}\n        </div>\n        <div className=\"col-md-7\">\n          <form className=\"edit-details\">\n            <h4 className=\"title\">Account Details</h4>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <label for=\"name\">Name:</label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={newData.name}\n                  onChange={onChangeHandler}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <label for=\"phone\">Phone:</label>\n                <input\n                  type=\"tel\"\n                  class=\"form-control\"\n                  id=\"mno\"\n                  name=\"mno\"\n                  value={newData.mno}\n                  onChange={onChangeHandler}\n                />\n              </div>\n            </div>\n            <label for=\"email\">Email:</label>\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              id=\"email\"\n              name=\"email\"\n              value={authCtx.user !== null && authCtx.user.email}\n              disabled\n            />\n            <div className=\"footer\">\n              <button\n                class=\"save\"\n                type=\"button\"\n                onClick={() => updateUser(newData)}\n              >\n                Save\n              </button>\n              {/* <button class=\"cancel\" type=\"button\">\n                Clear\n              </button> */}\n            </div>\n            <br />\n\n            {/* //button */}\n            <h4 className=\"title\">Account Security</h4>\n            {/* <label for=\"oldpass\">Old Password:</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              id=\"oldpass\"\n              name=\"oldPassword\"\n              value={password.oldPassword}\n              onChange={onChangeHandler}\n            /> */}\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <label for=\"newpass\">New Password:</label>\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  id=\"newpass\"\n                  name=\"newPassword\"\n                  value={password.newPassword}\n                  onChange={onChangeHandler}\n                />\n                <i class=\"fas fa-eye\" id=\"togglePassword\"></i>\n              </div>\n              <div className=\"col-sm-6\">\n                <label for=\"pass\">Confirm Password:</label>\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  id=\"pass\"\n                  name=\"confirmPassword\"\n                  value={password.confirmPassword}\n                  onChange={onChangeHandler}\n                />\n                <i\n                  class=\"fas fa-eye\"\n                  id=\"togglePassword1\"\n                  style={{ right: \"15px\" }}\n                ></i>\n              </div>\n            </div>\n\n            <div className=\"footer\">\n              <button\n                class=\"save\"\n                type=\"button\"\n                onClick={() => updatePassword(password)}\n              >\n                Save\n              </button>\n              {/* <button class=\"cancel\" type=\"button\">\n                Clear\n              </button> */}\n            </div>\n          </form>\n        </div>\n      </div>\n      {/* <div id=\"snackbar-container\"></div> */}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\n\nconst DeliveryCard = (props) => {\n  return (\n    <div className=\"col-md-3 delivery-card\">\n      {props.users.length === 0 ? (\n        <p>No Users!!!</p>\n      ) : (\n        props.users.map((user) => {\n          return (\n            <div className=\"card\" key={user.user_id}>\n              <img\n                className=\"img-fluid\"\n                src={user.user_image_url}\n                alt={user.user_username}\n              />\n              <p className=\"name\">\n                <b>Name:</b>&ensp;{user.user_username}\n              </p>\n              <p className=\"no\">\n                <b>Mobile:</b>&ensp;{user.user_phone_number}\n              </p>\n              <p className=\"add\">\n                <b>Address:</b>&ensp;{user.user_locality}\n              </p>\n              <div className=\"footer row\">\n                <button\n                  type=\"submit\"\n                  className=\"acpt\"\n                  onClick={() => props.acceptHandler(user)}\n                >\n                  Accept&nbsp;<i className=\"fas fa-check\"></i>\n                </button>\n                {user.userStatus === \"registered\" ? (\n                  <>\n                    <button\n                      type=\"submit\"\n                      className=\"rjct\"\n                      onClick={() => props.rejectHandler(user)}\n                    >\n                      Reject&nbsp;<i className=\"fas fa-times\"></i>\n                    </button>\n                  </>\n                ) : (\n                  <>\n                    <button\n                      type=\"submit\"\n                      className=\"rjct\"\n                      onClick={() => props.removeHandler(user)}\n                    >\n                      Remove&nbsp;<i className=\"fas fa-times\"></i>\n                    </button>\n                  </>\n                )}\n                {/* <button\n                  type=\"submit\"\n                  className=\"rjct\"\n                  onClick={() => props.rejectHandler(user)}\n                >\n                  Reject&nbsp;<i className=\"fas fa-times\"></i>\n                </button> */}\n              </div>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default DeliveryCard;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  acceptDeliveryUser,\n  getDeliveryUsers,\n  rejectDeliveryUser,\n  removeDeliveryUser,\n} from \"../api/DeliveryDB\";\nimport DeliveryCard from \"../reusable/DeliveryCard\";\nimport { Switch, Route, NavLink } from \"react-router-dom\";\nimport AuthContext from \"../context/auth-context\";\nimport { db } from \"../services/firebase\";\n\nconst Delivery = () => {\n  const [deliveryUsers, setDeliveryUsers] = useState({\n    newD: [],\n    verified: [],\n    rejected: [],\n  });\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    if (authCtx.user !== null) {\n      let deliveryList = [];\n      let location = authCtx.user.location;\n      // location = location[0].toUpperCase() + location.substring(1);\n      console.log(\"location: \", location);\n      var unsubscribe = db\n        .collection(\"DeliveryUsers\")\n        .doc(\"Branches\")\n        .collection(location)\n        .onSnapshot((docs) => {\n          docs.forEach((doc) => {\n            let data = doc.data();\n            if (data.user_image_url === \"\") {\n              data.user_image_url =\n                \"https://www.w3schools.com/howto/img_avatar.png\";\n            }\n            deliveryList.push(data);\n          });\n          // getDeliveryUsers(true, location, (deliveryList) => {\n          console.log(\"deliveryList\", deliveryList);\n          let newD = [];\n          let verified = [];\n          let rejected = [];\n          deliveryList.forEach((dguy) => {\n            if (dguy.verification === \"registered\") {\n              newD.push(dguy);\n            } else if (dguy.verification === \"rejected\") {\n              rejected.push(dguy);\n            } else if (dguy.verification === \"verified\") {\n              verified.push(dguy);\n            }\n          });\n          setDeliveryUsers({\n            newD: newD,\n            verified: verified,\n            rejected: rejected,\n          });\n          deliveryList = [];\n          // });\n        });\n\n      return () => {\n        unsubscribe();\n      };\n    }\n  }, [authCtx.user]);\n\n  const acceptHandler = (user) => {\n    acceptDeliveryUser(authCtx.user.location, user.user_id, (isAccepted) => {\n      if (isAccepted) {\n        console.log(\"accept\");\n        // newD -> verified\n        // let updatedUser = {\n        //   ...user,\n        //   userStatus: \"verified\"\n        // };\n        // setDeliveryUsers((prevState) => {\n        //   if (user.userStatus === \"registered\") {\n        //     let newD = [...prevState.newD];\n        //     let verified = [...prevState.verified];\n        //     let index = newD.findIndex((u) => u.user_id === user.user_id);\n        //     newD.splice(index, 1);\n        //     verified.push(updatedUser);\n        //     return {\n        //       ...prevState,\n        //       newD: newD,\n        //       verified: verified\n        //     };\n        //   } else {\n        //     let rejected = [...prevState.rejected];\n        //     let verified = [...prevState.verified];\n        //     let index = rejected.findIndex((u) => u.user_id === user.user_id);\n        //     rejected.splice(index, 1);\n        //     verified.push(updatedUser);\n        //     return {\n        //       ...prevState,\n        //       rejected: rejected,\n        //       verified: verified\n        //     };\n        //   }\n        // });\n        // newD.splice(index, noOfElementsToBeDeleted)\n      } else {\n        console.log(\"error-not accepted\");\n      }\n    });\n  };\n\n  const rejectHandler = (user) => {\n    rejectDeliveryUser(authCtx.user.location, user.user_id, (isRejected) => {\n      if (isRejected) {\n        console.log(\"rejected\");\n        let updatedUser = {\n          ...user,\n          userStatus: \"\",\n        };\n        setDeliveryUsers((prevState) => {\n          let newD = [...prevState.newD];\n          let rejected = [...prevState.rejected];\n          let index = newD.findIndex((u) => u.user_id === user.user_id);\n          newD.splice(index, 1);\n          rejected.push(updatedUser);\n          return {\n            ...prevState,\n            newD: newD,\n            rejected: rejected,\n          };\n        });\n      } else {\n        console.log(\"error-not rejected\");\n      }\n    });\n  };\n\n  const removeHandler = (user) => {\n    removeDeliveryUser(authCtx.user.location, user.user_id, (isRejected) => {\n      if (isRejected) {\n        console.log(\"removed\");\n\n        setDeliveryUsers((prevState) => {\n          let rejected = [...prevState.rejected];\n          let index = rejected.findIndex((u) => u.user_id === user.user_id);\n          rejected.splice(index, 1);\n          return {\n            ...prevState,\n            rejected: rejected,\n          };\n        });\n      } else {\n        console.log(\"error-not removed\");\n      }\n    });\n  };\n\n  let ui = null;\n  if (deliveryUsers === null) {\n    ui = <p>Loading!!!</p>;\n  } else if (deliveryUsers.verified.length === 0) {\n    ui = <p>No Delivery Persons!!!</p>;\n  } else {\n    ui = deliveryUsers.verified.map((user, i) => (\n      <div className=\"row details\" key={user.user_id}>\n        <p className=\"id\">{i + 1}</p>\n        <p className=\"name\">{user.user_username}</p>\n        <p className=\"number\">{user.user_phone_number}</p>\n        <p className=\"add\">{user.user_locality}</p>\n        <button\n          type=\"submit\"\n          className=\"action\"\n          onClick={() => rejectHandler(user)}\n        >\n          Remove\n        </button>\n      </div>\n    ));\n  }\n\n  return (\n    <>\n      <div className=\"row headnav\">\n        <div className=\"toggle\">\n          <NavLink to=\"/home/delivery/new\" className=\"newreq row\">\n            New Request\n          </NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/delivery/reject\" className=\"newreq row\">\n            Rejected\n          </NavLink>\n        </div>\n      </div>\n\n      <div className=\"delivery-person\">\n        {/* <div className=\"newreq row\">\n        <h2 className=\"col-12\">New Request</h2>\n        <DeliveryCard />\n      </div> */}\n        <Switch>\n          <Route path=\"/home/delivery/new\">\n            <div className=\"row newreq\">\n              <DeliveryCard\n                users={deliveryUsers.newD}\n                acceptHandler={acceptHandler}\n                rejectHandler={rejectHandler}\n              />\n            </div>\n          </Route>\n          <Route path=\"/home/delivery/reject\">\n            <div className=\"newreq row\">\n              <DeliveryCard\n                users={deliveryUsers.rejected}\n                acceptHandler={acceptHandler}\n                removeHandler={removeHandler}\n                // rejectHandler={rejectHandler}\n              />\n            </div>\n          </Route>\n        </Switch>\n        <div className=\"person-list\">\n          <h2>Delivery Persons List</h2>\n          <div className=\"row head\">\n            {/* <p className=\"id\">Delivery ID</p> */}\n            <p className=\"id\">No.</p>\n            <p className=\"name\">Person Name</p>\n            <p className=\"number\">Mobile Number</p>\n            <p className=\"add\">Address</p>\n            <p className=\"action\">Action</p>\n          </div>\n          {ui}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Delivery;\n","import { db } from \"../services/firebase\";\n\n// read all - food & grocery\n// not in use, bcs it needs unsubscribe, which should be directly done in respecive component\n// const getDeliveryUsers = (location, setList) => {\n//   let list = [];\n//   db.collection(\"DeliveryUsers\")\n//     .doc(\"Branches\")\n//     .collection(location)\n//     .where(\"verification\", \"==\", \"verified\")\n//     .onSnapshot((docs) => {\n//       docs.forEach((doc) => {\n//         list.push(doc.data());\n//       });\n//       setList(list);\n//       list = [];\n//     });\n// };\n\nconst acceptDeliveryUser = (location, id, setList) => {\n  // console.log(\"Accepted\");\n  let value = window.confirm(\"Do you want Accept\");\n  // location = location[0].toUpperCase() + location.substring(1);\n  if (value) {\n    db.collection(\"DeliveryUsers\")\n      .doc(\"Branches\")\n      .collection(location)\n      .doc(id)\n      .update({\n        verification: \"verified\",\n      })\n      .then(() => {\n        setList(true);\n      })\n      .catch((e) => {\n        console.log(e);\n\n        setList(false);\n      });\n  } else {\n    console.log(\"Not Accepted\");\n    setList(false);\n  }\n};\n\nconst rejectDeliveryUser = (location, id, setList) => {\n  console.log(\"Accepted\");\n  let value = window.confirm(\"Do you want to Reject\");\n  // location = location[0].toUpperCase() + location.substring(1);\n  if (value) {\n    db.collection(\"DeliveryUsers\")\n      .doc(\"Branches\")\n      .collection(location)\n      .doc(id)\n      .update({\n        verification: \"rejected\",\n      })\n      .then(() => {\n        setList(true);\n      })\n      .catch((e) => {\n        console.log(e);\n\n        setList(false);\n      });\n  } else {\n    console.log(\"Not Accepted\");\n    setList(false);\n  }\n};\n\nconst removeDeliveryUser = (location, id, setList) => {\n  // console.log(\"Deleted\");\n  let value = window.confirm(\"Do you want Delete\");\n  // location = location[0].toUpperCase() + location.substring(1);\n  if (value) {\n    console.log(\"Deleted\");\n    db.collection(\"DeliveryUsers\")\n      .doc(\"Branches\")\n      .collection(location)\n      .doc(id)\n      .delete()\n      .then(() => {\n        setList(true);\n      })\n      .catch((e) => {\n        console.log(e);\n\n        setList(false);\n      });\n  } else {\n    console.log(\"Not Accepted\");\n    setList(false);\n  }\n};\n\nexport {\n  // getDeliveryUsers,\n  acceptDeliveryUser,\n  rejectDeliveryUser,\n  removeDeliveryUser,\n};\n","import React, { useContext } from \"react\";\nimport { Switch, Route, NavLink } from \"react-router-dom\";\nimport Dashboard from \"../pages/Dashboard\";\nimport Food from \"./FoodItems/Food\";\nimport Orders from \"./Orders/Orders\";\nimport Grocery from \"./Grocery/Grocery\";\nimport AddNew from \"./FoodItems/AddNew/AddNew\";\nimport AddNewItem from \"./Grocery/AddNewItem/AddNewItem\";\n// import FoodItem from \"./FoodItems/FoodItem\";\nimport Items from \"../reusable/Items/Items\";\nimport Profile from \"../pages/Profile\";\nimport Delivery from \"../pages/Delivery\";\n\nimport AuthContext from \"../context/auth-context\";\n\nconst Sidebar = (props) => {\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <section>\n      {/* <!-- main content --> */}\n      <div className=\"container-fluid pt\">\n        <div className=\"flex-wrapper\">\n          <div className=\"sidebar\">\n            <ul className=\"sidebar-list\">\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/dashboard/allorder\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  {/* <i className=\"fas fa-tachometer-alt\"></i> */}\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/dashboard.png\"\n                    alt=\"dashboard\"\n                  />\n                  <span>Dashboard</span>\n                </NavLink>\n              </li>\n              {/* <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/profile\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  \n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/user.png\"\n                    alt=\"profile\"\n                  />\n                  <span>Profile</span>\n                </NavLink>\n              </li> */}\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/fooditems\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  {/* <i class=\"fas fa-utensils\"></i> */}\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/cutlery.png\"\n                    alt=\"fooditem\"\n                  />\n                  <span>Food Items</span>\n                </NavLink>\n              </li>\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/grocery\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  {/* <i className=\"fas fa-shopping-basket\"></i> */}\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/groceries.png\"\n                    alt=\"grocery\"\n                  />\n                  <span>Grocery</span>\n                </NavLink>\n              </li>\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/orders\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/order.png\"\n                    alt=\"fooditem\"\n                  />\n                  <span>Orders</span>\n                </NavLink>\n              </li>\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/delivery\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  <img\n                    className=\"img-fluid\"\n                    src=\"https://cdn-icons-png.flaticon.com/512/2830/2830312.png\"\n                    alt=\"fooditem\"\n                  />\n                  <span>Delivery</span>\n                </NavLink>\n              </li>\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/profile\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  <img\n                    className=\"img-fluid\"\n                    // src=\"/images/profile.png\"\n                    src={authCtx.user !== null && authCtx.user.img}\n                    alt=\"fooditem\"\n                  />\n                  <span>Profile</span>\n                </NavLink>\n              </li>\n              <li className=\"list-item\">\n                <div className=\"list-link\" onClick={props.logoutHandler}>\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/exit.png\"\n                    alt=\"fooditem\"\n                  />\n                  <span>Logout</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n          <div className=\"rt\">\n            <Switch>\n              {/* Food */}\n              <Route path=\"/home/fooditems/addnew\">\n                <AddNew type=\"Food\" />\n              </Route>\n              <Route path=\"/home/fooditems/breakfast\">\n                {/* <BreakFast /> */}\n                {/* <FoodItem title=\"BreakFast\" type=\"food\" /> */}\n                <Items title=\"BreakFast\" type=\"Food\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/fooditems/lunch\">\n                <Items title=\"Lunch\" type=\"Food\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/fooditems/dinner\">\n                <Items title=\"Dinner\" type=\"Food\" authCtx={authCtx} />\n              </Route>\n              {/* <Route path=\"/home/fooditems/starters\">\n                <Items title=\"Starters\" type=\"food\" authCtx={authCtx} />  \n              </Route>\n              <Route path=\"/home/fooditems/desserts\">\n                <Items title=\"Desserts\" type=\"food\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/fooditems/bigdeal\">\n                <Items title=\"BigDeal\" type=\"food\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/fooditems/juice\">\n                <Items title=\"Juice\" type=\"food\" authCtx={authCtx} />\n              </Route> */}\n              <Route path=\"/home/fooditems\">\n                <Food />\n              </Route>\n\n              {/* Food Orders */}\n              <Route path=\"/home/orders\">\n                <Orders />\n              </Route>\n\n              {/* Grocery */}\n              <Route path=\"/home/grocery/rice\">\n                <Items title=\"Rice\" type=\"Grocery\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/grocery/fruitsvegs\">\n                <Items\n                  title=\"Fruits_Vegetables\"\n                  type=\"Grocery\"\n                  authCtx={authCtx}\n                />\n              </Route>\n              {/* <Route path=\"/home/grocery/cannedgoods\">\n                <Items title=\"CannedGoods\" type=\"grocery\" authCtx={authCtx} />\n              </Route> */}\n              <Route path=\"/home/grocery/summer-drinks-beverages\">\n                <Items\n                  title=\"Summer_Drinks_Beverages\"\n                  type=\"Grocery\"\n                  authCtx={authCtx}\n                />\n              </Route>\n              <Route path=\"/home/grocery/soaps\">\n                <Items title=\"soaps\" type=\"Grocery\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/grocery/pharmacy\">\n                <Items title=\"Pharmacy\" type=\"Grocery\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/grocery/organics\">\n                <Items title=\"Organics\" type=\"Grocery\" authCtx={authCtx} />\n              </Route>\n              {/* <Route path=\"/home/grocery/cleaners\">\n                <Items title=\"Cleaners\" type=\"grocery\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/grocery/others\">\n                <Items title=\"Others\" type=\"grocery\" authCtx={authCtx} />\n              </Route> */}\n              <Route path=\"/home/grocery/addnewitem\">\n                <AddNewItem type=\"Grocery\" />\n              </Route>\n              <Route path=\"/home/grocery\">\n                <Grocery />\n              </Route>\n\n              {/* Delivery */}\n              <Route path=\"/home/delivery\">\n                <Delivery />\n              </Route>\n\n              {/* Profile */}\n              <Route path=\"/home/profile\">\n                <Profile />\n              </Route>\n\n              {/* Dashboard */}\n              <Route path=\"/home/dashboard/manual\">\n                <Dashboard />\n              </Route>\n              <Route path=\"/home/dashboard/delivered\">\n                <Dashboard type=\"food\" />\n              </Route>\n              <Route path=\"/home/dashboard/ondeliver\">\n                <Dashboard type=\"food\" />\n              </Route>\n              <Route path=\"/home/dashboard/preparing\">\n                <Dashboard type=\"food\" />\n              </Route>\n              <Route path=\"/home/dashboard/neworder\">\n                <Dashboard type=\"food\" />\n              </Route>\n              <Route path=\"/home/dashboard/allorder\">\n                <Dashboard type=\"food\" />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Sidebar;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../services/firebase\";\nimport IdleTimeoutModal from \"../ui/IdleTimeoutModal\";\nimport IdleTimerContainer from \"../helpers/IdleTimerContainer\";\nimport Navbar from \"../components/Navbar\";\nimport Sidebar from \"../components/Sidebar\";\nimport { useHistory } from \"react-router\";\nimport ReactNotifications from \"react-notifications-component\";\n// import AuthContext from \"../context/auth-context\";\n\nfunction Home(props) {\n  const [showTimeoutModal, setShowTimeoutModal] = useState(false);\n  const [isTimedout, setIsTimedout] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    history.push(\"/home/dashboard/allorder\");\n  }, []);\n\n  const handleClose = () => {\n    setShowTimeoutModal(false);\n    setIsTimedout(false);\n  };\n\n  const logoutHandler = () => {\n    auth\n      .signOut()\n      .then(() => {\n        // Sign-out successful.\n        console.log(\"signed out successfully...\");\n        // alert(\"signed out\");\n        localStorage.removeItem(\"userId\");\n        props.history.replace(\"/\");\n      })\n      .catch((error) => {\n        // An error happened.\n        alert(\"Some Error To Logout!!!\");\n        console.log(error);\n      });\n  };\n\n  const timeoutModalHandler = () => {\n    setShowTimeoutModal(true);\n  };\n  return (\n    <div className=\"App\">\n      <ReactNotifications />\n      <IdleTimeoutModal\n        showModal={showTimeoutModal}\n        handleClose={handleClose}\n        handleLogout={logoutHandler}\n      />\n      <IdleTimerContainer\n        handleLogout={logoutHandler}\n        timeout={isTimedout}\n        timeoutModal={timeoutModalHandler}\n        timedoutHandler={(bool) => {\n          setIsTimedout(bool);\n        }}\n      />\n      <Navbar logoutHandler={logoutHandler} />\n      <Sidebar logoutHandler={logoutHandler} />\n    </div>\n  );\n}\nexport default Home;\n","import React from \"react\";\nimport Lottie from \"react-lottie\";\nimport { useHistory } from \"react-router\";\nimport * as pagenotfound from \"../assets/images/64076-404-not-found-page.json\";\n\nconst PageNotFound = () => {\n  const history = useHistory();\n  const defaultOptions1 = {\n    loop: true,\n    autoplay: true,\n    animationData: pagenotfound.default,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\"\n    }\n  };\n\n  return (\n    <div id=\"wrapper\" onClick={() => history.push(\"/\")}>\n      <Lottie options={defaultOptions1} height={500} width={1000} />\n      {/* <div id=\"info\">\n        <h3>This page could not be found</h3>\n      </div> */}\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import \"./styles.css\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport PageNotFound from \"./ui/404Error\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport AuthContext from \"./context/auth-context\";\n// import BulkUpdate from \"./components/BulkUpdate\";\n\nexport default function App() {\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    // console.log(\"location: \", window.location.pathname);\n    if (!authCtx.isLoggedIn) {\n      history.replace(\"/\");\n    } else {\n      history.replace(\"/home\");\n    }\n  }, [authCtx.isLoggedIn]);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        {/* <Route path=\"/bulk\" component={BulkUpdate} /> */}\n        <Route path=\"/home\" component={Home} />\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"*\" render={() => <PageNotFound />} />\n      </Switch>\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./context/auth-context\";\nimport { OrdersContextProvider } from \"./context/orders-context\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <AuthContextProvider>\n    <OrdersContextProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </OrdersContextProvider>\n  </AuthContextProvider>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__3R81p\",\"Button\":\"Login_Button__3M5ml\",\"Link\":\"Login_Link__1qBtC\"};"],"sourceRoot":""}