{"version":3,"sources":["ui/EditModal/EditModal.module.css","ui/Card/Card.module.css","ui/DeliveryModal/DeliveryModal.module.css","services/firebase.js","context/auth-context.js","ui/Input.js","pages/Login.js","ui/IdleTimeoutModal.js","helpers/IdleTimerContainer.js","context/orders-context.js","ui/Counter.js","components/Navbar.js","api/OrderDB.js","ui/Card/Card.js","ui/Backdrop.js","ui/DeliveryModal/DeliveryModal.js","components/Dashboard/OrderMaintain.js","api/ItemDB.js","components/Manual/ManualBilling.js","pages/Dashboard.js","components/FoodItems/Food.js","ui/Charts/LineChart.js","ui/Charts/PieChart.js","ui/Tables/Tables.js","helpers/ExportToExcel.js","components/Orders/Orders.js","reusable/Card/Card.js","components/Grocery/Grocery.js","components/FoodItems/AddNew/PreviewCard.js","components/FoodItems/AddNew/AddNewForm.js","reusable/Modals/AlertModal.js","components/FoodItems/AddNew/AddNew.js","components/Grocery/AddNewItem/PreviewCard.js","components/Grocery/AddNewItem/AddNewForm.js","components/Grocery/AddNewItem/AddNewItem.js","ui/EditModal/EditModal.js","ui/EditModal/GroceryEditModal.js","ui/Snackbar/Snackbar.js","reusable/Modals/DeleteConfirmModal.js","reusable/Items/Items.js","pages/Profile.js","reusable/DeliveryCard.js","pages/Delivery.js","api/DeliveryDB.js","components/Sidebar.js","pages/Home.js","ui/404Error.js","App.js","index.js","pages/Login.module.css"],"names":["module","exports","restaurant","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","auth","messaging","getToken","setTokenFound","currentToken","vapidKey","console","log","enablePersistence","experimentalTabSynchronization","then","catch","err","code","AuthContext","React","createContext","user","id","name","location","role","email","img","phone","isLoggedIn","setUser","setIsLoggedIn","logout","AuthContextProvider","props","useState","useEffect","userId","localStorage","getItem","collection","doc","get","data","e","Provider","value","status","signOut","removeItem","error","children","Input","Form","Group","className","controlId","Label","label","Control","type","placeholder","onChange","Value","isText","Text","text","Login","authCtx","useContext","setError","password","userCred","setUserCred","isTokenFound","token","setToken","tokenFunc","changeHandler","event","val","target","prevState","style","Alert","variant","onSubmit","preventDefault","signInWithEmailAndPassword","userCredential","uid","setItem","fcm_token","update","history","push","Button","IdleTimeOutModal","Modal","show","showModal","onHide","handleClose","Header","closeButton","Title","Body","Footer","onClick","handleLogout","IdleTimerContainer","idleTimerRef","useRef","timeoutDuration","ref","timeout","onIdle","timeoutModal","current","reset","timedoutHandler","onActive","OrdersContext","orderData","online","dinein","ready","cancelled","setOrderData","OrdersContextProvider","Counter","orderContext","telephone","Overlay","logoutHandler","Navbar","isOverlay","setIsOverlay","src","alt","href","to","activeClassName","noOfDaysInNormalYear","noOfDaysInLeapYear","billPaidOrder","order","isAdded","orderType","items","daitem","its","item","updateitem","itemName","Name","itemId","itemPrice","itemSize","noOfQuantity","itemQuantity","order_items","actualPrice","totalPrice","timestamp","Date","getTime","date","day","getDate","month","getMonth","getFullYear","orders","FieldValue","arrayUnion","set","createDocumentIds","days","year","docIds","i","getOrders","setOrders","ty","datee","onlineStat","Array","fill","dineInStat","onlineRevenue","dineInRevenue","forEach","o","hour","parseInt","getHours","length","updateOrderStatus","isUpdated","dBoyId","userStatus","Card","classes","Backdrop","onClose","position","top","left","width","height","zIndex","background","ModalOverlay","deliveryUsers","setDeliveryUsers","list","unsubscribe","where","onSnapshot","docs","dUser","currentOrders","user_id","orderId","address","userDetails","userAddress","ui","map","statusUi","styles","free","assign","assignDeliveryUser","span","busy","span1","title","user_username","textDecoration","row","marginBottom","no","user_phone_number","ord","class","modal","assignmodal","hname","hno","hstatus","hassign","hcurrentOrder","DeliveryModal","ReactDOM","createPortal","closeModal","document","getElementById","OrderMaintain","assignModal","setAssignModal","undefined","deliveryAssignHandler","pathname","includes","getDeliveredOrders","hours","mins","getMinutes","timePeriod","userName","order_address","payment","isPaid","noOfItems","addOutOfStock","branch","unit","minimumUnit","addItem","price","category","bucketName","storageRef","storage","subCategoryTimestamp","file","imgRef","child","put","getDownloadURL","nameSearch","createNameSearchArray","Bestseller","Type","actual_price","categories","currency","current_price","currentPrice","dealoftheday","dealOfTheDay","description","desc","image","isproductavailable","isProductAvailable","product_id","productId","quantityPerUnit","shop_name","name_search","bestSeller","BranchName","actualUnit","add","docRef","pName","toLowerCase","sum","ManualBilling","manual","setManual","generate","setGenerate","titles","setItems","listPromises","tit","Promise","all","res","getMultiTitleItems","onChangeHandler","removeOrder","htmlFor","marginRight","padding","createOrder","disabled","ongoingOrders","cursor","setCurrentOrder","justifyContent","alignItems","currentOrder","autoComplete","outline","priceUi","min","size","paymentMethod","window","alert","generateBill","addTelOrders","Dashboard","ordersContext","setType","allOrders","newOrders","preparingOrders","onDeliveryOrders","deliveredOrders","food","grocery","setOutOfStockItems","telephoneBillNoFood","telephoneBillNoGrocery","manualBillNoFood","manualBillNoGrocery","setOngoingOrders","cancelReason","deliveryCharge","discount","latitude","longitude","tax","userid","navigator","serviceWorker","onmessage","notification","localForage","findIndex","v","messageType","store","addNotification","message","body","insert","container","animationIn","animationOut","dismiss","duration","onScreen","statData","sort","a","b","Function","listFood","index","splice","localforage","listGrocery","sendNotificationToDeliveryUser","dGuy","registration_ids","vibrate","sound","show_in_foreground","priority","content_available","user_token","headers","Headers","Authorization","fetch","method","JSON","stringify","response","json","updateOrder","updatedOrder","allIndex","newIndex","prepareIndex","path","newItem","l","updatedItem","sumPrice","cquarterPrice","chalfPrice","cfullPrice","time","newData","Food","LineChart","labels","stat","filter","config","datasets","borderColor","tension","options","chart","Chart","destroy","PieChart","backgroundColor","hoverOffset","Tables","textAlign","textTransform","ExportToExcel","apiData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","Orders","itemType","setFilter","setStat","showTable","setShowTable","toISOString","split","max","labelName","checked","emptyData","noOfDays","isLeap","checkLeapYear","listOrders","values","getMonthOrders","listStat","monthStat","monthNo","noOfOrders","getYearOrders","updateItem","fontSize","PreviewCard","foodType","url","altName","fullPrice","AddNewForm","quarterPrice","halfPrice","draftHandler","required","clearHandler","DeleteConfirmModal","AddNew","offer","currencyCode","onSale","quaterPrice","cquaterPrice","setPrice","setAlert","$","prop","AlertModal","ename","files","URL","createObjectURL","priceItem","parseFloat","priceItemChangeHandler","quantity","units","pop","AddNewItem","isAddItem","pricee","quarter","half","full","setQuantity","singlenum","accept","on","click","change","this","reader","FileReader","onloadend","css","result","readAsDataURL","backgroundImage","paddingTop","btn","isUpdate","right","col","paddingRight","input","select","number","single","check","EditModal","singlerow","GroceryEditModal","snackbar","el","createElement","y","innerHTML","append","setTimeout","replace","confirmDelete","Items","deleteModal","setDeleteModal","updateModal","setUpdateModel","getItems","it","updateItemHandler","updatedData","refFromURL","delete","deleteItem","isDeleted","Profile","prfl_img","mno","setNewData","newPassword","confirmPassword","setPassword","x","toggleClass","for","authUser","snapshot","imgUrl","updateUser","onAuthStateChanged","updatePassword","DeliveryCard","users","user_image_url","user_locality","acceptHandler","rejectHandler","removeHandler","Delivery","newD","verified","rejected","deliveryList","dguy","verification","setList","confirm","acceptDeliveryUser","isAccepted","rejectDeliveryUser","isRejected","updatedUser","u","removeDeliveryUser","Sidebar","Grocery","Home","showTimeoutModal","setShowTimeoutModal","isTimedout","setIsTimedout","useHistory","IdleTimeoutModal","bool","PageNotFound","defaultOptions1","loop","autoplay","animationData","pagenotfound","rendererSettings","preserveAspectRatio","App","component","exact","render","rootElement"],"mappings":"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","file":"static/js/main.9e8b7388.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"EditModal_modal__2yVmc\",\"row\":\"EditModal_row__2OiVa\",\"right\":\"EditModal_right__38gzX\",\"col\":\"EditModal_col__oZn6w\",\"input\":\"EditModal_input__2FwlV\",\"select\":\"EditModal_select__2dxIW\",\"number\":\"EditModal_number__1EfNZ\",\"btn\":\"EditModal_btn__18Nbr\",\"single\":\"EditModal_single__1If5m\",\"check\":\"EditModal_check__8Huuq\",\"label\":\"EditModal_label__39ZhB\",\"singlerow\":\"EditModal_singlerow__1w74i\",\"singlenum\":\"EditModal_singlenum__3QHmL\",\"singleprice\":\"EditModal_singleprice__1zjvQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__dwJ2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"DeliveryModal_modal__2NSac\",\"assignmodal\":\"DeliveryModal_assignmodal__2g9rr\",\"row\":\"DeliveryModal_row__24Ihd\",\"hname\":\"DeliveryModal_hname__hz91m\",\"hno\":\"DeliveryModal_hno__3ZOc7\",\"hstatus\":\"DeliveryModal_hstatus__3O2-a\",\"hassign\":\"DeliveryModal_hassign__2yYbC\",\"hcurrentOrder\":\"DeliveryModal_hcurrentOrder__3nyCV\",\"name\":\"DeliveryModal_name__2s8OA\",\"no\":\"DeliveryModal_no__3zRfB\",\"status\":\"DeliveryModal_status__2qO82\",\"assign\":\"DeliveryModal_assign__1E-Fs\",\"span\":\"DeliveryModal_span__2_NkE\"};","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/analytics\";\nimport \"firebase/storage\";\nimport \"firebase/messaging\";\n\n// config for institute\nconst config = {\n  apiKey: \"AIzaSyCmOWm_VEzYodG_PzusXD61HmEkSyV1Kcw\",\n  authDomain: \"thalaivan-restaurant.firebaseapp.com\",\n  projectId: \"thalaivan-restaurant\",\n  storageBucket: \"thalaivan-restaurant.appspot.com\",\n  messagingSenderId: \"1084918476722\",\n  appId: \"1:1084918476722:web:1502d45a5f59d483977eab\",\n  measurementId: \"G-ZKVE7EMKFJ\",\n};\n\nconst restaurant = firebase.initializeApp(config);\n\nrestaurant.analytics();\n// firebase.analytics();\nconst db = restaurant.firestore();\nconst auth = restaurant.auth();\nconst messaging = restaurant.messaging();\nconst publicKey =\n  \"BLA1gt_4yje_f8ttbbDAToMEeN1BT9qygiB5Bc8ShJh0qc_cTBcZUznZNd5A1XBla2lX-IMyLJhFzjIezu58jEI\";\n\n// notifications\nexport const getToken = async (setTokenFound) => {\n  let currentToken = \"\";\n  try {\n    currentToken = await messaging.getToken({ vapidKey: publicKey });\n    console.log(\"Current Token\", currentToken);\n    if (currentToken) {\n      setTokenFound(true);\n    } else {\n      setTokenFound(false);\n    }\n  } catch (error) {\n    console.log(\"An error occurred while retrieving token.\", error);\n  }\n  // messaging.onMessage((payload) => {\n  //   console.log(\"onmes---\");\n  //   // resolve(payload);\n  // });\n  return currentToken;\n};\n\n// messaging.getToken().then((currentToken) => {\n//   if (currentToken) {\n//     console.log(\"token\", currentToken);\n//   } else {\n//     // Show permission request.\n//     console.log(\n//       \"No Instance ID token available. Request permission to generate one.\"\n//     );\n//   }\n//   /** When app is active */\n//   firebase.messaging().onMessage(\n//     (payload) => {\n//       console.log(payload);\n//     },\n//     (e) => {\n//       console.log(e);\n//     }\n//   );\n// });\n\n// getToken();\nexport const onMessageListener = () =>\n  new Promise((resolve) => {\n    messaging.onMessage((payload) => {\n      console.log(\"onmes\");\n      resolve(payload);\n    });\n  });\n\n// offline support\ndb.enablePersistence({ experimentalTabSynchronization: true })\n  .then(() => {\n    console.log(\"Woohoo! Multi-Tab Persistence!\");\n  })\n  .catch((err) => {\n    if (err.code === \"failed-precondition\") {\n      // Multiple tabs open, persistence can only be enabled\n      // in one tab at a a time.\n      // ...\n      console.log(\n        \"multiple tab is opened please close this tab and use only one tab, when offline\"\n      );\n    } else if (err.code === \"unimplemented\") {\n      // The current browser does not support all of the\n      // features required to enable persistence\n      // ...\n      console.log(\n        \"Current Browser or its version doesn't support offline mode\"\n      );\n    }\n  });\n\nexport { db, auth, firebase, messaging };\n","import React, { useEffect, useState } from \"react\";\nimport { auth, db } from \"../services/firebase\";\n\nconst AuthContext = React.createContext({\n  user: {\n    id: \"\",\n    name: \"\",\n    location: \"\",\n    role: \"\",\n    email: \"\",\n    img: \"\",\n    phone: \"\",\n  },\n  isLoggedIn: false,\n  setUser: (user) => {},\n  setIsLoggedIn: () => {},\n  logout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const [user, setUser] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    let userId = localStorage.getItem(\"userId\");\n    if (userId !== null) {\n      // auth.onAuthStateChanged((user) => {\n      //   if (user !== null) {\n      //   }\n      // });\n      db.collection(\"admin\")\n        .doc(userId)\n        .get()\n        .then((doc) => {\n          setUser(doc.data());\n          setIsLoggedIn(true);\n        })\n        .catch((e) => console.log(e));\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, []);\n\n  const setMyUser = (user) => {\n    console.log(\"Setting User\", user);\n    setUser(user);\n  };\n\n  const setLoggedIn = (status) => {\n    setIsLoggedIn(status);\n  };\n\n  const logoutHandler = () => {\n    // console.log(\"logout\");\n    // return true;\n    auth\n      .signOut()\n      .then(() => {\n        // Sign-out successful.\n        console.log(\"signed out successfully...\");\n        // alert(\"signed out\");\n        localStorage.removeItem(\"userId\");\n        return true;\n      })\n      .catch((error) => {\n        // An error happened.\n        console.log(error);\n        return false;\n      });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: user,\n        setUser: setMyUser,\n        isLoggedIn: isLoggedIn,\n        setIsLoggedIn: setLoggedIn,\n        logout: logoutHandler,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst Input = (props) => {\n  return (\n    <div>\n      <Form.Group className=\"mb-3\" controlId={props.id}>\n        <Form.Label>{props.label}</Form.Label>\n        <Form.Control\n          type={props.type}\n          placeholder={props.placeholder}\n          onChange={props.onChange}\n          value={props.Value}\n          name={props.name}\n        />\n        {props.isText && (\n          <Form.Text className=\"text-muted\">{props.text}</Form.Text>\n        )}\n      </Form.Group>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Button, Alert } from \"react-bootstrap\";\nimport AuthContext from \"../context/auth-context\";\nimport { auth, db, getToken } from \"../services/firebase\";\nimport Input from \"../ui/Input\";\nimport style from \"./Login.module.css\";\n\nconst Login = (props) => {\n  const authCtx = useContext(AuthContext);\n  const [error, setError] = useState();\n  const [userCred, setUserCred] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [isTokenFound, setTokenFound] = useState(false);\n  const [token, setToken] = useState(false);\n  console.log(\"Token found\", isTokenFound);\n\n  // console.log(\"navigator\", navigator.onLine);\n  useEffect(() => {\n    let data;\n    async function tokenFunc() {\n      data = await getToken(setTokenFound);\n      if (data) {\n        setToken(data);\n        console.log(\"Token is\", data);\n      }\n      return data;\n    }\n    tokenFunc();\n  }, [setTokenFound]);\n\n  const changeHandler = (event) => {\n    let val = event.target.value;\n    setUserCred((prevState) => {\n      return {\n        ...prevState,\n        [event.target.name]: val\n      };\n    });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    // firebase signin auth\n    auth\n      .signInWithEmailAndPassword(userCred.email, userCred.password)\n      .then((userCredential) => {\n        // setOpen(true);\n        // Signed in\n        let userId = userCredential.user.uid;\n        console.log(\"userId\", userId);\n        localStorage.setItem(\"userId\", userId);\n        // props.history.replace(`/home?userId=${userId}`);\n        db.collection(\"admin\")\n          .doc(userId)\n          .get()\n          .then((doc) => {\n            console.log(doc.data());\n            let user = doc.data();\n            if (user.fcm_token !== token) {\n              user = {\n                ...user,\n                fcm_token: token\n              };\n              db.collection(\"admin\")\n                .doc(userId)\n                .update({\n                  fcm_token: token\n                })\n                .then(() => {})\n                .catch((e) => console.log(e));\n            }\n            console.log(\"user\", user);\n            authCtx.setUser(user);\n            authCtx.setIsLoggedIn(true);\n            // sessionStorage.setItem(\"userId\", userId);\n          })\n          .catch((e) => console.log(e));\n        props.history.push(\"/home\");\n      })\n      .catch((e) => {\n        console.log(e.code);\n        if (e.code === \"auth/wrong-password\") {\n          setError(\"Incorrect password. Try again.\");\n        } else if (e.code === \"auth/network-request-failed\") {\n          setError(\"Internet connection is down!!!\");\n        } else {\n          setError(\"User doesn't exist. Please do register.\");\n        }\n      });\n  };\n\n  return (\n    <>\n      <div className={style.Login}>\n        {/* <Snackbar open={open} handleClose={handleClose} /> */}\n        <h1>Login</h1>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        <form onSubmit={submitHandler}>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            label=\"Email address\"\n            id=\"email\"\n            placeholder=\"Enter email\"\n            text=\"We'll never share your email with anyone else.\"\n            isText=\"true\"\n            onChange={changeHandler}\n            value={userCred.email}\n          />\n\n          <Input\n            type=\"password\"\n            label=\"Password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={changeHandler}\n            value={userCred.password}\n          />\n\n          <Button className={style.Button} variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n          <Button type=\"reset\" className={style.Button} variant=\"primary\">\n            Clear\n          </Button>\n          <br />\n          <br />\n          <br />\n          {/* <p style={{ display: \"inline\" }}>Don't have an account? </p>\n          <a className={style.Link} href=\"/signup\">\n            Register\n          </a> */}\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\n// import { propTypes } from \"react-bootstrap/esm/Image\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst IdleTimeOutModal = (props) => {\n  return (\n    <Modal show={props.showModal} onHide={props.handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>You Have Been Idle!</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>You Will Get Timed Out. You want to stay?</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"danger\" onClick={props.handleLogout}>\n          Logout\n        </Button>\n        <Button variant=\"primary\" onClick={props.handleClose}>\n          Stay\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default IdleTimeOutModal;\n","import React, { useRef, useState } from \"react\";\nimport IdleTimer from \"react-idle-timer\";\n\nconst IdleTimerContainer = (props) => {\n  const idleTimerRef = useRef(null);\n  const [timeoutDuration, setTimeoutDuration] = useState(1000 * 60 * 15); // 10mins\n\n  const onIdleHandler = () => {\n    console.log(\"user is idle...\");\n    if (props.timeout) {\n      props.handleLogout();\n    } else {\n      props.timeoutModal(); // opens the modal\n      idleTimerRef.current.reset();\n      props.timedoutHandler(true); // after the modal, if they are not responding then\n    }\n    // props.timeoutModal(); // opens the modal\n  };\n\n  const onActiveHandler = () => {\n    console.log(\"user is active...\");\n    props.timedoutHandler(false);\n  };\n\n  // const onActionHandler = () => {\n  //   console.log(\"user action...\");\n  //   props.timedoutHandler(false);\n  // };\n\n  return (\n    <IdleTimer\n      ref={idleTimerRef}\n      timeout={timeoutDuration} // {1000 * 60 * 15}, {1000 * 5 * 1}\n      onIdle={onIdleHandler}\n      onActive={onActiveHandler}\n      // onAction={onActionHandler}\n    />\n  );\n};\n\nexport default IdleTimerContainer;\n","import React, { useEffect, useState } from \"react\";\n\nconst OrdersContext = React.createContext({\n  orderData: {\n    online: 0,\n    dinein: 0,\n    ready: 0,\n    cancelled: 0\n  },\n  setOrderData: (orderData) => {}\n});\n\nexport const OrdersContextProvider = (props) => {\n  const [orderData, setOrderData] = useState({\n    online: 0,\n    dinein: 0,\n    ready: 0,\n    cancelled: 0\n  });\n\n  // useEffect(() => {\n  // }, []);\n\n  const setMyOrdersData = (orderData) => {\n    console.log(\"Setting orderData\", orderData);\n    setOrderData(orderData);\n  };\n\n  return (\n    <OrdersContext.Provider\n      value={{\n        orderData: orderData,\n        setOrderData: setMyOrdersData\n      }}\n    >\n      {props.children}\n    </OrdersContext.Provider>\n  );\n};\n\nexport default OrdersContext;\n","import React, { useContext } from \"react\";\nimport OrdersContext from \"../context/orders-context\";\n\nconst Counter = (props) => {\n  const orderContext = useContext(OrdersContext);\n  // console.log(\"orderData\", orderContext);\n  return (\n    <div className=\"row header-count\">\n      <div className=\"inner-div\">\n        <div className=\"card\">\n          <h5>Online Orders:</h5>\n          <p className=\"count\">{orderContext.orderData.online}</p>\n        </div>\n      </div>\n      <div className=\"inner-div\">\n        <div className=\"card\">\n          <h5>Telephone:</h5>\n          <p className=\"count\">{orderContext.orderData.telephone}</p>\n        </div>\n      </div>\n      <div className=\"inner-div\">\n        <div className=\"card\">\n          <h5>On-Delivery:</h5>\n          <p className=\"count\">{orderContext.orderData.ready}</p>\n        </div>\n      </div>\n      <div className=\"inner-div\">\n        <div className=\"card\">\n          <h5>Cancelled:</h5>\n          <p className=\"count\">{orderContext.orderData.cancelled}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Counter;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Counter from \"../ui/Counter\";\nimport Search from \"../ui/Search\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../context/auth-context\";\n// import OrdersContext from \"../context/orders-context\";\n\nconst Overlay = (props) => {\n  return (\n    <div className=\"content\">\n      <ul>\n        <li className=\"inner-list\">\n          <p>Welcome {props.authCtx.user.name} !</p>\n        </li>\n        {/* <li className=\"inner-list\">\n                  <a href=\"#\" className=\"list-link\">\n                    <i className=\"fas fa-cog\"></i>Settings\n                  </a>\n                </li> */}\n        <li className=\"inner-list\">\n          <div className=\"list-link\" onClick={props.logoutHandler}>\n            <i className=\"fas fa-sign-out-alt\"></i>Logout\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nconst Navbar = (props) => {\n  const [isOverlay, setIsOverlay] = useState(false);\n  const authCtx = useContext(AuthContext);\n\n  // useEffect(() => {\n  //   console.log(\"authCtx\", authCtx.user);\n  // }, [authCtx.user]);\n\n  const overlayHandler = () => {\n    setIsOverlay((prevState) => {\n      // console.log(userDetail, \"overlay\");\n      return !prevState;\n    });\n  };\n\n  // const [orderData, setOrderData] = useState({\n  //   online: 0,\n  //   dinein: 0,\n  //   ready: 0,\n  //   cancelled: 0\n  // });\n\n  return (\n    <section className=\"nav-bar\">\n      {authCtx.user !== null && (\n        <div className=\"navbar\">\n          <div className=\"logo\">\n            <img className=\"img-fluid\" src=\"/images/logo.jpg\" alt=\"Logo\" />\n          </div>\n          <Counter />\n          {/* <Search /> */}\n          <ul className=\"nav-item\">\n            <li className=\"list-item\">\n              <a className=\"list-link\" href=\"#l\">\n                <i className=\"far fa-bell\"></i>\n              </a>\n            </li>\n            <li className=\"list-item\">\n              <button\n                type=\"button\"\n                onClick={overlayHandler}\n                className=\"btn collapsible\"\n              >\n                <div className=\"flex\">\n                  <img\n                    className=\"img-fluid\"\n                    src={authCtx.user.img}\n                    alt=\"profilepic\"\n                  />\n                  <p className=\"aname\">\n                    {authCtx.user.name}\n                    <i className=\"fas fa-angle-down\"></i>\n                  </p>\n                </div>\n              </button>\n              {isOverlay && (\n                <Overlay\n                  authCtx={authCtx}\n                  logoutHandler={props.logoutHandler}\n                />\n              )}\n            </li>\n            <li className=\"list-item\">\n              <Link\n                to=\"/home/profile\"\n                activeClassName=\"active\"\n                className=\"list-link\"\n              >\n                <i className=\"fas fa-cog\"></i>\n              </Link>\n            </li>\n            {/* <li className=\"list-item\">\n              <a className=\"list-link\" href=\"#l\">\n                <i className=\"fas fa-cog\"></i>\n              </a>\n            </li> */}\n          </ul>\n        </div>\n      )}\n\n      {/* <!-- Header Ends --> */}\n    </section>\n  );\n};\n\nexport default Navbar;\n","import localforage from \"localforage\";\nimport { CardColumns } from \"react-bootstrap\";\nimport { db, firebase } from \"../services/firebase\";\n\nconst noOfDaysInNormalYear = {\n  \"01\": 31,\n  \"02\": 28,\n  \"03\": 31,\n  \"04\": 30,\n  \"05\": 31,\n  \"06\": 30,\n  \"07\": 31,\n  \"08\": 31,\n  \"09\": 30,\n  10: 31,\n  11: 30,\n  12: 31,\n};\nconst noOfDaysInLeapYear = {\n  \"01\": 31,\n  \"02\": 29,\n  \"03\": 31,\n  \"04\": 30,\n  \"05\": 31,\n  \"06\": 30,\n  \"07\": 31,\n  \"08\": 31,\n  \"09\": 30,\n  10: 31,\n  11: 30,\n  12: 31,\n};\n\n// program to check leap year\nconst checkLeapYear = (year) => {\n  //three conditions to find out the leap year\n  if ((0 === year % 4 && 0 !== year % 100) || 0 === year % 400) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst genrateBillOrder = (order) => {\n  console.log(\"orderdb genbil\", order);\n\n  //local storage code\n};\n\nconst billPaidOrder = (order, type, location, isAdded) => {\n  console.log(\"billPaidOrder\", order, location, type);\n  console.log(\"->\", order.items);\n  let orderType;\n  if (type === \"food\") {\n    orderType = \"FoodOrders\";\n  } else {\n    orderType = \"GroceryOrders\";\n  }\n\n  let daitem = order.items;\n  let its = [];\n  for (let item of daitem) {\n    let updateitem = {\n      itemName: item.Name,\n      itemId: item.id,\n      itemPrice: +item.itemPrice,\n      itemSize: +item.itemSize,\n      noOfQuantity: +item.itemQuantity,\n    };\n    its.push(updateitem);\n  }\n\n  let data;\n\n  if (type === \"food\") {\n    data = {\n      ...order,\n      order_items: its,\n      actualPrice: order.totalPrice,\n      status: \"delivered\",\n    };\n  } else {\n    data = {\n      ...order,\n      order_items: its,\n      actualPrice: order.totalPrice,\n      status: \"delivered\",\n    };\n  }\n  data.timestamp = \"\" + new Date().getTime();\n  const date = new Date();\n  let day = date.getDate();\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n  let month = date.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  // delete items bcs we have order_items\n  // console.log(\"data-updated\", data, `${day}.${month}.${date.getFullYear()}`);\n  delete data.items;\n\n  // let orderRef = [];\n  // let df = orderRef.push(data);\n\n  db.collection(orderType)\n    .doc(\"branch\")\n    .collection(location)\n    .doc(`${day}.${month}.${date.getFullYear()}`)\n    .update({\n      orders: firebase.firestore.FieldValue.arrayUnion(data),\n    })\n    .then(() => {\n      isAdded(true);\n      console.log(\"Dine in Item updated\");\n    })\n    .catch((e) => {\n      // console.log(e, \"errorrrrs\");\n      db.collection(orderType)\n        .doc(\"branch\")\n        .collection(location)\n        .doc(`${day}.${month}.${date.getFullYear()}`)\n        .set({\n          orders: [data],\n        })\n        .then(() => {\n          isAdded(true);\n          console.log(\"Dine in Item created\");\n        })\n        .catch((e) => {\n          // console.log(e);\n          isAdded(false);\n        });\n    });\n};\nconst createDocumentIds = (days, month, year) => {\n  let docIds = [];\n  for (let i = 1; i <= days; i++) {\n    let doc = \"\";\n    if (i < 10) {\n      doc = \"0\" + i + \".\" + month + \".\" + year;\n    } else {\n      doc = i + \".\" + month + \".\" + year;\n    }\n    docIds.push(doc);\n  }\n  return docIds;\n};\n\nconst addTelOrders = (order, type, location, isAdded) => {\n  console.log(\"..............>>\", order, location);\n  console.log(\"->\", order.items, type);\n  let orderType;\n  if (type === \"food\") {\n    orderType = \"FoodOrders\";\n  } else {\n    orderType = \"GroceryOrders\";\n  }\n\n  let daitem = order.items;\n  let its = [];\n  for (let item of daitem) {\n    let updateitem = {\n      itemName: item.Name,\n      itemId: item.id,\n      itemPrice: item.itemPrice,\n      itemSize: item.itemSize,\n      // noOfQuantity: item.itemQuantity\n    };\n    its.push(updateitem);\n  }\n  // console.log(\"itss\", its);\n  let data;\n  if (type === \"food\") {\n    data = {\n      ...order,\n      order_items: its,\n      actualPrice: order.totalPrice,\n      status: \"booked\",\n    };\n  } else {\n    data = {\n      ...order,\n      order_items: its,\n      actualPrice: order.totalPrice,\n      status: \"booked\",\n    };\n  }\n  data.timestamp = \"\" + new Date().getTime();\n  const date = new Date();\n  let day = date.getDate();\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n  let month = date.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  // delete items bcs we have order_items\n  delete data.items;\n  console.log(\"ordersss\", data);\n\n  db.collection(orderType)\n    .doc(\"todayOrders\")\n    .collection(location)\n    .doc(data.id)\n    .set(data)\n    .then((docRef) => {\n      isAdded(true);\n    })\n    .catch((e) => {\n      console.log(e);\n      isAdded(false);\n    });\n};\n\nconst getDeliveredOrders = (type, location, setOrders) => {\n  let ty = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n  } else {\n    ty = \"GroceryOrders\";\n  }\n  let date = new Date();\n  let day = date.getDate();\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n  let month = date.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  let year = date.getFullYear();\n  date = day + \".\" + month + \".\" + year;\n  db.collection(ty)\n    .doc(\"branch\")\n    .collection(location)\n    .doc(date)\n    .get()\n    .then((doc) => {\n      let orders = doc.data().orders;\n      setOrders(orders);\n    })\n    .catch((e) => {\n      console.log(e);\n      setOrders(null);\n    });\n};\n\n// // read all - food & grocery\nconst getOrders = (date, type, location, setOrders) => {\n  // let list = [];\n  let ty = \"\";\n  // let date = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n    // date = \"02.11.2021\";\n  } else {\n    ty = \"GroceryOrders\";\n    // date = \"03.11.2021\";\n  }\n  let datee = new Date();\n  let day = datee.getDate();\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n  let month = datee.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  let year = datee.getFullYear();\n  date = day + \".\" + month + \".\" + year;\n  // console.log(\"date\", date);\n  // let listStat = new Array(10).fill(0);\n  let onlineStat = new Array(10).fill(0);\n  let dineInStat = new Array(10).fill(0);\n  db.collection(ty)\n    .doc(\"branch\")\n    .collection(location)\n    .doc(date)\n    .get()\n    .then((doc) => {\n      let orders = doc.data().orders;\n      // console.log(\"o\", orders);\n      // let monthStat = doc.data().month;\n      let onlineRevenue = 0;\n      let dineInRevenue = 0;\n      // console.log(orders);\n      orders.forEach((o) => {\n        let hour = new Date(parseInt(o.timestamp)).getHours();\n        if (o.type === \"online\") {\n          onlineRevenue += o.totalPrice;\n        } else {\n          dineInRevenue += o.totalPrice;\n        }\n        // console.log(hour);\n        if (hour >= 6 && hour < 8) {\n          if (o.type === \"online\") {\n            onlineStat[0]++;\n          } else {\n            dineInStat[0]++;\n          }\n        } else if (hour >= 8 && hour < 10) {\n          if (o.type === \"online\") {\n            onlineStat[1]++;\n          } else {\n            dineInStat[1]++;\n          }\n        } else if (hour >= 10 && hour < 12) {\n          if (o.type === \"online\") {\n            onlineStat[2]++;\n          } else {\n            dineInStat[2]++;\n          }\n        } else if (hour >= 12 && hour < 14) {\n          if (o.type === \"online\") {\n            onlineStat[3]++;\n          } else {\n            dineInStat[3]++;\n          }\n        } else if (hour >= 14 && hour < 16) {\n          if (o.type === \"online\") {\n            onlineStat[4]++;\n          } else {\n            dineInStat[4]++;\n          }\n        } else if (hour >= 16 && hour < 18) {\n          if (o.type === \"online\") {\n            onlineStat[5]++;\n          } else {\n            dineInStat[5]++;\n          }\n        } else if (hour >= 18 && hour < 20) {\n          if (o.type === \"online\") {\n            onlineStat[6]++;\n          } else {\n            dineInStat[6]++;\n          }\n        } else if (hour >= 20 && hour < 22) {\n          if (o.type === \"online\") {\n            onlineStat[7]++;\n          } else {\n            dineInStat[7]++;\n          }\n        } else if (hour >= 22 && hour < 24) {\n          if (o.type === \"online\") {\n            onlineStat[8]++;\n          } else {\n            dineInStat[8]++;\n          }\n        } else if (hour >= 0 && hour < 6) {\n          if (o.type === \"online\") {\n            onlineStat[9]++;\n          } else {\n            dineInStat[9]++;\n          }\n        }\n      });\n      // monthStat.sort((a, b) =>\n      //   a.monthNo > b.monthNo ? 1 : b.monthNo > a.monthNo ? -1 : 0\n      // );\n      // for (let i = 0; i < monthStat.length; i++) {\n      //   listStat[i] += monthStat[i].noOfOrders;\n      // }\n      // console.log(\"list-data\", listStat);\n      if (orders.length === 0) {\n        setOrders(\"empty\");\n      } else {\n        let listStat = {\n          onlineStat: onlineStat,\n          onlineRevenue: onlineRevenue,\n          dineInStat: dineInStat,\n          dineInRevenue: dineInRevenue,\n        };\n        setOrders(orders, listStat);\n      }\n    })\n    .catch((e) => {\n      let listStat = {\n        onlineStat: 0,\n        onlineRevenue: 0,\n        dineInStat: 0,\n        dineInRevenue: 0,\n      };\n      console.log(\"getFo\", e);\n      setOrders(\"empty\", listStat);\n    });\n};\n\n// get orders for whole month\nconst getMonthOrders = (type, location, filter, setOrders) => {\n  // current month\n  // previous month - differnt year\n  let date = filter.value.split(\"-\");\n  let year = date[0];\n  let month = date[1];\n  let days;\n  let noOfDays;\n\n  let ty = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n    // date = \"02.11.2021\";\n  } else {\n    ty = \"GroceryOrders\";\n    // date = \"03.11.2021\";\n  }\n  let list = [];\n  let listPromises = [];\n  // leap year or not\n  let isLeap = checkLeapYear(parseInt(year));\n  if (isLeap) {\n    days = noOfDaysInNormalYear;\n  } else {\n    days = noOfDaysInLeapYear;\n  }\n  if (new Date().getMonth() + 1 == month) {\n    // current month\n    noOfDays = new Date().getDate();\n  } else {\n    // other month\n    noOfDays = days[month];\n  }\n  let docIds = createDocumentIds(noOfDays, month, year);\n  // console.log(\"docIds\", docIds);\n  docIds.forEach((id) => {\n    listPromises.push(\n      db.collection(ty).doc(\"branch\").collection(location).doc(id).get()\n    );\n  });\n  let listOrders = [];\n  // creating empty arrays\n  // let listStat = new Array(noOfDays).fill(0);\n  let onlineStat = new Array(noOfDays).fill(0);\n  let dineInStat = new Array(noOfDays).fill(0);\n  let onlineRevenue = 0;\n  let dineInRevenue = 0;\n  Promise.all(listPromises)\n    .then((values) => {\n      values.forEach((val) => {\n        // console.log(\"data\", val.data());\n        let data = val.data();\n        list.push(data);\n      });\n    })\n    .then(() => {\n      if (list.length === 0) {\n        setOrders(\"empty\");\n      } else {\n        // console.log(\"else\", list);\n        for (let i = 0; i < list.length; i++) {\n          // console.log(\"list\", list);\n          if (list[i] !== undefined) {\n            let orders = list[i].orders;\n            listOrders = [...listOrders, ...orders];\n            // if(list[i])\n            orders.forEach((o) => {\n              if (o.type === \"online\") {\n                onlineStat[i]++;\n                onlineRevenue += o.totalPrice;\n              } else {\n                dineInStat[i]++;\n                dineInRevenue += o.totalPrice;\n              }\n            });\n          }\n        }\n        // console.log(list);\n        let listStat = {\n          onlineStat: onlineStat,\n          onlineRevenue: onlineRevenue,\n          dineInStat: dineInStat,\n          dineInRevenue: dineInRevenue,\n        };\n        setOrders(listOrders, listStat);\n      }\n    })\n    .catch((e) => {\n      let listStat = {\n        onlineStat: 0,\n        onlineRevenue: 0,\n        dineInStat: 0,\n        dineInRevenue: 0,\n      };\n      setOrders(\"empty\", listStat);\n      console.log(e);\n    });\n};\n\n// get orders for whole year\nconst getYearOrders = (type, location, filter, setOrders) => {\n  let ty = \"\";\n  let date = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n    // date = \"02.11.2021\";\n  } else {\n    ty = \"GroceryOrders\";\n    // date = \"03.11.2021\";\n  }\n\n  let list = [];\n  let listOrders = [];\n  let listStat = [];\n  let listPromises = [];\n  let year = filter.value;\n  let docIds = createDocumentIds(31, \"12\", year);\n  // console.log(\"docIds\", docIds);\n  docIds.forEach((id) => {\n    listPromises.push(\n      db.collection(ty).doc(\"branch\").collection(location).doc(id).get()\n    );\n  });\n\n  Promise.all(listPromises)\n    .then((values) => {\n      values.forEach((val) => {\n        // console.log(\"data\", val.data());\n        let data = val.data();\n        if (data !== undefined) {\n          list.push(data);\n          // let order = val.data().orders;\n          // let statData = val.data().month;\n          // listOrders.push(order);\n          // listStat.push(statData);\n        }\n      });\n    })\n    .then(() => {\n      // console.log(\"list\", list);\n      if (list.length === 0) {\n        setOrders(\"empty\");\n      } else {\n        list.forEach((l) => {\n          listOrders = [...listOrders, ...l.orders];\n        });\n        let monthStat = list[list.length - 1].month;\n        monthStat.sort((a, b) =>\n          a.monthNo > b.monthNo ? 1 : b.monthNo > a.monthNo ? -1 : 0\n        );\n        for (let i = 0; i < monthStat.length; i++) {\n          listStat[i] += monthStat[i].noOfOrders;\n        }\n        // console.log(\"list-data\", listStat);\n        setOrders(listOrders, listStat);\n      }\n    })\n    .catch((e) => console.log(e));\n};\nvar unsubscribe;\n\nconst removeListener = () => {\n  try {\n    if (unsubscribe instanceof Function) {\n      unsubscribe();\n    } else {\n      console.log(\"Not a function\");\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst getTodayOrders = (date, type, location, setOrders) => {\n  let ty = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n    // date = \"02.11.2021\";\n  } else {\n    ty = \"GroceryOrders\";\n    // date = \"03.11.2021\";\n  }\n  let list = [];\n  unsubscribe = db\n    .collection(ty)\n    .doc(\"todayOrders\")\n    .collection(location)\n    .onSnapshot(\n      (docs) => {\n        docs.forEach((doc) => {\n          list.push(doc.data());\n        });\n        setOrders(list);\n        list = [];\n        console.log(\"unsub\", unsubscribe);\n      },\n      (e) => console.log(e)\n    );\n  // db.collection(ty)\n  //   .doc(\"todayOrders\")\n  //   .collection(location)\n  //   .get()\n  //   .then((docs) => {\n  //     docs.forEach((doc) => {\n  //       // console.log(\"doc\", doc.data());\n  //       list.push(doc.data());\n  //     });\n  //     setOrders(list);\n  //   })\n  //   .catch((e) => console.log(e));\n  // db.collection(ty)\n  //   .doc(\"todayOrders\")\n  //   .collection(location)\n  //   .onSnapshot((docs) => {\n  //     docs.forEach((doc) => {\n  //       list.push(doc.data());\n  //     });\n  //     setOrders(list);\n  //     list = [];\n  //   });\n};\n\nconst updateOrderStatus = (type, location, order, status, isUpdated) => {\n  let ty = \"\";\n  if (type === \"food\") {\n    ty = \"FoodOrders\";\n    // date = \"02.11.2021\";\n  } else {\n    ty = \"GroceryOrders\";\n    // date = \"03.11.2021\";\n  }\n\n  // let orderStatus = status;\n  let data = \"\";\n  if (status === \"preparing\") {\n    data = {\n      status: \"preparing\",\n    };\n    db.collection(ty)\n      .doc(\"todayOrders\")\n      .collection(location)\n      .doc(order.id)\n      .update(data)\n      .then(() => {\n        isUpdated(true);\n      })\n      .catch((e) => {\n        console.log(e);\n        isUpdated(false);\n      });\n  } else if (status === \"assigned\") {\n    data = {\n      status: \"assigned\",\n      dBoyId: order.dBoyId,\n    };\n    db.collection(ty)\n      .doc(\"todayOrders\")\n      .collection(location)\n      .doc(order.id)\n      .update(data)\n      .then(() => {\n        db.collection(\"DeliveryUsers\")\n          .doc(\"Branches\")\n          .collection(location)\n          .doc(order.dBoyId)\n          .update({\n            userStatus: \"Assigned\",\n          })\n          .then(() => {\n            isUpdated(true);\n          })\n          .catch((e) => {\n            console.log(e);\n            // isUpdated(false);\n          });\n      })\n      .catch((e) => {\n        console.log(e);\n        isUpdated(false);\n      });\n  }\n  console.log(\"updateOrderStatus\", location, order.id);\n};\n\n// Get Orders Based On Parameters\n// const getOrdersBP = (type, location, setOrders) => {};\n\nexport {\n  getOrders,\n  getTodayOrders,\n  getMonthOrders,\n  getYearOrders,\n  updateOrderStatus,\n  addTelOrders,\n  genrateBillOrder,\n  billPaidOrder,\n  removeListener,\n  getDeliveredOrders,\n};\n\n// const updateOrderStatus = (date, type, location, order, status) => {\n//   console.log(\"updateOrderStatusDB\", order, status);\n//   // if u have listener then no need to get orders again\n//   // now we will get the order and update immedietly\n//   // let list = [];\n//   let ty = \"\";\n//   // let date = \"\";\n//   if (type === \"food\") {\n//     ty = \"FoodOrders\";\n//     date = \"02.11.2021\";\n//   } else {\n//     ty = \"GroceryOrders\";\n//     date = \"03.11.2021\";\n//   }\n//   getTodayOrders(date, type, location, (orders, manualBillNo) => {\n//     if (orders === \"empty\") {\n//       console.log(\"No Items!!!\");\n//     } else {\n//       console.log(\"ordersINDB\", orders, manualBillNo);\n//       let index = orders.findIndex((o) => o.id === order.id);\n//       let updatedOrder = {\n//         ...order,\n//         status: status\n//       };\n//       orders[index] = updatedOrder;\n//       db.collection(ty)\n//         .doc(\"branch\")\n//         .collection(location)\n//         .doc(date)\n//         .update({\n//           orders: orders\n//         })\n//         .then(() => {\n//           console.log(\"successfully updated!!!\");\n//         })\n//         .catch((e) => console.log(e));\n//     }\n//   });\n// };\n\n// const getTodayOrders = (date, type, location, setOrders) => {\n//   // let list = [];\n//   let ty = \"\";\n//   // let date = \"\";\n//   if (type === \"food\") {\n//     ty = \"FoodOrders\";\n//     date = \"02.11.2021\";\n//   } else {\n//     ty = \"GroceryOrders\";\n//     date = \"03.11.2021\";\n//   }\n//   // let date = new Date();\n//   // let day = date.getDate();\n//   // if (day < 10) {\n//   //   day = \"0\" + day;\n//   // }\n//   // let month = date.getMonth() + 1;\n//   // if (month < 10) {\n//   //   month = \"0\" + month;\n//   // }\n//   // let year = date.getFullYear();\n//   // date = day + \".\" + month + \".\" + year;\n//   // console.log(\"date\", date);\n//   db.collection(ty)\n//     .doc(\"branch\")\n//     .collection(location)\n//     .doc(date)\n//     // .get()\n//     // .then((doc) => {\n//     .onSnapshot((doc) => {\n//       let orders = doc.data().orders;\n//       let manualBillingNo = doc.data().manualBillNo;\n//       // console.log(\"o\", orders);\n//       // let monthStat = doc.data().month;\n//       if (orders.length === 0) {\n//         setOrders(\"empty\");\n//       } else {\n//         setOrders(orders, manualBillingNo);\n//       }\n//     });\n//   // .catch((e) => {\n//   //   console.log(\"getFo\", e);\n//   //   setOrders(\"empty\");\n//   // });\n// };\n","import React from \"react\";\n\nimport classes from \"./Card.module.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.Card} ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;\n","// import styled from \"styled-components\";\n\nconst Backdrop = (props) => {\n  // const BackDrop = styled.div`\n  //   position: fixed;\n  //   top: 0;\n  //   left: 0;\n  //   width: 100%;\n  //   height: 100vh;\n  //   z-index: 1000;\n  //   background: rgba(0, 0, 0, 0.75);\n  // `;\n\n  return (\n    <div\n      onClick={props.onClose}\n      style={{\n        position: \"fixed\",\n        top: \"0\",\n        left: \"0\",\n        width: \"100%\",\n        height: \"100vh\",\n        zIndex: \"1000\",\n        background: \"rgba(0, 0, 0, 0.75)\"\n      }}\n    />\n  );\n};\n\nexport default Backdrop;\n// import styled from \"styled-components\";\n\n// const Backdrop = (props) => {\n//   const BackDrop = styled.div`\n//     position: fixed;\n//     top: 0;\n//     left: 0;\n//     width: 100%;\n//     height: 100vh;\n//     z-index: 1000;\n//     background: rgba(0, 0, 0, 0.75);\n//   `;\n\n//   return <BackDrop onClick={props.onClose} />;\n// };\n\n// export default Backdrop;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./DeliveryModal.module.css\";\nimport Card from \"../Card/Card\";\nimport Backdrop from \"../Backdrop\";\n// import $ from \"jquery\";\nimport { getDeliveryUsers } from \"../../api/DeliveryDB\";\nimport AuthContext from \"../../context/auth-context\";\nimport { db } from \"../../services/firebase\";\n\nconst ModalOverlay = (props) => {\n  const [deliveryUsers, setDeliveryUsers] = useState(null);\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    let location = authCtx.user.location;\n    // console.log(\"location\", location);\n    // getDeliveryUsers(location, (users) => {\n    // location = location[0].toUpperCase() + location.substring(1);\n    let list = [];\n    var unsubscribe = db\n      .collection(\"DeliveryUsers\")\n      .doc(\"Branches\")\n      .collection(location)\n      .where(\"verification\", \"==\", \"verified\")\n      .onSnapshot((docs) => {\n        docs.forEach((doc) => {\n          let dUser = {\n            ...doc.data(),\n            currentOrders: [],\n          };\n          props.orders.forEach((order) => {\n            if (dUser.user_id === order.dBoyId) {\n              dUser.currentOrders.push({\n                orderId: order.orderId,\n                address: order.userDetails.userAddress,\n              });\n            }\n          });\n          list.push(dUser);\n        });\n        console.log(\"deli\", list);\n        console.log(\"orders\", props.orders);\n        setDeliveryUsers((prevState) => {\n          return [...list];\n        });\n        list = [];\n      });\n    return () => {\n      unsubscribe();\n    };\n    // });\n  }, [authCtx.user.location]);\n\n  let ui = null;\n  if (deliveryUsers === null) {\n    ui = <p>Loading!!!</p>;\n  } else if (deliveryUsers.length === 0) {\n    ui = <p>No delivery users available!!!</p>;\n  } else {\n    ui = deliveryUsers.map((user) => {\n      let statusUi = null;\n      if (user.userStatus === \"Online\") {\n        statusUi = (\n          <>\n            <p className={styles.status}>\n              {/* <span className={styles.busy}>On Delivery</span> */}\n              <span className={styles.free}>Available</span>\n            </p>\n            <p\n              className={styles.assign}\n              onClick={() => props.assignDeliveryUser(props.order, user)}\n            >\n              {/* <span className={styles.span}>Assign&nbsp;&#10003;</span> */}\n              <span className={styles.span}>Assign&nbsp;&#10003;</span>\n            </p>\n          </>\n        );\n      } else if (user.userStatus === \"Offline\") {\n        statusUi = (\n          <>\n            <p className={styles.status}>\n              <span className={styles.busy}>Offline</span>\n            </p>\n            <p className={styles.assign}>\n              <span className={styles.span}>Offline&nbsp;&#10003;</span>\n            </p>\n          </>\n        );\n      } else if (user.userStatus === \"RideOn\") {\n        statusUi = (\n          <>\n            <p className={styles.status}>\n              <span className={styles.free}>Ride On</span>\n            </p>\n            <p className={styles.assign}>\n              {/* <span className={styles.span}>Ride-On&nbsp;&#10003;</span> */}\n            </p>\n          </>\n        );\n      } else if (user.userStatus === \"Assigned\") {\n        statusUi = (\n          <>\n            <p className={styles.status}>\n              <span className={styles.free}>Assigned</span>\n            </p>\n            {props.order.dBoyId === user.user_id ? (\n              <p className={styles.assign}>\n                <span\n                  className={styles.span1}\n                  title={`This order is already assigned to ${user.user_username}`}\n                  style={{ textDecoration: \"underline\" }}\n                >\n                  Can't Assign\n                </span>\n              </p>\n            ) : (\n              <p\n                className={styles.assign}\n                onClick={() => {\n                  props.assignDeliveryUser(props.order, user);\n                }}\n              >\n                <span className={styles.span}>Re-Assign&nbsp;&#10003;</span>\n              </p>\n            )}\n          </>\n        );\n      }\n      return (\n        <div\n          className={styles.row}\n          style={{ marginBottom: \"5px\" }}\n          key={user.user_id}\n        >\n          <p className={styles.name}>{user.user_username}</p>\n          <p className={styles.no}>{user.user_phone_number}</p>\n          {statusUi}\n          <p className={styles.no} title>\n            {user.currentOrders.length > 0\n              ? user.currentOrders.map((ord, i) => (\n                  <>\n                    <p\n                      title={ord.address}\n                      style={{ textDecoration: \"underline\" }}\n                    >\n                      {ord.orderId}\n                    </p>\n                    {/* {i < user.currentOrders.length - 1 ? \";\" : \"\"} */}\n                  </>\n                ))\n              : \"Empty\"}\n          </p>\n        </div>\n      );\n    });\n  }\n  return (\n    <div class={styles.modal}>\n      <Card>\n        <div className={styles.assignmodal}>\n          <div className={styles.row} style={{ marginBottom: \"10px\" }}>\n            <p className={styles.hname}>Delivery Person</p>\n            <p className={styles.hno}>Mobile Number</p>\n            <p className={styles.hstatus}>Status</p>\n            <p className={styles.hassign}>Assign</p>\n            <p className={styles.hcurrentOrder}>Current Orders</p>\n          </div>\n          {ui}\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nconst DeliveryModal = (props) => {\n  // console.log(\"edit\", props.item);\n  return (\n    <>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.closeModal} />,\n        document.getElementById(\"backdrop-root\")\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay\n          onClose={props.closeModal}\n          // title={props.title}\n          assignDeliveryUser={props.assignDeliveryUser}\n          // updateItem={props.updateItem}\n          order={props.order}\n          orders={props.orders}\n        />,\n        document.getElementById(\"overlay-root\")\n      )}\n    </>\n  );\n};\n\nexport default DeliveryModal;\n","import React, { useEffect, useState } from \"react\";\nimport { getDeliveredOrders } from \"../../api/OrderDB\";\nimport DeliveryModal from \"../../ui/DeliveryModal/DeliveryModal\";\n\nconst OrderMaintain = (props) => {\n  const [assignModal, setAssignModal] = useState(false);\n  const [orders, setOrders] = useState(undefined);\n\n  const deliveryAssignHandler = (order) => {\n    setAssignModal(order);\n  };\n\n  useEffect(() => {\n    if (location.pathname.includes(\"delivered\")) {\n      getDeliveredOrders(props.type, props.location, (orders) => {\n        console.log(\"delvieredOrders\", orders);\n        setOrders(orders);\n      });\n    } else {\n      setOrders(props.orders);\n    }\n  }, [props.orders]);\n\n  return (\n    <>\n      {assignModal && (\n        <DeliveryModal\n          orders={props.orders}\n          order={assignModal}\n          assignDeliveryUser={(order, user) => {\n            props.assignDeliveryUser(order, user);\n            setAssignModal(false);\n          }}\n          closeModal={() => setAssignModal(false)}\n        />\n      )}\n      <div class=\"order-head row\">\n        <p className=\"oid\">Order ID</p>\n        <p className=\"uname\">User Name</p>\n        <p className=\"add\">Address</p>\n        <p className=\"date\">In Time</p>\n        <p className=\"cat\">Category</p>\n        <p className=\"amount\">Amount</p>\n        <p className=\"tq\">Qty</p>\n        <p className=\"tp\">Total Price</p>\n        <p className=\"status\">Status</p>\n      </div>\n      {orders === undefined || orders === null\n        ? \"No Orders\"\n        : orders.map((order) => {\n            let timestamp = new Date(parseInt(order.timestamp));\n            let year = timestamp.getFullYear();\n            let month = timestamp.getMonth() + 1;\n            if (month < 10) {\n              month = \"0\" + month;\n            }\n            let day = timestamp.getDate();\n            if (day < 10) {\n              day = \"0\" + day;\n            }\n            let hours = timestamp.getHours();\n            let mins = timestamp.getMinutes();\n            let timePeriod = \"AM\";\n            if (hours > 12) {\n              timePeriod = \"PM\";\n              hours = hours - 12;\n            }\n            if (hours < 10) {\n              hours = \"0\" + hours;\n            }\n            if (mins < 10) {\n              mins = \"0\" + mins;\n            }\n            return (\n              <details className=\"order-view\" key={order.orderId}>\n                <summary className=\"row\">\n                  <p className=\"oid\">#{order.orderId}</p>\n                  <p className=\"uname\">\n                    {order.userDetails?.userName ||\n                      order.order_address?.userName}\n                  </p>\n                  <p className=\"add\">\n                    {order.userDetails?.userAddress ||\n                      order.order_address?.userAddress}\n                    <br />\n                    Phone:{\" \"}\n                    {order.userDetails?.phone || order.order_address?.phone}\n                  </p>\n                  <p className=\"date\">\n                    {`${day}-${month}-${year}`} {hours}:{mins} {timePeriod}\n                  </p>\n                  <p className=\"cat\">{order.type}</p>\n                  <p className=\"amount\">\n                    {/* {order.payment.isPaid ? \"Paid\" : \"Not Paid\"} */}\n                    {/* <span className=\"paid\"></span> */}\n                    {order.payment.isPaid ? (\n                      <span className=\"paid\">Paid</span>\n                    ) : (\n                      <span className=\"pod\">POD</span>\n                    )}\n                  </p>\n                  <p className=\"tq\">{order.noOfItems}</p>\n                  <p className=\"tp\">\n                    <i class=\"fas fa-rupee\"></i>\n                    {order.totalPrice}\n                  </p>\n                  <p className=\"status\">\n                    {/* <span className=\"new\"> */}\n                    {order.status === \"booked\" ? (\n                      <span className=\"new\">NewOrder</span>\n                    ) : order.status === \"preparing\" ? (\n                      <span className=\"prepare\">Preparing</span>\n                    ) : order.status === \"assigned\" ? (\n                      <span className=\"ready\">Assigned</span>\n                    ) : order.status === \"accepted\" ? (\n                      <span className=\"ready\">Accepted</span>\n                    ) : order.status === \"rideon\" ? (\n                      <span className=\"ready\">On-Delivery</span>\n                    ) : order.status === \"delivered\" ? (\n                      <span className=\"delivered\">Delivered</span>\n                    ) : order.status === \"rejected\" ? (\n                      <span className=\"cancelled\">Rejected</span>\n                    ) : (\n                      <span className=\"cancelled\">Cancelled</span>\n                    )}\n                    {/* </span> */}\n                    {/* <span className=\"prepare\">Preparing</span> */}\n                    {/* <span className=\"ready\">New Order</span>\n            <span className=\"delivered\">New Order</span> */}\n                  </p>\n                </summary>\n                <div className=\"details row\">\n                  {order.order_items?.map((item) => {\n                    return (\n                      <p key={item.itemId} className=\"item\">\n                        {item.itemName} x {item.itemSize}\n                      </p>\n                    );\n                  })}\n\n                  {order.status === \"booked\" ? (\n                    <button\n                      className=\"btn btn-dark\"\n                      type=\"button\"\n                      onClick={() =>\n                        props.updateOrderStatus(order, \"preparing\")\n                      }\n                    >\n                      Preparing\n                    </button>\n                  ) : order.status === \"preparing\" ? (\n                    <>\n                      <button\n                        className=\"btn btn-dark\"\n                        type=\"button\"\n                        onClick={() => deliveryAssignHandler(order)}\n                      >\n                        Ready To Deliver\n                      </button>\n                    </>\n                  ) : order.status === \"assigned\" ||\n                    order.status === \"accepted\" ||\n                    order.status === \"rejected\" ? (\n                    <>\n                      <button\n                        className=\"btn btn-dark\"\n                        type=\"button\"\n                        onClick={() => deliveryAssignHandler(order)}\n                      >\n                        Re-Assign Delivery Boy\n                      </button>\n                    </>\n                  ) : order.status === \"rideon\" ? (\n                    <>\n                      <button\n                        className=\"btn btn-dark\"\n                        type=\"button\"\n                        onClick={() => deliveryAssignHandler(order)}\n                      >\n                        Re-Assign Delivery Boy\n                      </button>\n                    </>\n                  ) : order.status === \"delivered\" ? (\n                    <span className=\"delivered\">Delivered</span>\n                  ) : (\n                    <span className=\"cancelled\">Cancelled</span>\n                  )}\n\n                  {/* <button type=\"button\" onClick={() => acceptHandler()}>\n                    Accept\n                  </button>\n                  <button type=\"button\" onClick={() => cancelHandler()}>\n                    Cancel\n                  </button> */}\n                  {/* <p className=\"cancel\">Cancel</p> */}\n                  {/* <p className=\"deliverydetails\">Akhil,&nbsp;8072711781</p> */}\n                </div>\n              </details>\n            );\n          })}\n    </>\n  );\n};\n\nexport default OrderMaintain;\n","import { db, firebase } from \"../services/firebase\";\n\nconst getItem = (title, type, itemId, location, addOutOfStock) => {\n  // console.log(\"ItemDB\", title);\n  // let list = [];\n  db.collection(type)\n    .doc(type + \"_Types\")\n    .collection(title) // BreakFast, PersonalCare\n    .doc(itemId)\n    .get()\n    .then((doc) => {\n      let item = doc.data();\n      console.log(\"itemm\", item, location);\n      if (item.branch[location].unit <= item.branch[location].minimumUnit) {\n        addOutOfStock(item);\n      } else {\n        addOutOfStock(null);\n      }\n    })\n    .catch((e) => console.log(\"getItem()\", e));\n};\n\nconst setItem = (title, type, item, location, addOutOfStock) => {\n  console.log(\"item\", item, title, type, location);\n  let data = {\n    ...item,\n  };\n  // let data = {\n  //   [location]: {\n  //     ...item[location],\n  //     unit: parseInt(item[location].unit),\n  //   },\n  // };\n  data.branch[location] = {\n    ...item.branch[location],\n    unit: parseInt(item.branch[location].unit),\n  };\n  if (type === \"Food\") {\n    if (item.Type === \"Breakfast\") {\n      title = \"BreakFast\";\n    } else if (item.Type === \"Lunch\") {\n      title = \"Lunch\";\n    } else if (item.Type === \"Dinner\") {\n      title = \"Dinner\";\n    }\n  } else {\n    if (item.Type === \"Rice\") {\n      title = \"Rice\";\n    } else if (item.Type === \"Fruits_Vegetables\") {\n      title = \"Fruits_Vegetables\";\n    } else if (item.Type === \"Summer_Drinks_Beverage\") {\n      title = \"Summer_Drinks_Beverage\";\n    } else if (item.Type === \"soaps\") {\n      title = \"soaps\";\n    } else if (item.Type === \"Pharmacy\") {\n      title = \"Pharmacy\";\n    } else if (item.Type === \"Organics\") {\n      title = \"Organics\";\n    }\n  }\n  db.collection(type)\n    .doc(type + \"_Types\")\n    .collection(title) // BreakFast, PersonalCare\n    .doc(item.id)\n    .update(data)\n    .then(() => {\n      console.log(\"success\");\n      addOutOfStock(true);\n    })\n    .catch((e) => {\n      console.log(\"setItem()\", e);\n      addOutOfStock(false);\n    });\n};\n\n// read all - food & grocery\nconst getItems = (title, type, setItems) => {\n  console.log(\"ItemDB\", title, type);\n  let list = [];\n  db.collection(type)\n    .doc(type + \"_Types\")\n    .collection(title) // BreakFast, PersonalCare\n    .get()\n    .then((docs) => {\n      docs.forEach((doc) => {\n        let item = doc.data();\n        item.id = doc.id;\n        list.push(item);\n      });\n    })\n    .then(() => {\n      setItems(list);\n    })\n    .catch((e) => console.log(\"getItems()\", e));\n};\n\n// get multi title items\nconst getMultiTitleItems = (titles, type, setItems) => {\n  // let titles = [...title];\n  let list = [];\n  let listPromises = [];\n  titles.forEach((tit) => {\n    console.log(\"tit\", tit, type);\n    listPromises.push(\n      db\n        .collection(type)\n        .doc(type + \"_Types\")\n        .collection(tit) // BreakFast, PersonalCare\n        .get()\n    );\n  });\n  Promise.all(listPromises)\n    .then((value) => {\n      // console.log(\"res\", value);\n      value.forEach((val) => {\n        val.forEach((res) => {\n          list.push(res.data());\n        });\n      });\n      return list;\n    })\n    .then((data) => {\n      console.log(\"2nd then\", data);\n      setItems(data);\n    })\n    .catch((e) => console.log(e));\n};\n\n// add item - food & grocery\nconst addItem = (item, price, type, authCtx, isAdded) => {\n  console.log(\"item\", item, type, price);\n  let title = \"\";\n  let priceData = \"\";\n  if (type === \"Food\") {\n    if (item.category === \"BreakFast\") {\n      title = \"BreakFast\";\n    } else if (item.category === \"Lunch\") {\n      title = \"Lunch\";\n    } else if (item.category === \"Dinner\") {\n      title = \"Dinner\";\n    }\n  } else {\n    if (item.category === \"Fruits_Vegetables\") {\n      title = \"Fruits_Vegetables\";\n    } else if (item.category === \"Rice\") {\n      title = \"Rice\";\n    } else if (item.category === \"Summer_Drinks_Beverages\") {\n      title = \"Summer_Drinks_Beverages\";\n    } else if (item.category === \"soaps\") {\n      title = \"soaps\";\n    } else if (item.category === \"Pharmacy\") {\n      title = \"Pharmacy\";\n    } else if (item.category === \"Organics\") {\n      title = \"Organics\";\n    }\n  }\n\n  let bucketName = type === \"Food\" ? \"Foods\" : \"Grocery\";\n  let storageRef = firebase.storage().ref();\n  let subCategoryTimestamp = +new Date().getTime() + \"-\" + item.img.file.name;\n  let imgRef = storageRef.child(`${bucketName}/${subCategoryTimestamp}`);\n  // console.log(\"submit\", subCategoryTimestamp, priceData);\n  imgRef.put(item.img.file).then(() => {\n    imgRef\n      .getDownloadURL()\n      .then((img) => {\n        let nameSearch = createNameSearchArray(item.name);\n        let data = \"\";\n        data = {\n          Bestseller: true,\n          Name: item.name,\n          Type: item.category,\n          actual_price: 0,\n          branch: {},\n          categories: [],\n          currency: \"\",\n          current_price: +item.currentPrice,\n          dealoftheday: item.dealOfTheDay,\n          description: item.desc,\n          image: img,\n          isproductavailable: item.isProductAvailable,\n          product_id: item.productId,\n          quantityPerUnit: 1,\n          shop_name: \"Thalaivar\",\n          unit: \"1\",\n          name_search: [...nameSearch],\n        };\n        data.branch[authCtx.user.location] = {\n          Bestseller: item.bestSeller,\n          BranchName: authCtx.user.location,\n          current_price: +item.currentPrice,\n          dealoftheday: item.dealOfTheDay,\n          unit: parseInt(item.actualUnit),\n        };\n\n        db.collection(type)\n          .doc(type + \"_Types\")\n          .collection(title)\n          .add(data)\n          .then((docRef) => {\n            console.log(\"docRef\", docRef);\n            db.collection(type)\n              .doc(type + \"_Types\")\n              .collection(title)\n              .doc(docRef.id)\n              .update({\n                id: docRef.id,\n              })\n              .then(() => {\n                isAdded(true);\n                console.log(\"Item added\");\n              })\n              .catch((e) => {\n                isAdded(false);\n                console.log(e);\n              });\n          })\n          .catch((e) => {\n            console.log(e);\n            isAdded(false);\n          });\n      })\n      .catch((e) => {\n        console.log(e);\n        isAdded(false);\n      });\n  });\n};\n\n// update item - food & grocery\nconst updateItem = (\n  item,\n  price,\n  quantity,\n  title,\n  type,\n  location,\n  isUpdated\n) => {\n  // console.log(\"--\", item, price, quantity, title, type, location);\n  // create name search\n  let nameSearch = createNameSearchArray(item.Name);\n  // without image\n  if (item.img === undefined) {\n    console.log(\"item.img-undefined\", item);\n    let data = {\n      ...item,\n      Name: item.Name,\n      description: item.description,\n      // category: item.category,\n      Type: item.Type,\n      // [location]: {\n      //   isproductavailable: item[location].isproductavailable,\n      //   Bestseller: item[location].Bestseller,\n      //   dealoftheday: item[location].dealoftheday,\n      //   unit: parseInt(item[location].unit),\n      //   minimumUnit: parseInt(item[location].minimumUnit),\n      //   quantityPerUnit: parseInt(item[location].quantityPerUnit),\n      //   price: priceData,\n      // },\n      name_search: [...nameSearch],\n    };\n    data.branch[location] = {\n      Bestseller: item.branch[location].Bestseller,\n      BranchName: location,\n      current_price: +item.branch[location].current_price,\n      dealoftheday: item.branch[location].dealoftheday,\n      unit: +item.branch[location].unit,\n    };\n    // if (type === \"Food\") {\n    //   data = {\n    //     ...data,\n    //     style: item.style,\n    //   };\n    // }\n    // // console.log(\"data\", data);\n    db.collection(type)\n      .doc(type + \"_Types\")\n      .collection(title)\n      .doc(item.id)\n      .update(data)\n      .then(() => {\n        let updatedData = {\n          ...data,\n          id: item.id,\n          image: item.image,\n          currency: item.currency,\n        };\n        isUpdated(updatedData);\n      })\n      .catch((e) => {\n        isUpdated(false);\n        console.log(\"updateItem()\", e);\n      });\n  } else {\n    console.log(\"item.img\", item.img.name, item.img, item.img.file);\n    // image\n    let bucketName = type === \"Food\" ? \"Foods\" : \"Grocery\";\n    let storageRef = firebase.storage().ref();\n    let subCategoryTimestamp = +new Date().getTime() + \"-\" + item.img.name;\n    let imgRef = storageRef.child(`${bucketName}/${subCategoryTimestamp}`);\n    // console.log(\"submit\", subCategoryTimestamp, priceData);\n    imgRef\n      .put(item.img)\n      .then(() => {\n        console.log(\"img ref put...\");\n        imgRef\n          .getDownloadURL()\n          .then((img) => {\n            let data = {\n              ...item,\n              Name: item.Name,\n              image: img,\n              description: item.description,\n              Type: item.Type,\n              name_search: [...nameSearch],\n            };\n            data.branch[location] = {\n              Bestseller: item.branch[location].Bestseller,\n              BranchName: location,\n              current_price: +item.branch[location].current_price,\n              dealoftheday: item.branch[location].dealoftheday,\n              unit: +item.branch[location].unit,\n            };\n            delete data.img;\n            // console.log(\"img\", img, data);\n\n            db.collection(type)\n              .doc(type + \"_Types\")\n              .collection(title)\n              .doc(item.id)\n              .update({\n                ...data,\n              })\n              .then(() => {\n                isUpdated(data);\n                // delete previous image from storage\n                let storaRef = firebase.storage();\n                storaRef\n                  .refFromURL(item.image)\n                  .delete()\n                  .then(() =>\n                    console.log(\"image deleted successfullty, MyBin.js[284]\")\n                  )\n                  .catch((e) => console.log(e, \"already deleted\"));\n              })\n              .catch((e) => {\n                isUpdated(false);\n                console.log(\"updateItem()\", e);\n              });\n          })\n          .catch((e) => {\n            console.log(\"img update\", e);\n            isUpdated(false);\n          });\n      })\n      .catch((e) => {\n        isUpdated(false);\n        console.log(\"put image\", e);\n      });\n  }\n};\n\nconst createNameSearchArray = (name) => {\n  let pName = name.toLowerCase();\n  let list = [];\n  let sum = \"\";\n  for (let i = 0; i < pName.length; i++) {\n    sum += pName[i];\n    list.push(sum);\n  }\n  return list;\n};\n\n// delete item - food & grocery\nconst deleteItem = (item, title, type, isDeleted) => {\n  db.collection(type)\n    .doc(type + \"_Types\")\n    .collection(title)\n    .doc(item.id)\n    .delete()\n    .then(() => {\n      console.log(\"successfully deleted\");\n      firebase\n        .storage()\n        .refFromURL(item.image)\n        .delete()\n        .then(() => {\n          console.log(\"image deleted successfullty from firebase storage\");\n          isDeleted(true);\n        })\n        .catch((e) => {\n          console.log(e);\n          isDeleted(false);\n        });\n    })\n    .catch((e) => {\n      console.log(\"deleteItem()\", e);\n      isDeleted(false);\n    });\n};\n\nexport {\n  setItem,\n  getItem,\n  getItems,\n  addItem,\n  deleteItem,\n  updateItem,\n  getMultiTitleItems,\n};\n","import localforage from \"localforage\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { getMultiTitleItems } from \"../../api/ItemDB\";\nimport {\n  addTelOrders,\n  genrateBillOrder,\n  billPaidOrder,\n} from \"../../api/OrderDB\";\nimport AuthContext from \"../../context/auth-context\";\n\nconst ManualBilling = (props) => {\n  const authCtx = useContext(AuthContext);\n  const [manual, setManual] = useState(null);\n  const [generate, setGenerate] = useState(null);\n  useEffect(() => {\n    let titles = [\"BreakFast\", \"Lunch\", \"Dinner\"];\n    // let titles = [\"Lunch\", \"Dinner\"];\n    console.log(\"type\", props.type);\n    let type = \"Food\";\n    if (props.type !== \"food\") {\n      type = \"Grocery\";\n      titles = [\n        \"Fruits_Vegetables\",\n        \"Rice\",\n        \"Summer_Drinks_Beverages\",\n        \"soaps\",\n      ];\n    }\n    getMultiTitleItems(titles, type, (res) => {\n      let list = [];\n      res.forEach((item) => {\n        item.branch[props.location] !== undefined && list.push(item);\n      });\n      props.setItems(list);\n    });\n  }, [props.type]);\n\n  const onChangeHandler = (event) => {\n    let name = event.target.name;\n    let value = event.target.value;\n    if (name === \"manual\") {\n      setManual(value);\n      console.log(value);\n    } else if (name === \"gennbill\") {\n      setGenerate(value);\n    }\n  };\n\n  const addteleorder = () => {\n    addTelOrders(props.currentOrder, props.type, props.location, (isAdded) => {\n      if (isAdded) {\n        // db added\n        window.alert(\"Successfully Added!!!\");\n        removeOrder(props.currentOrder.orderId, props.type);\n      } else {\n        // error not adding\n        window.alert(\"Not Added... Try Again!!!\");\n      }\n    });\n  };\n\n  const generateBill = () => {\n    // console.log(\"hjlllll\");\n    // setGenerate(\"gennbill\");\n    // genrateBillOrder(props.currentOrder);\n    props.generateBill();\n    // if (props.type === \"food\") {\n    // let foodOrderList = [];\n    // localforage\n    //   .getItem(\"food-order\")\n    //   .then((value) => {\n    //     console.log(\"fOrde\", value);\n    //     if (value === null) {\n    //       // new order\n    //     }\n    //   })\n    //   .catch((e) => console.log(e));\n    // }\n    // localforage.setItem(\"food-order\", props.currentOrder);\n  };\n\n  const removeOrder = (orderId, type) => {\n    props.removeOrder(orderId, type);\n  };\n\n  const paidOrders = () => {\n    // console.log(\"hjlllll\");\n    billPaidOrder(props.currentOrder, props.type, props.location, (isAdded) => {\n      if (isAdded) {\n        window.alert(\"Successfully Added to local store!!!\");\n      } else {\n        // error not adding\n        window.alert(\"Not Added... Try Again!!!\");\n      }\n    });\n  };\n\n  return (\n    <div className=\"manual row\">\n      <div>\n        <input\n          type=\"radio\"\n          id=\"dineIn\"\n          name=\"manual\"\n          value=\"dineIn\"\n          onChange={onChangeHandler}\n        />\n        <label htmlFor=\"dineIn\">&nbsp;Dine-In</label>\n      </div>\n      <div style={{ marginRight: \"auto\", padding: \"0 5px\" }}>\n        <input\n          type=\"radio\"\n          id=\"telephone\"\n          name=\"manual\"\n          value=\"telephone\"\n          onChange={onChangeHandler}\n        />\n        <label htmlFor=\"telephone\">&nbsp;Telephone order</label>\n      </div>\n      <div className=\"col-12\"></div>\n\n      <div className=\"billno\">\n        <button\n          type=\"button\"\n          className=\"add\"\n          onClick={() => props.createOrder(manual)}\n          disabled={!manual}\n        >\n          New Order <b>+</b>\n        </button>\n        <h4>Ongoing Bills</h4>\n        <div className=\"scroll\">\n          {props.ongoingOrders.map((order) => {\n            return (\n              <div\n                key={order.orderId}\n                className=\"card\"\n                style={{ cursor: \"pointer\" }}\n                onClick={() => props.setCurrentOrder(order)}\n              >\n                <p className=\"bno\">{order.orderId}</p>\n                <p className=\"number\">{order.userDetails.phone}</p>\n                <p className=\"tq\">{order.noOfItems}</p>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"billdetails\">\n        <div\n          className=\"row\"\n          style={{ justifyContent: \"space-between\", alignItems: \"center\" }}\n        >\n          {/* {console.log(props.currentOrder)} */}\n          <p className=\"bno\">{props.currentOrder.orderId}</p>\n          <p className=\"text\">Bill Details</p>\n          {props.ongoingOrders.length > 0 && props.currentOrder.orderId !== \"\" && (\n            <>\n              <input\n                list=\"searchItem\"\n                name=\"searchItems\"\n                id=\"searchItems\"\n                autoComplete=\"off\"\n                placeholder=\"Type to search...\"\n                onChange={props.onChange}\n                style={{ outline: \"0\", cursor: \"pointer\" }}\n              />\n              <datalist id=\"searchItem\">\n                {props.items.map((item) => {\n                  return <option key={item.id} value={item.Name} />;\n                })}\n              </datalist>\n            </>\n          )}\n        </div>\n        <div className=\"row head\">\n          <p className=\"iname\">Item Name</p>\n          <p className=\"ino\">Item Size</p>\n          <p className=\"quantity\">Quantity</p>\n          <p className=\"rate\">Rate</p>\n          <p className=\"price\">Price</p>\n        </div>\n        <div className=\"scroll\">\n          {props.currentOrder.items.map((item, i) => {\n            let priceUi = (\n              <>\n                <p className=\"ino\">{item.itemQuantity}</p>\n                <input\n                  name=\"itemSize\"\n                  type=\"number\"\n                  className=\"quantity\"\n                  placeholder=\"0\"\n                  min=\"0\"\n                  value={item.itemSize}\n                  onChange={(e) => props.onChange(e, item)}\n                />\n                <p className=\"rate\">{item.itemPrice}</p>\n              </>\n            );\n            if (\n              // item.branch[props.location].actualPrice === -1 &&\n              item.branch[props.location].current_price === -1 &&\n              item.branch[props.location].length === undefined\n            ) {\n              priceUi = (\n                <>\n                  <p className=\"ino\">\n                    <select\n                      className=\"itemId\"\n                      name=\"itemQuantity\"\n                      value={item.itemQuantity}\n                      onChange={(e) => props.onChange(e, item)}\n                    >\n                      <option value=\"quarter\">Quarter</option>\n                      <option value=\"half\">Half</option>\n                      <option value=\"full\">Full</option>\n                    </select>\n                  </p>\n                  <input\n                    name=\"itemSize\"\n                    type=\"number\"\n                    className=\"quantity\"\n                    placeholder=\"0\"\n                    min=\"0\"\n                    value={item.itemSize}\n                    onChange={(e) => props.onChange(e, item)}\n                  />\n                  <p className=\"rate\">{item.itemPrice}</p>\n                </>\n              );\n            } else if (item.branch[props.location].length >= 0) {\n              priceUi = (\n                <>\n                  <p className=\"ino\">\n                    <select\n                      className=\"itemId\"\n                      name=\"itemQuantity\"\n                      value={item.itemQuantity}\n                      onChange={(e) => props.onChange(e, item)}\n                    >\n                      <option value=\"grams\">Grams</option>\n                      <option value=\"kilograms\">KiloGrams</option>\n                      <option value=\"litres\">Litres</option>\n                      <option value=\"kilolitres\">KiloLitres</option>\n                    </select>\n                  </p>\n                  <input\n                    name=\"itemSize\"\n                    type=\"number\"\n                    className=\"quantity\"\n                    placeholder=\"0\"\n                    min=\"0\"\n                    value={item.itemSize}\n                    onChange={(e) => props.onChange(e, item)}\n                  />\n                  <p className=\"rate\">{item.itemPrice}</p>\n                </>\n              );\n            }\n            return (\n              <div className=\"row item\" key={item.id}>\n                <p name=\"itemName\" className=\"iname\">\n                  {item.Name}\n                </p>\n                {priceUi}\n                {/* {console.log(\"itemsss\", item)} */}\n                <p className=\"price\">{item.itemSize * item.itemPrice}</p>\n                <i\n                  class=\"fa fa-minus-circle remove-item\"\n                  aria-hidden=\"true\"\n                  onClick={() => props.removeItem(item.id)}\n                ></i>\n              </div>\n            );\n          })}\n          {/* <div className=\"row item\">\n            <p className=\"ino\">243</p>\n            <input\n              type=\"text\"\n              className=\"iname\"\n              placeholder=\"Chicken Briyani\"\n            />\n            <input type=\"number\" className=\"quantity\" placeholder=\"0\" />\n            <p className=\"rate\">120</p>\n            <p className=\"price\">240</p>\n          </div> */}\n        </div>\n        {/* <button type=\"button\" className=\"add\">\n          +\n        </button> */}\n        <div className=\"footer row\">\n          <p className=\"iname\">Total</p>\n          <p className=\"quantity\">{props.currentOrder.noOfItems}</p>\n          <p className=\"rate\">=</p>\n          <p className=\"price\">{props.currentOrder.totalPrice}</p>\n        </div>\n      </div>\n      {props.currentOrder.type === \"dinein\" ? (\n        <>\n          <div className=\"billgenerate\">\n            <h4>Bill Status</h4>\n            <p className=\"bno\">\n              Order-Id:&ensp;<b>{props.currentOrder.orderId}</b>\n            </p>\n            <p className=\"number\">\n              Name:&ensp;\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={props.currentOrder.userDetails.userName}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"number\">\n              Phone:&ensp;\n              <input\n                type=\"tel\"\n                name=\"phone\"\n                size=\"15\"\n                value={props.currentOrder.userDetails.phone}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"address\">\n              Address:&ensp;\n              <textarea\n                name=\"address\"\n                size=\"15\"\n                value={props.currentOrder.userDetails.userAddress}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"tq\">\n              Total Quantity:&ensp;<b>{props.currentOrder.noOfItems}</b>\n            </p>\n            <p className=\"tp\">\n              Total Price:&ensp;<i className=\"fas fa-rupee\"></i>\n              <b>{props.currentOrder.totalPrice}</b>\n            </p>\n            <p className=\"tq\">\n              Mode Of\n              <br />\n              Payment:&ensp;\n              <select\n                name=\"paymentMode\"\n                value={props.currentOrder.payment.paymentMethod}\n                onChange={props.onChange}\n              >\n                <option value=\"cash\">Cash</option>\n                <option value=\"debit/credit\">Debit/Credit</option>\n                <option value=\"phonepe\">Phone-Pe</option>\n                <option value=\"gpay\">GPay</option>\n              </select>\n            </p>\n\n            {generate === \"gennbill\" ? (\n              <>\n                <button type=\"button\" value=\"paid\" onClick={paidOrders}>\n                  Paid\n                </button>\n              </>\n            ) : (\n              <>\n                <button\n                  type=\"button\"\n                  name=\"gennbill\"\n                  value=\"gennbill\"\n                  onClick={generateBill}\n                >\n                  Generate Bill\n                </button>\n                <br />\n                <button\n                  type=\"button\"\n                  name=\"gennbill\"\n                  value=\"gennbill\"\n                  onClick={() =>\n                    removeOrder(props.currentOrder.orderId, props.type)\n                  }\n                >\n                  Remove Order\n                </button>\n              </>\n            )}\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"billgenerate\">\n            <h4>Adding telephone orders</h4>\n            <p className=\"bno\">\n              Order-Id:&ensp;<b>{props.currentOrder.orderId}</b>\n            </p>\n            <p className=\"number\">\n              Name:&ensp;\n              <input\n                type=\"text\"\n                name=\"username\"\n                size=\"15\"\n                value={props.currentOrder.userDetails.userName}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"number\">\n              Phone:&ensp;\n              <input\n                type=\"tel\"\n                name=\"phone\"\n                size=\"15\"\n                value={props.currentOrder.userDetails.phone}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"address\">\n              Address:&ensp;\n              <textarea\n                name=\"address\"\n                size=\"15\"\n                value={props.currentOrder.userDetails.userAddress}\n                onChange={props.onChange}\n              />\n            </p>\n            <p className=\"tq\">\n              Total Quantity:&ensp;<b>{props.currentOrder.noOfItems}</b>\n            </p>\n            <p className=\"tp\">\n              Total Price:&ensp;<i className=\"fas fa-rupee\"></i>\n              <b>{props.currentOrder.totalPrice}</b>\n            </p>\n            <p className=\"tq\">\n              Mode Of\n              <br />\n              Payment:&ensp;\n              <select\n                name=\"paymentMode\"\n                value={props.currentOrder.payment.paymentMethod}\n                onChange={props.onChange}\n              >\n                <option value=\"cash\">Cash</option>\n                <option value=\"debit/credit\">Debit/Credit</option>\n                <option value=\"phonepe\">Phone-Pe</option>\n                <option value=\"gpay\">GPay</option>\n              </select>\n            </p>\n            <button type=\"button\" onClick={addteleorder}>\n              Move to preparing\n            </button>\n            <br />\n            <button\n              type=\"button\"\n              name=\"gennbill\"\n              value=\"gennbill\"\n              onClick={() =>\n                removeOrder(props.currentOrder.orderId, props.type)\n              }\n            >\n              Remove Order\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ManualBilling;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Switch, Route, NavLink, useHistory } from \"react-router-dom\";\n// import Orders from \"../components/Dashboard/Orders\";\nimport StockMaintainance from \"../components/Dashboard/StockMaintainance\";\nimport OrderMaintain from \"../components/Dashboard/OrderMaintain\";\nimport ManualBilling from \"../components/Manual/ManualBilling\";\nimport {\n  billPaidOrder,\n  getTodayOrders,\n  removeListener,\n  updateOrderStatus,\n} from \"../api/OrderDB\";\nimport AuthContext from \"../context/auth-context\";\n// import snackbarLink from \"../ui/Snackbar/SnackbarLink\";\nimport OrdersContext from \"../context/orders-context\";\n// import { onMessageListener, messaging } from \"../services/firebase\";\nimport { store } from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport \"animate.css/animate.min.css\";\nimport { getItem, getMultiTitleItems, setItem } from \"../api/ItemDB\";\nimport localForage from \"localforage\";\nimport localforage from \"localforage\";\nimport { db } from \"../services/firebase\";\n// import GUN from \"gun\";\n\nconst Dashboard = (props) => {\n  // const gun = GUN();\n  const authCtx = useContext(AuthContext);\n  const ordersContext = useContext(OrdersContext);\n  // const history = useHistory();\n  const [items, setItems] = useState([]);\n  const [type, setType] = useState(\"food\");\n  const [orders, setOrders] = useState({\n    allOrders: [],\n    newOrders: [],\n    preparingOrders: [],\n    onDeliveryOrders: [],\n    deliveredOrders: [],\n  });\n  const [outOfStockItems, setOutOfStockItems] = useState({\n    food: [],\n    grocery: [],\n  });\n  // for manual orders\n  const [manualBillNo, setManualBillNo] = useState({\n    telephoneBillNoFood: 0,\n    telephoneBillNoGrocery: 0,\n    manualBillNoFood: 0,\n    manualBillNoGrocery: 0,\n  });\n  const [ongoingOrders, setOngoingOrders] = useState({\n    food: [],\n    grocery: [],\n  });\n  const [currentOrder, setCurrentOrder] = useState({\n    food: {\n      actualPrice: 0,\n      cancelReason: \"\",\n      dBoyId: \"\",\n      deliveryCharge: 0,\n      discount: 0,\n      id: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      noOfItems: 0,\n      orderId: \"\",\n      items: [],\n      payment: {\n        isPaid: false,\n        paymentMethod: \"\",\n      },\n      status: \"\",\n      timestamp: \"\",\n      totalPrice: 0,\n      tax: 0,\n      type: \"dinein\",\n      userDetails: {\n        latitude: 0,\n        longitude: 0,\n        phone: \"\",\n        userAddress: \"\",\n        userId: \"\",\n        userName: \"\",\n      },\n      userid: \"\",\n    },\n    grocery: {\n      actualPrice: 0,\n      cancelReason: \"\",\n      dBoyId: \"\",\n      deliveryCharge: 0,\n      discount: 0,\n      id: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      noOfItems: 0,\n      orderId: \"\",\n      items: [],\n      payment: {\n        isPaid: false,\n        paymentMethod: \"\",\n      },\n      status: \"\",\n      timestamp: \"\",\n      totalPrice: 0,\n      tax: 0,\n      type: \"dinein\",\n      userDetails: {\n        latitude: 0,\n        longitude: 0,\n        phone: \"\",\n        userAddress: \"\",\n        userId: \"\",\n        userName: \"\",\n      },\n      userid: \"\",\n    },\n  });\n\n  navigator.serviceWorker.onmessage = (event) => {\n    // console.log(\"front\", event.data, event.data.messageType);\n    // console.log(\"front-history\", history.location);\n    let notification = event.data.notification;\n    let data = event.data.data;\n    if (data.type === \"food\") {\n      localForage\n        .getItem(\"outOfStockFood\")\n        .then((value) => {\n          if (value === null || value.length === 0) {\n            getItem(\n              data.category,\n              data.type,\n              data.orderId,\n              authCtx.user.location,\n              (item) => {\n                if (item === null) {\n                  console.log(\"In Stock\");\n                } else {\n                  console.log(\"Out Of Stock\");\n                  // add data local db\n                  setOutOfStockItems((prevState) => {\n                    let list = [...prevState.food, item];\n                    localForage.setItem(\"outOfStockFood\", list);\n                    return {\n                      ...prevState,\n                      food: list,\n                    };\n                  });\n                }\n              }\n            );\n          } else {\n            let index = value.findIndex((v) => {\n              return v.id === data.orderId;\n            });\n            if (index === -1) {\n              // if item is not there already\n              getItem(\n                data.category,\n                data.type,\n                data.orderId,\n                authCtx.user.location,\n                (item) => {\n                  if (item === null) {\n                    console.log(\"In Stock\");\n                  } else {\n                    console.log(\"Out Of Stock\");\n                    // add data local db\n                    setOutOfStockItems((prevState) => {\n                      let list = [...prevState.food, item];\n                      localForage.setItem(\"outOfStockFood\", list);\n                      return {\n                        ...prevState,\n                        food: list,\n                      };\n                    });\n                  }\n                }\n              );\n            }\n          }\n        })\n        .catch((e) => console.log(e));\n    } else {\n      localForage\n        .getItem(\"outOfStockGrocery\")\n        .then((value) => {\n          if (value === null) {\n            getItem(\n              data.category,\n              data.type,\n              data.orderId,\n              authCtx.user.location,\n              (item) => {\n                if (item === null) {\n                  console.log(\"In Stock\");\n                } else {\n                  console.log(\"Out Of Stock\");\n                  // add data local db\n                  setOutOfStockItems((prevState) => {\n                    let list = [...prevState.grocery, item];\n                    localForage.setItem(\"outOfStockGrocery\", list);\n                    return {\n                      ...prevState,\n                      grocery: list,\n                    };\n                  });\n                }\n              }\n            );\n          } else {\n            let index = value.findIndex((v) => {\n              return v.id === data.orderId;\n            });\n            if (index === -1) {\n              // if item is not there already\n              getItem(\n                data.category,\n                data.type,\n                data.orderId,\n                authCtx.user.location,\n                (item) => {\n                  if (item === null) {\n                    console.log(\"In Stock\");\n                  } else {\n                    console.log(\"Out Of Stock\");\n                    // add data local db\n                    setOutOfStockItems((prevState) => {\n                      let list = [...prevState.grocery, item];\n                      localForage.setItem(\"outOfStockGrocery\", list);\n                      return {\n                        ...prevState,\n                        grocery: list,\n                      };\n                    });\n                  }\n                }\n              );\n            }\n          }\n        })\n        .catch((e) => console.log(e));\n    }\n    if (event.data.messageType !== \"notification-clicked\") {\n      store.addNotification({\n        title: notification.title,\n        message: notification.body,\n        type: \"default\",\n        insert: \"top\",\n        container: \"bottom-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true,\n        },\n      });\n    }\n  };\n  // messaging.onMessage((payload) => console.log(\"payload\", payload));\n  // messaging.onBackgroundMessage((payload) => console.log(\"bac\", payload));\n\n  // onMessageListener()\n  //   .then((payload) => {\n  //     console.log(\"notificaion msg: \", payload.notification);\n  //   })\n  //   .catch((e) => console.log(e));\n\n  // useEffect(() => {\n  //   let foodList = [];\n  //   let groceryList = [];\n  //   localForage\n  //     .getItem(\"outOfStockFood\")\n  //     .then((value) => {\n  //       // console.log(\"outOfStockFood\", value);\n  //       if (value !== null) {\n  //         foodList = value;\n  //       }\n  //       localForage\n  //         .getItem(\"outOfStockGrocery\")\n  //         .then((value) => {\n  //           // console.log(\"outOfStockGrocery\", value);\n  //           if (value !== null) {\n  //             groceryList = value;\n  //           }\n  //           setOutOfStockItems({\n  //             food: foodList,\n  //             grocery: groceryList,\n  //           });\n  //         })\n  //         .catch((e) => console.log(e));\n  //     })\n  //     .catch((e) => console.log(e));\n\n  //   // console.log(\"foodList\", foodList);\n  //   // console.log(\"groceryList\", groceryList);\n  //   // get ongoingFoodOrders & ongoingGroceryOrders\n  //   localforage\n  //     .getItem(\"ongoingFoodOrders\")\n  //     .then((value) => {\n  //       if (value !== null) {\n  //         setOngoingOrders((prevState) => {\n  //           return {\n  //             ...prevState,\n  //             food: value,\n  //           };\n  //         });\n  //       }\n  //       localforage\n  //         .getItem(\"ongoingGroceryOrders\")\n  //         .then((value) => {\n  //           if (value !== null) {\n  //             setOngoingOrders((prevState) => {\n  //               return {\n  //                 ...prevState,\n  //                 grocery: value,\n  //               };\n  //             });\n  //           }\n  //         })\n  //         .catch((e) => console.log(e));\n  //     })\n  //     .catch((e) => console.log(e));\n  // }, []);\n\n  useEffect(() => {\n    console.log(\"useEffect [Dashboard.js] Orders\");\n    let user = authCtx.user;\n    var unsubscribe;\n    if (user !== null) {\n      let date = new Date();\n      let day = date.getDate();\n      if (day < 10) {\n        day = \"0\" + day;\n      }\n      let month = date.getMonth() + 1;\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n      let year = date.getFullYear();\n      date = day + \".\" + month + \".\" + year;\n\n      // getTodayOrders(date, type, user.location, (orderss, manualBillNo) => {\n      let ty = \"\";\n      if (type === \"food\") {\n        ty = \"FoodOrders\";\n        // date = \"02.11.2021\";\n      } else {\n        ty = \"GroceryOrders\";\n        // date = \"03.11.2021\";\n      }\n      let list = [];\n      unsubscribe = db\n        .collection(ty)\n        .doc(\"todayOrders\")\n        .collection(user.location)\n        .onSnapshot(\n          (docs) => {\n            docs.forEach((doc) => {\n              list.push(doc.data());\n            });\n            if (list.length === 0) {\n              setOrders(\"No Orders\");\n            } else {\n              console.log(\"orderss\", list);\n              let data = {\n                allOrders: [],\n                newOrders: [],\n                preparingOrders: [],\n                onDeliveryOrders: [],\n                deliveredOrders: [],\n              };\n\n              let statData = {\n                online: 0,\n                telephone: 0,\n                ready: 0,\n                cancelled: 0,\n              };\n              // allOrders\n              list.sort((a, b) => {\n                if (a.timestamp < b.timestamp) {\n                  return 1;\n                }\n                if (a.timestamp > b.timestamp) {\n                  return -1;\n                }\n                return 0;\n              });\n              data.allOrders = [...list];\n              // other orders\n              list.forEach((o) => {\n                if (o.status === \"booked\") {\n                  data.newOrders.push(o);\n                  // if (orders.allOrders.length !== 0) {\n                  //   console.log(\"orders snap\", orders.allOrders);\n                  //   let index = orders.allOrders.findIndex((ord) => {\n                  //     return o.orderId === ord.orderId;\n                  //   });\n                  //   if (index === -1) {\n                  //     // console.log(\"index\", index, o);\n                  //     snackbarLink(o, \"New Order\");\n                  //   }\n                  // }\n                } else if (o.status === \"preparing\") {\n                  data.preparingOrders.push(o);\n                  // } else if (o.status === \"ondelivery\") {\n                } else if (\n                  o.status === \"assigned\" ||\n                  o.status === \"ondelivery\"\n                ) {\n                  data.onDeliveryOrders.push(o);\n                  statData.ready++;\n                } else if (o.status === \"delivered\") {\n                  data.deliveredOrders.push(o);\n                }\n                if (o.type === \"online\") {\n                  statData.online++;\n                } else if (o.type === \"telephone\") {\n                  statData.telephone++;\n                }\n              });\n              setOrders((prevState) => {\n                return data;\n              });\n              ordersContext.setOrderData(statData);\n            }\n            // setOrders(list);\n            list = [];\n            // console.log(\"unsub\", unsubscribe);\n          },\n          (e) => console.log(e)\n        );\n    }\n    return () => {\n      if (unsubscribe instanceof Function) {\n        unsubscribe();\n      } else {\n        console.log(\"Not a function\");\n      }\n      // unsubscribe();\n      // removeListener();\n      console.log(\"cleanup for listener\");\n    };\n  }, [type, authCtx]);\n\n  const removeHandler = (id) => {\n    // console.log(\"remove\", id);\n    if (type === \"food\") {\n      setOutOfStockItems((prevState) => {\n        let list = [...prevState.food];\n        let index = list.findIndex((v) => v.id === id);\n        list.splice(index, 1);\n        localForage\n          .setItem(\"outOfStockFood\", list)\n          .then(() => console.log(\"food successfully updated!!!\"))\n          .catch((e) => console.log(e));\n        return {\n          ...prevState,\n          food: list,\n        };\n      });\n    } else {\n      setOutOfStockItems((prevState) => {\n        let list = [...prevState.grocery];\n        let index = list.findIndex((v) => v.id === id);\n        list.splice(index, 1);\n        localForage\n          .setItem(\"outOfStockGrocery\", list)\n          .then(() => console.log(\"grocery successfully updated!!!\"))\n          .catch((e) => console.log(e));\n        return {\n          ...prevState,\n          grocery: list,\n        };\n      });\n    }\n  };\n\n  // update outOfStock\n  const checkHandler = (item) => {\n    if (type === \"food\") {\n      setItem(item.category, type, item, authCtx.user.location, (isAdded) => {\n        if (isAdded) {\n          setOutOfStockItems((prevState) => {\n            let list = [...prevState.food];\n            let index = list.findIndex((v) => v.id === item.id);\n            list.splice(index, 1);\n            localForage\n              .setItem(\"outOfStockFood\", list)\n              .then(() => console.log(\"food successfully updated!!!\"))\n              .catch((e) => console.log(e));\n            return {\n              ...prevState,\n              food: list,\n            };\n          });\n        } else {\n          alert(\"Some error!!!\");\n        }\n      });\n    } else {\n      setItem(item.category, type, item, (isAdded) => {\n        if (isAdded) {\n          setOutOfStockItems((prevState) => {\n            let list = [...prevState.grocery];\n            let index = list.findIndex((v) => v.id === item.id);\n            list.splice(index, 1);\n            localForage\n              .setItem(\"outOfStockGrocery\", list)\n              .then(() => console.log(\"grocery successfully updated!!!\"))\n              .catch((e) => console.log(e));\n            return {\n              ...prevState,\n              grocery: list,\n            };\n          });\n        } else {\n          alert(\"Some error!!!\");\n        }\n      });\n    }\n  };\n\n  const createOrder = (manual) => {\n    // setManualBillNo((prevState) => {\n    //   if (type === \"food\") {\n    //     if (manual === \"dineIn\") {\n    //       return {\n    //         ...prevState,\n    //         // manualBillNoFood: prevState.manualBillNoFood + 1,\n    //         manualBillNoFood: new Date().getTime(),\n    //       };\n    //     } else {\n    //       return {\n    //         ...prevState,\n    //         // telephoneBillNoFood: prevState.telephoneBillNoFood + 1,\n    //         telephoneBillNoFood: new Date().getTime(),\n    //       };\n    //     }\n    //   } else {\n    //     if (manual === \"dineIn\") {\n    //       return {\n    //         ...prevState,\n    //         // manualBillNoGrocery: prevState.manualBillNoGrocery + 1,\n    //         manualBillNoGrocery: new Date().getTime(),\n    //       };\n    //     } else {\n    //       return {\n    //         ...prevState,\n    //         // telephoneBillNoGrocery: prevState.telephoneBillNoGrocery + 1,\n    //         telephoneBillNoGrocery: new Date().getTime(),\n    //       };\n    //     }\n    //   }\n    // });\n\n    let time = new Date().getTime();\n    if (type === \"food\") {\n      setOngoingOrders((prevState) => {\n        let list = [...prevState.food];\n        let newData = {\n          // orderId: \"FD\" + (manualBillNo.manualBillNoFood + 1);\n          actualPrice: 0,\n          cancelReason: \"\",\n          dBoyId: \"\",\n          deliveryCharge: 0,\n          discount: 0,\n          id: \"FD\" + time,\n          latitude: \"\",\n          longitude: \"\",\n          noOfItems: 0,\n          orderId: \"FD\" + time,\n          items: [],\n          payment: {\n            isPaid: true,\n            paymentMethod: \"cash\",\n          },\n          status: \"\",\n          timestamp: \"\",\n          totalPrice: 0,\n          tax: 0,\n          type: \"dinein\",\n          userDetails: {\n            latitude: 0,\n            longitude: 0,\n            phone: \"\",\n            userAddress: \"\",\n            userId: \"\",\n            userName: \"\",\n          },\n          userid: \"\",\n        };\n\n        if (manual === \"telephone\") {\n          newData = {\n            // orderId: \"FT\" + (manualBillNo.telephoneBillNoFood + 1),\n            actualPrice: 0,\n            cancelReason: \"\",\n            dBoyId: \"\",\n            deliveryCharge: 0,\n            discount: 0,\n            id: \"FT\" + time,\n            latitude: \"\",\n            longitude: \"\",\n            noOfItems: 0,\n            orderId: \"FT\" + time,\n            items: [],\n            payment: {\n              isPaid: false,\n              paymentMethod: \"cash\",\n            },\n            status: \"\",\n            timestamp: \"\",\n            totalPrice: 0,\n            tax: 0,\n            type: \"telephone\",\n            userDetails: {\n              latitude: 0,\n              longitude: 0,\n              phone: \"\",\n              userAddress: \"\",\n              userId: \"\",\n              userName: \"\",\n            },\n            userid: \"\",\n          };\n        }\n        localforage.setItem(\"ongoingFoodOrders\", [...list, newData]);\n        return {\n          ...prevState,\n          food: [...list, newData],\n        };\n      });\n    } else {\n      setOngoingOrders((prevState) => {\n        let list = [...prevState.grocery];\n        let newData = {\n          // orderId: \"GD\" + (manualBillNo.manualBillNoGrocery + 1),\n          actualPrice: 0,\n          cancelReason: \"\",\n          dBoyId: \"\",\n          deliveryCharge: 0,\n          discount: 0,\n          id: \"GD\" + time,\n          latitude: \"\",\n          longitude: \"\",\n          noOfItems: 0,\n          orderId: \"GD\" + time,\n          items: [],\n          payment: {\n            isPaid: true,\n            paymentMethod: \"cash\",\n          },\n          status: \"\",\n          timestamp: \"\",\n          totalPrice: 0,\n          tax: 0,\n          type: \"dinein\",\n          userDetails: {\n            latitude: 0,\n            longitude: 0,\n            phone: \"\",\n            userAddress: \"\",\n            userId: \"\",\n            userName: \"\",\n          },\n          userid: \"\",\n        };\n        if (manual === \"telephone\") {\n          newData = {\n            // orderId: \"GT\" + (manualBillNo.telephoneBillNoGrocery + 1),\n            actualPrice: 0,\n            cancelReason: \"\",\n            dBoyId: \"\",\n            deliveryCharge: 0,\n            discount: 0,\n            id: \"GT\" + time,\n            latitude: \"\",\n            longitude: \"\",\n            noOfItems: 0,\n            orderId: \"GT\" + time,\n            items: [],\n            payment: {\n              isPaid: false,\n              paymentMethod: \"cash\",\n            },\n            status: \"\",\n            timestamp: \"\",\n            totalPrice: 0,\n            tax: 0,\n            type: \"telephone\",\n            userDetails: {\n              latitude: 0,\n              longitude: 0,\n              phone: \"\",\n              userAddress: \"\",\n              userId: \"\",\n              userName: \"\",\n            },\n            userid: \"\",\n          };\n        }\n        localforage.setItem(\"ongoingGroceryOrders\", [...list, newData]);\n        return {\n          ...prevState,\n          grocery: [...list, newData],\n        };\n      });\n    }\n  };\n\n  const removeOrder = (orderId, type) => {\n    // console.log(\"order\", orderId, type);\n    setOngoingOrders((prevState) => {\n      if (type === \"food\") {\n        let listFood = [...prevState.food];\n        let index = listFood.findIndex((val) => val.orderId === orderId);\n        listFood.splice(index, 1);\n        localforage.setItem(\"ongoingFoodOrders\", [...listFood]);\n        return {\n          ...prevState,\n          food: [...listFood],\n        };\n      } else {\n        let listGrocery = [...prevState.grocery];\n        let index = listGrocery.findIndex((val) => val.orderId === orderId);\n        listGrocery.splice(index, 1);\n        localforage.setItem(\"ongoingGroceryOrders\", [...listGrocery]);\n        return {\n          ...prevState,\n          grocery: [...listGrocery],\n        };\n      }\n    });\n    setCurrentOrder({\n      food: {\n        actualPrice: 0,\n        cancelReason: \"\",\n        dBoyId: \"\",\n        deliveryCharge: 0,\n        discount: 0,\n        id: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        noOfItems: 0,\n        orderId: \"\",\n        items: [],\n        payment: {\n          isPaid: false,\n          paymentMethod: \"\",\n        },\n        status: \"\",\n        timestamp: \"\",\n        totalPrice: 0,\n        tax: 0,\n        type: \"dinein\",\n        userDetails: {\n          latitude: 0,\n          longitude: 0,\n          phone: \"\",\n          userAddress: \"\",\n          userId: \"\",\n          userName: \"\",\n        },\n        userid: \"\",\n      },\n      grocery: {\n        actualPrice: 0,\n        cancelReason: \"\",\n        dBoyId: \"\",\n        deliveryCharge: 0,\n        discount: 0,\n        id: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        noOfItems: 0,\n        orderId: \"\",\n        items: [],\n        payment: {\n          isPaid: false,\n          paymentMethod: \"\",\n        },\n        status: \"\",\n        timestamp: \"\",\n        totalPrice: 0,\n        tax: 0,\n        type: \"dinein\",\n        userDetails: {\n          latitude: 0,\n          longitude: 0,\n          phone: \"\",\n          userAddress: \"\",\n          userId: \"\",\n          userName: \"\",\n        },\n        userid: \"\",\n      },\n    });\n  };\n\n  const onChangeHandler = (e, item) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    let index = items.findIndex((i) => i.Name === value);\n    if (index !== -1) {\n      let item = items[index];\n      if (name === \"searchItems\") {\n        if (type === \"food\") {\n          setCurrentOrder((prevState) => {\n            let list = [...prevState.food.items];\n            console.log(\"change-food\", prevState);\n            let food = prevState.food;\n            // below two lines is to ensure that we only add unique items\n            let i = food.items.findIndex((i) => i.id === item.id);\n            // console.log(\"change\", item, props.location);\n            if (i === -1) {\n              let newItem = {\n                ...item,\n                // itemId: item.id,\n                // itemName: item.Name,\n                itemPrice: item.branch[authCtx.user.location].current_price,\n                itemSize: 1,\n                itemQuantity: 1,\n              };\n              // if (\n              //   item.branch[authCtx.user.location].actualPrice === -1 &&\n              //   item.branch[authCtx.user.location].currentPrice\n              // ) {\n              //   newItem = {\n              //     ...item,\n              //     itemPrice: item.branch[authCtx.user.location].cquarterPrice,\n              //     itemSize: 1,\n              //     itemQuantity: \"quarter\",\n              //   };\n              // }\n              food.totalPrice += newItem.itemPrice;\n              food.noOfItems = food.noOfItems + 1;\n              food.items = [...list, newItem];\n              localforage\n                .getItem(\"ongoingFoodOrders\")\n                .then((value) => {\n                  if (value === null) {\n                    let list = [];\n                    list.push(food);\n                    localforage.setItem(\"ongoingFoodOrders\", list);\n                  } else {\n                    // let list = [...value];\n                    let list = [];\n                    list.push(food);\n                    localforage.setItem(\"ongoingFoodOrders\", list);\n                  }\n                })\n                .catch((e) => console.log(e));\n              return {\n                ...prevState,\n                food: food,\n              };\n            } else {\n              alert(\"Already added that item!!!\");\n              food.items = [...list];\n              return {\n                ...prevState,\n                food: food,\n              };\n            }\n          });\n        } else {\n          // console.log(\"change-grocery\");\n          if (item.branch[authCtx.user.location] === undefined) {\n            alert(\"Not available in your location!!!\");\n          }\n          setCurrentOrder((prevState) => {\n            let list = [...prevState.grocery.items];\n            let grocery = prevState.grocery;\n            let i = grocery.items.findIndex((i) => i.id === item.id);\n            if (i === -1) {\n              let newItem = {\n                ...item,\n                // itemId: item.id,\n                // itemName: item.Name,\n                itemPrice: item.branch[authCtx.user.location].current_price,\n                itemSize: 1,\n                itemQuantity: 1,\n              };\n              // if (item[authCtx.user.location].price.length <= 0) {\n              //   newItem = {\n              //     ...item,\n              //     itemPrice: item[authCtx.user.location].price.cquarterPrice,\n              //     itemSize: 1,\n              //     itemQuantity: \"quarter\",\n              //   };\n              // }\n              grocery.totalPrice += newItem.itemPrice;\n              grocery.noOfItems = grocery.noOfItems + 1;\n              grocery.items = [...list, newItem];\n              return {\n                ...prevState,\n                grocery: grocery,\n              };\n            } else {\n              alert(\"Already added that item!!!\");\n              grocery.items = [...list];\n              return {\n                ...prevState,\n                grocery: grocery,\n              };\n            }\n          });\n        }\n        document.getElementById(\"searchItems\").value = \"\";\n      }\n    } else if (name === \"phone\" || name === \"username\" || name === \"address\") {\n      if (type === \"food\") {\n        setCurrentOrder((prevState) => {\n          let food = prevState.food;\n          if (name === \"phone\") {\n            food.userDetails.phone = value;\n          } else if (name === \"username\") {\n            food.userDetails.userName = value;\n          } else if (name === \"address\") {\n            food.userDetails.userAddress = value;\n          }\n          return {\n            ...prevState,\n            food: food,\n          };\n        });\n      } else {\n        setCurrentOrder((prevState) => {\n          let grocery = prevState.grocery;\n          if (name === \"phone\") {\n            grocery.userDetails.phone = value;\n          } else if (name === \"username\") {\n            grocery.userDetails.userName = value;\n          } else if (name === \"address\") {\n            grocery.userDetails.userAddress = value;\n          }\n          return {\n            ...prevState,\n            food: grocery,\n          };\n        });\n      }\n    } else if (name === \"paymentMode\") {\n      if (type === \"food\") {\n        setCurrentOrder((prevState) => {\n          let food = prevState.food;\n          food.payment.paymentMethod = value;\n          return {\n            ...prevState,\n            food: food,\n          };\n        });\n      } else {\n        setCurrentOrder((prevState) => {\n          let grocery = prevState.grocery;\n          grocery.payment.paymentMethod = value;\n          return {\n            ...prevState,\n            grocery: grocery,\n          };\n        });\n      }\n    } else if (name === \"itemSize\") {\n      // console.log(\"change-itemSize--\", currentOrder, item);\n      if (type === \"food\") {\n        setCurrentOrder((prevState) => {\n          let list = [...prevState.food.items];\n          let index = list.findIndex((l) => l.id === item.id);\n          let updatedItem = {\n            ...list[index],\n            itemSize: value,\n          };\n          list[index] = updatedItem;\n          let food = prevState.food;\n          food.items = [...list];\n          let sumPrice = 0;\n          let size = 0;\n          food.items.forEach((item) => {\n            sumPrice += item.itemPrice * item.itemSize;\n            size += parseInt(item.itemSize);\n          });\n          food.totalPrice = sumPrice;\n          food.noOfItems = size;\n          return {\n            ...prevState,\n            food: food,\n          };\n        });\n      } else {\n        setCurrentOrder((prevState) => {\n          let list = [...prevState.grocery.items];\n          let index = list.findIndex((l) => l.id === item.id);\n          let updatedItem = {\n            ...list[index],\n            itemSize: value,\n          };\n          list[index] = updatedItem;\n          let grocery = prevState.grocery;\n          grocery.items = [...list];\n          let sumPrice = 0;\n          let size = 0;\n          grocery.items.forEach((item) => {\n            sumPrice += item.itemPrice * item.itemSize;\n            size += parseInt(item.itemSize);\n          });\n          grocery.totalPrice = sumPrice;\n          grocery.noOfItems = size;\n          return {\n            ...prevState,\n            grocery: grocery,\n          };\n        });\n      }\n    } else if (name === \"itemQuantity\") {\n      // console.log(\"change-itemQuantity\", currentOrder, item);\n      if (type === \"food\") {\n        setCurrentOrder((prevState) => {\n          let list = [...prevState.food.items];\n          let index = list.findIndex((l) => l.id === item.id);\n          let price = item[authCtx.user.location].price.cquarterPrice;\n          if (value === \"half\") {\n            price = item[authCtx.user.location].price.chalfPrice;\n          } else if (value === \"full\") {\n            price = item[authCtx.user.location].price.cfullPrice;\n          }\n          let updatedItem = {\n            ...list[index],\n            itemQuantity: value,\n            itemPrice: price,\n          };\n          list[index] = updatedItem;\n          let food = prevState.food;\n          food.items = [...list];\n          let sumPrice = 0;\n          food.items.forEach((item) => {\n            sumPrice += item.itemPrice * item.itemSize;\n          });\n          food.totalPrice = sumPrice;\n          return {\n            ...prevState,\n            food: food,\n          };\n        });\n      } else {\n        console.log(\"No code yet for grocery, bcs it is different\");\n      }\n    }\n  };\n\n  const removeItem = (id) => {\n    // console.log(\"removeItem\", id);\n    if (type === \"food\") {\n      setCurrentOrder((prevState) => {\n        let list = [...prevState.food.items];\n        let index = list.findIndex((l) => l.id === id);\n        list.splice(index, 1);\n        let food = prevState.food;\n        food.noOfItems = food.noOfItems - 1;\n        food.items = [...list];\n        let sumPrice = 0;\n        let size = 0;\n        list.forEach((item) => {\n          sumPrice += item.itemPrice * item.itemSize;\n          size += parseInt(item.itemSize);\n        });\n        food.totalPrice = sumPrice;\n        food.noOfItems = size;\n        return {\n          ...prevState,\n          food: food,\n        };\n      });\n    } else {\n      // console.log(\"change-grocery\");\n      setCurrentOrder((prevState) => {\n        let list = [...prevState.grocery.items];\n        let index = list.findIndex((l) => l.id === id);\n        list.splice(index, 1);\n        let grocery = prevState.grocery;\n        grocery.noOfItems = grocery.noOfItems + 1;\n        grocery.items = [...list];\n        let sumPrice = 0;\n        let size = 0;\n        grocery.items.forEach((item) => {\n          sumPrice += item.itemPrice * item.itemSize;\n          size += parseInt(item.itemSize);\n        });\n        grocery.totalPrice = sumPrice;\n        grocery.noOfItems = size;\n        return {\n          ...prevState,\n          grocery: grocery,\n        };\n      });\n    }\n  };\n\n  const generateBill = () => {\n    if (type === \"food\") {\n      console.log(\"currentOrder\", currentOrder.food);\n      if (\n        currentOrder.food.totalPrice === 0 ||\n        currentOrder.food.noOfItems === 0\n      ) {\n        alert(\"Price or Item should not be 0(Zero)!!!\");\n      } else {\n        billPaidOrder(\n          currentOrder.food,\n          type,\n          authCtx.user.location,\n          (isAdded) => {\n            if (isAdded) {\n              // window.alert(\"Successfully Added to local store!!!\");\n              // for thermal printer && data added to backend\n              alert(\"Food Bill Generated for - \" + currentOrder.food.orderId);\n              removeOrder(currentOrder.food.orderId, type);\n            } else {\n              // error not adding\n              window.alert(\"Not Added... Try Again!!!\");\n            }\n          }\n        );\n      }\n    } else {\n      console.log(\"currentOrder-grocery\", currentOrder.grocery);\n      if (\n        currentOrder.food.totalPrice === 0 ||\n        currentOrder.food.noOfItems === 0\n      ) {\n        alert(\"Price or Item should not be 0(Zero)!!!\");\n      } else {\n        billPaidOrder(\n          currentOrder.grocery,\n          type,\n          authCtx.user.location,\n          (isAdded) => {\n            if (isAdded) {\n              // window.alert(\"Successfully Added to local store!!!\");\n              // for thermal printer && data added to backend\n              alert(\n                \"Grocery Bill Generated for - \" + currentOrder.grocery.orderId\n              );\n              removeOrder(currentOrder.grocery.orderId, type);\n            } else {\n              // error not adding\n              window.alert(\"Not Added... Try Again!!!\");\n            }\n          }\n        );\n      }\n    }\n  };\n\n  const sendNotificationToDeliveryUser = async (order, dGuy, status) => {\n    console.log(\"order\", order);\n    const FIREBASE_API_KEY =\n      \"AAAA_JouL7I:APA91bHU1dqei_StIKqJVED6WsQRD4JKUhauk2VvPy3KUtGOQ715PTmmE8yTK5cFfJvcs0EXsrVAO2YBEdIPYYzktL4FdNXTkf3TV8V6_keOr842VNuDiGfw3Ulv-rkDXzYeNo-_8Wul\";\n    const address =\n      \"TO: \" + order.userDetails?.userName ||\n      order.order_address.userName +\n        \", Address: \" +\n        order.userDetails?.userAddress ||\n      order.order_address.userAddress;\n    const message = {\n      registration_ids: [],\n      notification: {\n        title: \"New Order - \" + order.orderId,\n        body: address,\n        vibrate: 1,\n        sound: 1,\n        show_in_foreground: true,\n        priority: \"high\",\n        content_available: true,\n      },\n      data: {\n        title: \"New Order - \" + order.orderId,\n        body: address,\n        id: order.id,\n      },\n    };\n    message.registration_ids.push(dGuy.user_token);\n\n    let headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"key=\" + FIREBASE_API_KEY,\n    });\n\n    let response = await fetch(\"https://fcm.googleapis.com/fcm/send\", {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(message),\n    });\n    response = await response.json();\n    console.log(\"response\", response);\n    store.addNotification({\n      title: \"Notification Sent!!!\",\n      message: \"To Delivery User: \" + dGuy.user_username,\n      type: \"default\",\n      insert: \"top\",\n      container: \"bottom-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 5000,\n        onScreen: true,\n      },\n    });\n  };\n\n  // status change - preparing, assigned\n  const updateOrder = (order, status, dGuy) => {\n    updateOrderStatus(\n      type,\n      authCtx.user.location,\n      order,\n      status,\n      (isUpdated) => {\n        if (isUpdated) {\n          setOrders((prevState) => {\n            if (status === \"preparing\") {\n              let updatedOrder = {\n                ...order,\n                status: \"preparing\",\n              };\n              // all orders array\n              let allOrders = [...prevState.allOrders];\n              let allIndex = allOrders.findIndex((o) => o.id === order.id);\n              allOrders[allIndex] = updatedOrder;\n              // new Orders array\n              let newOrders = [...prevState.newOrders];\n              let newIndex = newOrders.findIndex((o) => o.id === order.id);\n              // delete from newOrders and push into preparingOrders\n              newOrders.splice(newIndex, 1);\n              let preparingOrders = [...prevState.preparingOrders];\n              preparingOrders.push(updatedOrder);\n              return {\n                ...prevState,\n                allOrders: allOrders,\n                newOrders: newOrders,\n                preparingOrders: preparingOrders,\n              };\n            } else if (status === \"assigned\") {\n              // send notification to delivery boy\n              sendNotificationToDeliveryUser(order, dGuy, \"assigned\");\n              // change delivery boy status to \"assigned\"\n              let updatedOrder = {\n                ...order,\n                status: \"assigned\",\n              };\n              // all orders array\n              let allOrders = [...prevState.allOrders];\n              let allIndex = allOrders.findIndex((o) => o.id === order.id);\n              allOrders[allIndex] = updatedOrder;\n\n              // new Orders array\n              let preparingOrders = [...prevState.preparingOrders];\n              let prepareIndex = preparingOrders.findIndex(\n                (o) => o.id === order.id\n              );\n              // delete from newOrders and push into preparingOrders\n              preparingOrders.splice(prepareIndex, 1);\n              let onDeliveryOrders = [...prevState.onDeliveryOrders];\n              onDeliveryOrders.push(updatedOrder);\n              return {\n                ...prevState,\n                allOrders: allOrders,\n                preparingOrders: preparingOrders,\n                onDeliveryOrders: onDeliveryOrders,\n              };\n            }\n          });\n        } else {\n          alert(\"Order Not Updated, Try Again!!!\");\n        }\n      }\n    );\n  };\n\n  const assignDeliveryUser = (order, user) => {\n    let data = {\n      ...order,\n      dBoyId: user.user_id,\n    };\n    // console.log(\"assignDeliveryUser\", data);\n    updateOrder(data, \"assigned\", user);\n  };\n\n  return (\n    <>\n      <div className=\"row headnav\">\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/allorder\">All Orders</NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/neworder\">New Arrivals</NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/preparing\">Preparing</NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/ondeliver\">On Delivery</NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/delivered\">Delivered</NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/dashboard/manual\">Manual</NavLink>\n        </div>\n        <div className=\"dropdown\">\n          <select\n            onChange={(e) => {\n              // console.log(e.target.value);\n              setType(e.target.value);\n            }}\n          >\n            <option value=\"food\">Food</option>\n            <option value=\"grocery\">Grocery</option>\n          </select>\n        </div>\n        {/* {authCtx.user !== null && (\n          <StockMaintainance\n            items={\n              type === \"food\" ? outOfStockItems.food : outOfStockItems.grocery\n            }\n            location={authCtx.user.location}\n            type={type}\n            removeHandler={removeHandler}\n            checkHandler={checkHandler}\n          />\n        )} */}\n      </div>\n      <div>\n        <Switch>\n          <Route path=\"/home/dashboard/allorder\">\n            <OrderMaintain\n              orders={orders.allOrders}\n              updateOrderStatus={(order, status) => updateOrder(order, status)}\n              assignDeliveryUser={assignDeliveryUser}\n            />\n          </Route>\n          <Route path=\"/home/dashboard/neworder\">\n            <OrderMaintain\n              orders={orders.newOrders}\n              updateOrderStatus={(order, status) => {\n                updateOrderStatus(order, status);\n              }}\n            />\n          </Route>\n          <Route path=\"/home/dashboard/preparing\">\n            <OrderMaintain\n              orders={orders.preparingOrders}\n              assignDeliveryUser={assignDeliveryUser}\n            />\n          </Route>\n          <Route path=\"/home/dashboard/ondeliver\">\n            <OrderMaintain orders={orders.onDeliveryOrders} />\n          </Route>\n          <Route path=\"/home/dashboard/delivered\">\n            <OrderMaintain\n              orders={orders.deliveredOrders}\n              type={type}\n              location={authCtx.user !== null && authCtx.user.location}\n            />\n          </Route>\n          <Route path=\"/home/dashboard/manual\">\n            {authCtx.user !== null && (\n              <ManualBilling\n                removeOrder={removeOrder}\n                onChange={onChangeHandler}\n                items={items}\n                type={type}\n                setItems={(res) => setItems(res)}\n                ongoingOrders={\n                  type === \"food\" ? ongoingOrders.food : ongoingOrders.grocery\n                }\n                currentOrder={\n                  type === \"food\" ? currentOrder.food : currentOrder.grocery\n                }\n                generateBill={generateBill}\n                removeItem={removeItem}\n                location={authCtx.user.location}\n                setCurrentOrder={(order) => {\n                  // console.log(\"order\", ongoingOrders.food);\n                  if (type === \"food\") {\n                    setCurrentOrder((prevState) => {\n                      return {\n                        ...prevState,\n                        food: order,\n                      };\n                    });\n                  } else {\n                    setCurrentOrder((prevState) => {\n                      return {\n                        ...prevState,\n                        grocery: order,\n                      };\n                    });\n                  }\n                }}\n                createOrder={createOrder}\n              />\n            )}\n          </Route>\n        </Switch>\n        {/* <Switch>\n          <Route path=\"/home/dashboard/foodorder\">\n            <Orders type=\"food\" />\n          </Route>\n          <Route path=\"/home/dashboard/groceryorder\">\n            <Orders type=\"grocery\" />\n          </Route>\n        </Switch> */}\n        {/* <StockMaintainance /> */}\n      </div>\n      <div id=\"snackbar-container\"></div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Food = () => {\n  return (\n    <section>\n      <div className=\"row fooditem\">\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/menu.png\" alt=\"addnew\" />\n            <p className=\"title\">Add New</p>\n            <Link to=\"/home/fooditems/addnew\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/dish1.png\"\n              alt=\"breakfast\"\n            />\n            <p className=\"title\">Breakfast</p>\n            <Link\n              to=\"/home/fooditems/breakfast\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/dish.png\" alt=\"lunch\" />\n            <p className=\"title\">Lunch</p>\n            <Link to=\"/home/fooditems/lunch\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/hot.png\" alt=\"dinner\" />\n            <p className=\"title\">Dinner</p>\n            <Link to=\"/home/fooditems/dinner\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        {/* <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/roasted-chicken.png\"\n              alt=\"starters\"\n              width=\"200px\"\n            />\n            <p className=\"title\">Starters</p>\n            <Link\n              to=\"/home/fooditems/starters\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/canapes.png\"\n              alt=\"desserts\"\n            />\n            <p className=\"title\">Desserts</p>\n            <Link\n              to=\"/home/fooditems/desserts\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/fast-food1.png\"\n              // src=\"/loaders/24064-food-squeeze-with-burger-and-hot-dog.gif\"\n              alt=\"bigdeal\"\n            />\n            <p className=\"title\">Big Deal Offers</p>\n            <Link\n              to=\"/home/fooditems/bigdeal\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/drink.png\"\n              alt=\"freshjuice\"\n            />\n            <p className=\"title\">Fresh Juice</p>\n            <Link to=\"/home/fooditems/juice\" className=\"stretched-link\"></Link>\n          </div>\n        </div> */}\n      </div>\n    </section>\n  );\n};\n\nexport default Food;\n","import React, { useEffect, useState } from \"react\";\nimport Chart from \"chart.js/auto\";\n\nconst LineChart = (props) => {\n  // const [labels, setLabels] = useState(null);\n  // const [data, setData] = useState(null);\n  // const [config, setConfig] = useState(null);\n\n  useEffect(() => {\n    let labels = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n    let stat = props.stat;\n    if (props.filter.type === \"month\") {\n      // labels = [\"week1\", \"week2\", \"week3\", \"week4\"];\n      labels = [];\n      for (let i = 0; i < stat.onlineStat.length; i++) {\n        if (i < 9) {\n          labels.push(\"0\" + (i + 1));\n        } else {\n          labels.push(i + 1);\n        }\n      }\n    } else if (props.filter.type === \"day\") {\n      labels = [\n        \"6-8am\",\n        \"8-10am\",\n        \"10-11.50am\",\n        \"12-2pm\",\n        \"2-4pm\",\n        \"4-6pm\",\n        \"6-8pm\",\n        \"8-10pm\",\n        \"10-11.59pm\",\n        \"12-6am\"\n      ];\n    }\n    let data = {\n      labels: labels,\n      datasets: [\n        {\n          label: \"Online\",\n          data: stat.onlineStat,\n          fill: false,\n          borderColor: \"rgb(75, 192, 192)\",\n          tension: 0.1\n        },\n        {\n          label: \"DineIn\",\n          data: stat.dineInStat,\n          fill: false,\n          borderColor: \"tomato\",\n          tension: 0.1\n        }\n      ]\n    };\n    // setConfig();\n    let config = {\n      type: \"line\",\n      data: data,\n      options: {}\n    };\n\n    const chart = new Chart(document.getElementById(\"lineChart\"), config);\n    // when component unmounts\n    return () => {\n      chart.destroy();\n    };\n  }, [props.stat]);\n\n  // useEffect(() => {\n  //   const chart = new Chart(document.getElementById(\"lineChart\"), config);\n  //   // when component unmounts\n  //   return () => {\n  //     chart.destroy();\n  //   };\n  // }, []);\n\n  return (\n    <div className=\"lineChart\">\n      <h1>Orders - {props.filter.value}</h1>\n\n      <br />\n\n      <canvas id=\"lineChart\"></canvas>\n    </div>\n  );\n};\n\nexport default LineChart;\n","import React, { useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\n\nconst PieChart = (props) => {\n  useEffect(() => {\n    const labels = [\"Online\", \"Dine-In\"];\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: \"Revenue\",\n          data: [props.stat.onlineRevenue, props.stat.dineInRevenue],\n          backgroundColor: [\n            \"rgb(255, 99, 132)\",\n            \"rgb(54, 162, 235)\",\n            \"rgb(255, 205, 86)\"\n          ],\n          hoverOffset: 4\n        }\n      ]\n    };\n\n    const config = {\n      type: \"pie\",\n      data: data,\n      options: {}\n    };\n    const chart = new Chart(document.getElementById(\"pieChart\"), config);\n    // when component unmounts\n    return () => {\n      chart.destroy();\n    };\n  }, [props.stat]);\n\n  return (\n    <div className=\"piechart\">\n      <h1>Total Revenue</h1>\n      <br />\n      <canvas id=\"pieChart\"></canvas>\n    </div>\n  );\n};\n\nexport default PieChart;\n","import { useEffect, useState } from \"react\";\nimport \"./Tables.css\";\n\nconst Tables = (props) => {\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    setOrders(props.orders);\n  }, [props.orders]);\n\n  let ui = null;\n  if (orders.length === 0 || orders === \"empty\") {\n    ui = (\n      <tr>\n        <td style={{ textAlign: \"center\" }}>No Orders</td>\n      </tr>\n    );\n  } else {\n    ui = orders.map((order) => {\n      return (\n        <tr key={order.orderId}>\n          <td>{order.orderId}</td>\n          <td>\n            <p style={{ textTransform: \"capitalize\" }}>\n              {order.userDetails.userName}\n            </p>\n            <p>{order.userDetails.phone}</p>\n          </td>\n          <td>{order.userDetails.userAddress}</td>\n          <td>\n            {order.order_items.map((item) => {\n              return (\n                <p key={item.itemId}>\n                  {item.itemName} - {item.itemSize} - ₹{item.itemPrice}\n                </p>\n              );\n            })}\n          </td>\n          <td>₹{order.totalPrice}</td>\n          <td style={{ textTransform: \"capitalize\" }}>{order.status}</td>\n        </tr>\n      );\n    });\n  }\n\n  return (\n    <>\n      <table className=\"table table-bordered table-hover center\">\n        <thead>\n          <tr>\n            <th>Order Id</th>\n            <th>User</th>\n            <th>Address</th>\n            <th>Items Purchased</th>\n            <th>Amount</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>{ui}</tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Tables;\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nexport const ExportToExcel = ({ apiData, fileName }) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData, fileName) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      className=\"btn btn-primary\"\n      onClick={(e) => exportToCSV(apiData, fileName)}\n    >\n      Export for {fileName}\n    </button>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { getMonthOrders, getOrders, getYearOrders } from \"../../api/OrderDB\";\nimport LineChart from \"../../ui/Charts/LineChart\";\nimport PieChart from \"../../ui/Charts/PieChart\";\nimport Tables from \"../../ui/Tables/Tables\";\nimport AuthContext from \"../../context/auth-context\";\nimport { ExportToExcel } from \"../../helpers/ExportToExcel\";\n\nconst Orders = () => {\n  const authCtx = useContext(AuthContext);\n  const [filter, setFilter] = useState({\n    type: \"\",\n    value: \"\",\n    itemType: \"food\",\n  });\n  const [orders, setOrders] = useState(null);\n  const [stat, setStat] = useState(null);\n  const [showTable, setShowTable] = useState(false);\n\n  useEffect(() => {\n    if (authCtx.user !== null) {\n      let date = new Date();\n      setFilter({\n        type: \"day\",\n        value: date.toISOString().split(\"T\")[0],\n      });\n      let day = date.getDate();\n      if (day < 10) {\n        day = \"0\" + day;\n      }\n      let month = date.getMonth() + 1;\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n      let year = date.getFullYear();\n      date = day + \".\" + month + \".\" + year;\n      // document.getElementById(\"date\").valueAsDate = date;\n      getOrders(date, \"food\", authCtx.user.location, (orders, stat) => {\n        setShowTable(true);\n        setOrders(orders);\n        setStat(stat);\n      });\n    }\n  }, [authCtx.user]);\n\n  const onChangeHandler = (e) => {\n    // console.log(\"value\", e.target.value);\n    if (e.target.name === \"filter\") {\n      setFilter((prevState) => {\n        return {\n          ...prevState,\n          type: e.target.value,\n        };\n      });\n    } else if (e.target.name === \"itemType\") {\n      setFilter((prevState) => {\n        return {\n          ...prevState,\n          itemType: e.target.value,\n        };\n      });\n    } else {\n      setFilter((prevState) => {\n        return {\n          ...prevState,\n          value: e.target.value,\n        };\n      });\n    }\n  };\n\n  const onCheckHandler = () => {\n    console.log(\"check\", filter);\n    let type = filter.itemType;\n    let location = authCtx.user.location;\n    let emptyData = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    if (filter.type === \"month\") {\n      getMonthOrders(type, location, filter, (orders, stat) => {\n        // console.log(\"orders-stat-month\", orders, stat);\n        setShowTable(false);\n        setOrders(orders);\n        setStat(stat);\n      });\n    } else if (filter.type === \"year\") {\n      getYearOrders(type, location, filter, (orders, stat) => {\n        // console.log(\"orders-stat-year\", orders, stat);\n        setShowTable(false);\n        setOrders(orders);\n        if (stat === undefined) {\n          setStat(emptyData);\n        } else {\n          setStat(stat);\n        }\n      });\n    } else if (filter.type === \"day\") {\n      let date = filter.value.split(\"-\");\n      let year = date[0];\n      let month = date[1];\n      let day = date[2];\n      date = day + \".\" + month + \".\" + year;\n      // console.log(date);\n      // console.log(\"date\", date);\n      getOrders(date, type, authCtx.user.location, (orders, stat) => {\n        setShowTable(true);\n        setOrders(orders);\n        setStat(stat);\n      });\n    }\n  };\n\n  // const generateExcel = () => {};\n\n  let ui = null;\n  if (filter.type === \"year\") {\n    ui = (\n      <input\n        type=\"number\"\n        min=\"2018\"\n        max=\"\"\n        id=\"year\"\n        name=\"year\"\n        onChange={onChangeHandler}\n        value={filter.value}\n        autoComplete=\"off\"\n      />\n    );\n  } else if (filter.type === \"month\") {\n    ui = (\n      <input\n        type=\"month\"\n        id=\"month\"\n        name=\"month\"\n        onChange={onChangeHandler}\n        value={filter.value}\n      />\n    );\n  } else {\n    ui = (\n      <input\n        type=\"date\"\n        id=\"date\"\n        name=\"date\"\n        onChange={onChangeHandler}\n        value={filter.value}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className=\"row stats\">\n        <div className=\"col-6 line\">\n          {stat !== null && (\n            <LineChart labelName=\"test\" filter={filter} stat={stat} />\n          )}\n        </div>\n        <div className=\"col-4 pie\">\n          {stat !== null && <PieChart filter={filter} stat={stat} />}\n        </div>\n        <div className=\"col-2 calender\">\n          <div className=\"dropdown\">\n            <select\n              name=\"itemType\"\n              onChange={onChangeHandler}\n              value={filter.itemType}\n            >\n              <option value=\"food\">Food</option>\n              <option value=\"grocery\">Grocery</option>\n            </select>\n          </div>\n          <form>\n            <input\n              type=\"radio\"\n              name=\"filter\"\n              id=\"day\"\n              value=\"day\"\n              checked={filter.type === \"day\" ? true : false}\n              onChange={onChangeHandler}\n            />\n            <label htmlFor=\"day\">Day</label>\n            <br />\n            <input\n              type=\"radio\"\n              name=\"filter\"\n              id=\"month\"\n              value=\"month\"\n              checked={filter.type === \"month\" ? true : false}\n              onChange={onChangeHandler}\n            />\n            <label htmlFor=\"month\">Month</label>\n            <br />\n            <input\n              type=\"radio\"\n              name=\"filter\"\n              id=\"year\"\n              value=\"year\"\n              checked={filter.type === \"year\" ? true : false}\n              onChange={onChangeHandler}\n            />\n            <label htmlFor=\"year\">Year</label>\n            <br />\n            {ui}\n            <br />\n            <br />\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={onCheckHandler}\n            >\n              Check\n            </button>\n            {/* <button type=\"button\" className=\"btn btn-primary\">\n              Clear\n            </button> */}\n          </form>\n        </div>\n        <div className=\"col-12 export\">\n          {showTable ? (\n            orders !== null && (\n              <>\n                {orders.length === 0 || orders === \"empty\" ? (\n                  <h1>No Orders To Export</h1>\n                ) : (\n                  <div className=\"export-\">\n                    <ExportToExcel apiData={orders} fileName={filter.value} />\n                    <Tables orders={orders} />\n                  </div>\n                )}\n                {/* <ExportToExcel apiData={orders} fileName={filter.value} /> */}\n              </>\n            )\n          ) : (\n            <div>\n              {/* <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                onClick={generateExcel}\n              >\n                Generate Excel : {filter.value}\n              </button> */}\n              {orders !== null &&\n              (orders.length === 0 || orders === \"empty\") ? (\n                <h1>No Orders To Export</h1>\n              ) : (\n                <ExportToExcel apiData={orders} fileName={filter.value} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Orders;\n\n// useEffect(() => {\n// $(\"#yearPicker\").datetimepicker({\n//   format: \"YYYY\",\n//   viewMode: \"years\"\n// });\n// $(\".date-picker-year\").datepicker({\n//   changeYear: true,\n//   showButtonPanel: true,\n//   dateFormat: \"yy\",\n//   onClose: function (dateText, inst) {\n//     var year = $(\"#ui-datepicker-div .ui-datepicker-year :selected\").val();\n//     $(this).datepicker(\"setDate\", new Date(year, 1));\n//   }\n// });\n// $(\".date-picker-year\").focus(function () {\n//   $(\".ui-datepicker-month\").hide();\n// });\n// }, []);\n","import React, { useEffect, useState } from \"react\";\nimport \"./card.css\";\n\nconst Card = (props) => {\n  useEffect(() => {\n    let item = props.item;\n    let branch = item.branch[props.location];\n    console.log(\"item\", item, branch, props.location);\n  }, []);\n  let ui = null;\n  // console.log(\n  //   \"item-undefined\",\n  //   props.item[props.location][\"price\"][\"currentPrice\"]\n  // );\n  if (props.item.branch[props.location][\"current_price\"] !== undefined) {\n    ui = props.item.branch[props.location][\"current_price\"];\n  }\n\n  return (\n    <>\n      <div class=\"col-lg-3 col-md-4 col-sm-3\">\n        <div class=\"card\">\n          <div class=\"overlay\">{props.item.Type}</div>\n          <img src={props.item.image} alt={props.item.Name} />\n          <div class=\"card-body\">\n            <h3 class=\"card-title\">\n              {props.item.Name}\n              {/* {props.item.Name}<span>({props.item.Name})</span> */}\n            </h3>\n            <div\n              class=\"edit-option\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => props.updateItem(props.item)}\n            >\n              <i class=\"fa fa-pencil-square-o\"></i>\n            </div>\n            {/* <div\n              class=\"trash-option\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => props.deleteItem(props.item)}\n            >\n              <i class=\"fa fa-trash\"></i>\n            </div> */}\n            <p>Desc: {props.item.description}</p>\n            <p>\n              Style:&ensp;\n              <b style={{ fontSize: \"18px\", textTransform: \"uppercase\" }}>\n                {props.item.style}\n              </b>\n            </p>\n            <p class=\"time\" style={{ textTransform: \"capitalize\" }}>\n              {/* {props.item.category} */}\n              {props.item.Type}\n            </p>\n            {/* <p class=\"time\">Dinner</p> */}\n            <div class=\"row quantity\">\n              {/* <p class=\"quantity\">Qty Per Unit:&ensp;</p>\n              <b>{props.item[props.location][\"quantityPerUnit\"]}</b>&ensp;&emsp; */}\n              <p class=\"quantity\">Min Unit:&ensp;</p>\n              <b>{props.item.branch[props.location][\"unit\"]}</b>\n            </div>\n            {/* <form></form> */}\n\n            <hr />\n            {/* <p class=\"food-rating\">\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\n            </p> */}\n\n            <p class=\"price \">\n              <i class=\" fa fa-inr\" aria-hidden=\"true\"></i>\n              {/* {props.item[props.location][\"price\"][\"currentPrice\"] === -1\n                ? props.item[props.location][\"price\"][\"cquarterPrice\"] !== -1\n                : props.item[props.location][\"price\"][\"currentPrice\"]} */}\n              {ui}\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"../../reusable/Card/Card\";\n\nconst Food = () => {\n  return (\n    <section>\n      <div className=\"row fooditem\">\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/supermarket.png\"\n              alt=\"addnew\"\n            />\n            <p className=\"title\">Add New Item</p>\n            <Link\n              to=\"/home/grocery/addnewitem\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/rice1.png\" alt=\"addnew\" />\n            <p className=\"title\">Rice</p>\n            <Link to=\"/home/grocery/rice\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/harvest.png\" alt=\"addnew\" />\n            <p className=\"title\">Fruits/Vegetables</p>\n            <Link\n              to=\"/home/grocery/fruitsvegs\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        {/* <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/cannedfood.png\"\n              alt=\"addnew\"\n            />\n            <p className=\"title\">Canned goods</p>\n            <Link\n              to=\"/home/grocery/cannedgoods\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div> */}\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/personalcare.png\"\n              alt=\"addnew\"\n            />\n            <p className=\"title\">Soap's</p>\n            <Link to=\"/home/grocery/soaps\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/softdrink.png\"\n              alt=\"addnew\"\n            />\n            <p className=\"title\">\n              SummerDrinks/\n              <br />\n              Beverages\n            </p>\n            <Link\n              to=\"/home/grocery/summer-drinks-beverages\"\n              className=\"stretched-link\"\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/personalcare.png\"\n              alt=\"addnew\"\n            />\n            <p className=\"title\">Pharmacy</p>\n            <Link to=\"/home/grocery/pharmacy\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img className=\"img-fluid\" src=\"/images/rice1.png\" alt=\"addnew\" />\n            <p className=\"title\">Organics</p>\n            <Link to=\"/home/grocery/organics\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        {/* <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/basket.png\"\n              alt=\"breakfast\"\n            />\n            <p className=\"title\">Cleaners</p>\n            <Link to=\"/home/grocery/cleaners\" className=\"stretched-link\"></Link>\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\n          <div className=\"cards\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/grocerycart.png\"\n              alt=\"lunch\"\n            />\n            <p className=\"title\">Others</p>\n            <Link to=\"/home/grocery/others\" className=\"stretched-link\"></Link>\n          </div>\n        </div> */}\n      </div>\n    </section>\n  );\n};\n\nexport default Food;\n","const PreviewCard = (props) => {\n  return (\n    <div className=\"card\">\n      <div className=\"overlay\">\n        {props.item.foodType === \"\" ? null : props.item.foodType}\n      </div>\n      <div className=\"preview\">preview</div>\n      <img\n        className={props.item.img.url !== \"\" ? \"\" : \"card-img\"}\n        id=\"cardImg\"\n        src={\n          props.item.img.url === \"\" ? \"/images/tray.png\" : props.item.img.url\n        }\n        alt=\"item name\"\n      />\n      {/* <img\n        className=\"card-img\"\n        id=\"cardImg\"\n        src=\"/images/tray.png\"\n        alt=\"item name\"\n      /> */}\n      <div className=\"card-body\">\n        <p className=\"item-name\">\n          {props.item.name === \"\" ? \"Item Name\" : props.item.name}&nbsp;\n          <span>\n            ({props.item.altName === \"\" ? \"alternative\" : props.item.altName})\n          </span>\n        </p>\n        <p className=\"item-desc\">\n          &ensp;\n          {props.item.desc === \"\"\n            ? \"Contains a small description of the item\"\n            : props.item.desc}\n        </p>\n        <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\n          {props.item.category === \"\" ? null : props.item.category}\n        </p>\n        {/* <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\n          {props.item.foodType === \"\" ? null : props.item.foodType}\n        </p> */}\n        <p className=\"item-style\">\n          Style:&nbsp;\n          <b style={{ textTransform: \"uppercase\" }}>\n            {props.item.style === \"\" ? \"\" : props.item.style}\n          </b>\n        </p>\n        <p className=\"item-quantity\">\n          Quantity:&nbsp;\n          <b>{props.item.minimumUnit}</b>\n        </p>\n      </div>\n      <div className=\"card-footer\">\n        {/* <p className=\"ratings\">\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n        </p> */}\n        <p className=\"price\">\n          <i className=\"fas fa-rupee\"></i>&nbsp;\n          {props.price === \"normalPrice\"\n            ? props.item.currentPrice\n            : props.item.cfullPrice}\n        </p>\n        <p>\n          Discount Percentage:{\" \"}\n          {props.price === \"normalPrice\"\n            ? 100 -\n              (props.item.currentPrice / props.item.actualPrice) * 100 +\n              \"%\"\n            : 100 - (props.item.cfullPrice / props.item.fullPrice) * 100 + \"%\"}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PreviewCard;\n","import React from \"react\";\nimport PreviewCard from \"./PreviewCard\";\n\nconst AddNewForm = (props) => {\n  let ui = null;\n  if (props.price !== null) {\n    if (props.price === \"quantityPrice\") {\n      ui = (\n        <div className=\"col-12 optional\">\n          <p>\n            Pick the Quantity\n            {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\n          </p>\n          <div className=\"single-row\">\n            <input\n              type=\"checkbox\"\n              id=\"quarter\"\n              name=\"quantity\"\n              value=\"quarter\"\n              onChange={props.onChangeHandler}\n            />\n            <label htmlFor=\"quarter\" className=\"label\">\n              Quarter\n            </label>\n            <label htmlFor=\"quarterPrice\" className=\"price\">\n              Actual Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"quarterPrice\"\n              name=\"quarterPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.quarterPrice}\n            />\n            <label htmlFor=\"cquaterPrice\" className=\"price\">\n              Current Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"cquarterPrice\"\n              name=\"cquarterPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.cquarterPrice}\n            />\n          </div>\n          <div className=\"single-row\">\n            <input\n              type=\"checkbox\"\n              id=\"half\"\n              name=\"quantity\"\n              value=\"half\"\n              onChange={props.onChangeHandler}\n            />\n            <label htmlFor=\"half\" className=\"label\">\n              Half\n            </label>\n            <label htmlFor=\"halfPrice\" className=\"price\">\n              Actual Price\n            </label>\n\n            <input\n              type=\"number\"\n              id=\"halfPrice\"\n              name=\"halfPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.halfPrice}\n            />\n            <label htmlFor=\"chalfPrice\" className=\"price\">\n              Current Price\n            </label>\n\n            <input\n              type=\"number\"\n              id=\"chalfPrice\"\n              name=\"chalfPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.chalfPrice}\n            />\n          </div>\n\n          <div className=\"single-row\">\n            <input\n              type=\"checkbox\"\n              id=\"full\"\n              name=\"quantity\"\n              value=\"full\"\n              onChange={props.onChangeHandler}\n            />\n            <label htmlFor=\"full\" className=\"label\">\n              Full\n            </label>\n            <label htmlFor=\"fullPrice\" className=\"price\">\n              Actual Price\n            </label>\n\n            <input\n              type=\"number\"\n              id=\"fullPrice\"\n              name=\"fullPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.fullPrice}\n            />\n            <label htmlFor=\"cfullPrice\" className=\"price\">\n              Current Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"cfullPrice\"\n              name=\"cfullPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.cfullPrice}\n            />\n          </div>\n        </div>\n      );\n    } else if (props.price === \"normalPrice\") {\n      ui = (\n        <div className=\"col-12 price\">\n          {/* <p>Actual Price</p>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            type=\"number\"\n            id=\"actualPrice\"\n            name=\"actualPrice\"\n            style={{ marginRight: \"15px\" }}\n            min=\"0\"\n            onChange={props.onChangeHandler}\n            value={props.item.actualPrice}\n          /> */}\n          <p>Current Price</p>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            type=\"number\"\n            id=\"currentPrice\"\n            name=\"currentPrice\"\n            min=\"0\"\n            onChange={props.onChangeHandler}\n            value={props.item.currentPrice}\n          />\n        </div>\n      );\n    }\n  }\n\n  return (\n    <form onSubmit={props.draftHandler}>\n      <div className=\"row\">\n        <div className=\"col-md-8\">\n          <div className=\"card-data\">\n            <div className=\"row\">\n              <div className=\"col-sm-5\">\n                <div className=\"inner-row\">\n                  <label htmlFor=\"name\">Enter Product Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.name}\n                    required\n                    autoComplete=\"off\"\n                  />\n                </div>\n\n                <div className=\"inner-row\">\n                  <label htmlFor=\"productId\">Enter Product Id</label>\n                  <input\n                    type=\"text\"\n                    id=\"productId\"\n                    name=\"productId\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.productId}\n                    required\n                    autoComplete=\"off\"\n                  />\n                </div>\n\n                <div className=\"inner-row\">\n                  <label htmlFor=\"desc\">Description</label>\n                  <textarea\n                    id=\"desc\"\n                    name=\"desc\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.desc}\n                    required\n                    autoComplete=\"off\"\n                  ></textarea>\n                </div>\n\n                <div className=\"inner-row\">\n                  <label htmlFor=\"img\">Upload the image</label>\n                  <input\n                    type=\"file\"\n                    id=\"img\"\n                    name=\"img\"\n                    onChange={props.onChangeHandler}\n                    required\n                  />\n                  <small>\n                    The preview of the image can be seen in the card\n                  </small>\n                </div>\n              </div>\n              <div className=\"col-sm-7\">\n                <div className=\"row\">\n                  <div className=\"col-md-4 check\">\n                    <p>Pick Category</p>\n                    <div className=\"single\">\n                      <input\n                        type=\"radio\"\n                        id=\"BreakFast\"\n                        value=\"BreakFast\"\n                        name=\"category\"\n                        onClick={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"BreakFast\">BreakFast</label>\n                    </div>\n                    <div className=\"single\">\n                      <input\n                        type=\"radio\"\n                        id=\"Lunch\"\n                        value=\"Lunch\"\n                        name=\"category\"\n                        onClick={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"Lunch\">Lunch</label>\n                    </div>\n                    <div className=\"single\">\n                      <input\n                        type=\"radio\"\n                        id=\"Dinner\"\n                        value=\"Dinner\"\n                        name=\"category\"\n                        onClick={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"dinner\">Dinner</label>\n                    </div>\n                  </div>\n                  {/* <div className=\"col-md-4 veg\">\n                    <p>Food Type</p>\n                    <input\n                      type=\"radio\"\n                      id=\"nonveg\"\n                      name=\"foodType\"\n                      value=\"non-veg\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"nonveg\">Non-Veg</label>\n\n                    <input\n                      type=\"radio\"\n                      id=\"veg\"\n                      name=\"foodType\"\n                      value=\"veg\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"veg\">Veg</label>\n                  </div> */}\n                  {/* <div className=\"col-md-4 style\">\n                    <p>Pick Style</p>\n                    <input\n                      type=\"radio\"\n                      id=\"southindian\"\n                      name=\"style\"\n                      value=\"southindian\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"southindian\">South Indian</label>\n\n                    <input\n                      type=\"radio\"\n                      id=\"chinese\"\n                      name=\"style\"\n                      value=\"chinese\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"chinese\">Chinese</label>\n                  </div> */}\n                  <div className=\"col-md-7\">\n                    <div className=\"unit\">\n                      <label htmlFor=\"actualUnit\">\n                        Total Unit:\n                        <br />\n                        {/* <small>(Optional)</small> */}\n                      </label>\n                      <input\n                        type=\"number\"\n                        id=\"actualUnit\"\n                        name=\"actualUnit\"\n                        min=\"1\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.actualUnit}\n                      />\n                    </div>\n                    {/* <div className=\"quantity\">\n                      <label htmlFor=\"unit\">Enter Minimum Unit:</label>\n                      <input\n                        type=\"number\"\n                        id=\"unit\"\n                        name=\"minimumUnit\"\n                        min=\"0\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.minimumUnit}\n                        required\n                      />\n                    </div>\n                    <div className=\"unit\">\n                      <label htmlFor=\"quantity\">\n                        Quantity Per Unit:\n                        <br />\n                      </label>\n                      <input\n                        type=\"number\"\n                        id=\"quantity\"\n                        name=\"quantityPerUnit\"\n                        min=\"1\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.quantityPerUnit}\n                        required\n                      />\n                    </div> */}\n                  </div>\n                  <div className=\"col-md-5 others\">\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"dealOfTheDay\"\n                        name=\"dealOfTheDay\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"dealOfTheDay\">Deal of the day</label>\n                    </div>\n                    {/* <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"onSale\"\n                        name=\"onSale\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"onSale\">On Sale</label>\n                    </div> */}\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"isProductAvailable\"\n                        name=\"isProductAvailable\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"isProductAvailable\">\n                        Product Available\n                      </label>\n                    </div>\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"bestSeller\"\n                        name=\"bestSeller\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"bestSeller\">Best Seller</label>\n                      {/* <label htmlFor=\"top\">Top Product</label> */}\n                    </div>\n                  </div>\n                  <div className=\"col-4\">\n                    <input\n                      type=\"radio\"\n                      id=\"normalPrice\"\n                      name=\"price\"\n                      value=\"normalPrice\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\n                  </div>\n                  {/* <div className=\"col-6\">\n                    <input\n                      type=\"radio\"\n                      id=\"quantityPrice\"\n                      name=\"price\"\n                      value=\"quantityPrice\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"quantityPrice\">\n                      &nbsp;Quantity Based Price\n                    </label>\n                  </div> */}\n                  {ui}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <PreviewCard item={props.item} price={props.price} />\n          <div className=\"button\">\n            <button type=\"submit\" className=\"submit-btn\">\n              Save\n            </button>\n            <button type=\"button\" className=\"submit-btn\">\n              Cancel\n            </button>\n            <button\n              type=\"reset\"\n              className=\"submit-btn\"\n              onClick={props.clearHandler}\n              // onClick={this.form.reset()}\n            >\n              Clear\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddNewForm;\n","import React from \"react\";\n// import { propTypes } from \"react-bootstrap/esm/Image\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst DeleteConfirmModal = (props) => {\n  return (\n    <Modal show={props.showModal} onHide={props.handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{props.body}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={props.handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default DeleteConfirmModal;\n","import React, { useState, useContext } from \"react\";\nimport AddNewForm from \"./AddNewForm\";\nimport $ from \"jquery\";\nimport { addItem } from \"../../../api/ItemDB\";\nimport AlertModal from \"../../../reusable/Modals/AlertModal\";\nimport AuthContext from \"../../../context/auth-context\";\nconst AddNew = (props) => {\n  const authCtx = useContext(AuthContext);\n  const [item, setItem] = useState({\n    id: \"\",\n    productId: \"\", // we generate it\n    name: \"\",\n    img: {\n      file: null,\n      url: \"\",\n    },\n    altName: \"\",\n    desc: \"\",\n    category: \"\", // breakfase, lunch, dinner\n    style: \"\", // southindian, northindian\n    foodType: \"\", // nonveg, veg\n    offer: 0, // actual price - offer price = current price\n    bestSeller: false,\n    currencyCode: 356, // 356 - INR\n    dealOfTheDay: false,\n    onSale: false,\n    minimumUnit: 0,\n    actualUnit: 0,\n    quantityPerUnit: 1,\n    isProductAvailable: false,\n    quaterPrice: 0,\n    halfPrice: 0,\n    fullPrice: 0,\n    cquaterPrice: 0,\n    chalfPrice: 0,\n    cfullPrice: 0,\n    actualPrice: 0,\n    currentPrice: 0, // doubt\n    // categories: [\"dhosa\"]\n    // foodAvailable: [\n    //   {\n    //     branch: \"vellore\",\n    //     minimumUnit: 0,\n    //     quantityPerUnit: 0,\n    //     isProductAvailable: false\n    //   }\n    // ],\n  });\n  const [price, setPrice] = useState(null);\n  const [alert, setAlert] = useState(null);\n\n  const onChangeHandler = (event) => {\n    console.log(\"event.name\", event.target.name, event.target.value);\n\n    // setChecked((prevState) => !prevState);\n\n    let value = event.target.value;\n    let ename = event.target.name;\n\n    if (ename === \"img\") {\n      value = event.target.files[0];\n      // console.log(\"url\", URL.createObjectURL(value));\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          img: {\n            file: value,\n            url: URL.createObjectURL(value),\n          },\n        };\n      });\n    } else if (\n      ename === \"dealOfTheDay\" ||\n      ename === \"onSale\" ||\n      ename === \"isProductAvailable\" ||\n      ename === \"bestSeller\"\n    ) {\n      setItem((prevState) => {\n        value = !prevState[event.target.name];\n        // console.log(event.target.name, value);\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    } else if (ename === \"price\") {\n      setPrice(value);\n    } else {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    }\n  };\n\n  const clearHandler = () => {\n    document.getElementById(\"img\").value = \"\";\n    $(\":checkbox\").prop(\"checked\", false);\n    $('input[name=\"category\"]').prop(\"checked\", false);\n    $('input[name=\"foodType\"]').prop(\"checked\", false);\n    $('input[name=\"style\"]').prop(\"checked\", false);\n    $('input[name=\"price\"]').prop(\"checked\", false);\n    setPrice(null);\n    setItem({\n      id: \"\",\n      productId: \"\", // we generate it\n      name: \"\",\n      img: {\n        file: null,\n        url: \"\",\n      },\n      altName: \"\",\n      desc: \"\",\n      category: \"\", // breakfase, lunch, dinner\n      style: \"\", // southindian, northindian\n      foodType: \"\", // nonveg, veg\n      offer: 0, // actual price - offer price = current price\n      bestSeller: false,\n      currencyCode: 356, // 356 - INR\n      dealOfTheDay: false,\n      onSale: false,\n      minimumUnit: 0,\n      actualUnit: 0,\n      quantityPerUnit: 1,\n      isProductAvailable: false,\n      quaterPrice: 0,\n      halfPrice: 0,\n      fullPrice: 0,\n      cquaterPrice: 0,\n      chalfPrice: 0,\n      cfullPrice: 0,\n      actualPrice: 0,\n      currentPrice: 0, // doubt\n      // categories: [\"dhosa\"]\n      // foodAvailable: [\n      //   {\n      //     branch: \"vellore\",\n      //     minimumUnit: 0,\n      //     quantityPerUnit: 0,\n      //     isProductAvailable: false\n      //   }\n      // ],\n    });\n  };\n\n  const draftHandler = (e) => {\n    e.preventDefault();\n    console.log(\"item\", item, price);\n    if (item.category === \"\") {\n      setAlert({\n        title: \"Missing Mandatory Fields\",\n        body: \"Select Category!!!\",\n        status: true,\n      });\n    }\n    // else if (item.foodType === \"\") {\n    //   setAlert({\n    //     title: \"Missing Mandatory Fields\",\n    //     body: \"Select FoodType!!!\",\n    //     status: true\n    //   });\n    // } else if (item.style === \"\") {\n    //   setAlert({\n    //     title: \"Missing Mandatory Fields\",\n    //     body: \"Select Style!!!\",\n    //     status: true\n    //   });\n    // }\n    else if (price === null) {\n      setAlert({\n        title: \"Missing Mandatory Fields\",\n        body: \"select normal price or quantity to proceed!!!\",\n        status: true,\n      });\n    } else {\n      addItem(item, price, props.type, authCtx, (isAdded) => {\n        if (isAdded) {\n          // db added\n          window.alert(\"Successfully Added!!!\");\n          clearHandler();\n        } else {\n          // error not adding\n          window.alert(\"Not Added... Try Again!!!\");\n        }\n      });\n    }\n  };\n\n  return (\n    <div class=\"add-new\">\n      {alert !== null && alert.status === true && (\n        <AlertModal\n          title={alert.title}\n          body={alert.body}\n          showModal={alert.status}\n          handleClose={() => setAlert(null)}\n        />\n      )}\n      <h2>Add one or more items</h2>\n      <div class=\"add-form\">\n        <AddNewForm\n          item={item}\n          onChangeHandler={onChangeHandler}\n          draftHandler={draftHandler}\n          clearHandler={clearHandler}\n          price={price}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AddNew;\n","const PreviewCard = (props) => {\n  return (\n    <div className=\"card\">\n      {/* <div className=\"overlay\">v</div> */}\n      <div className=\"overlay\">\n        {props.item.foodType === \"\" ? null : props.item.foodType}\n      </div>\n      <div className=\"preview\">preview</div>\n      <img\n        className={\n          props.item.img !== undefined && props.item.img.url !== \"\"\n            ? \"\"\n            : \"card-img\"\n        }\n        id=\"cardImg\"\n        src={\n          props.item.img !== undefined && props.item.img.url === \"\"\n            ? \"/images/tray.png\"\n            : props.item.img.url\n        }\n        alt=\"item name\"\n      />\n      {/* <img\n        className=\"card-img\"\n        id=\"cardImg\"\n        src=\"/images/tray.png\"\n        alt=\"item name\"\n      /> */}\n      <div className=\"card-body\">\n        <p className=\"item-name\">\n          {props.item.name === \"\" ? \"Item Name\" : props.item.name}&nbsp;\n          <span>\n            ({props.item.altName === \"\" ? \"alternative\" : props.item.altName})\n          </span>\n        </p>\n        <p className=\"item-desc\">\n          &ensp;\n          {props.item.desc === \"\"\n            ? \"Contains a small description of the item\"\n            : props.item.desc}\n        </p>\n        <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\n          {props.item.category === \"\" ? null : props.item.category}\n        </p>\n        {/* <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\n          {props.item.foodType === \"\" ? null : props.item.foodType}\n        </p> */}\n        {/* <p className=\"item-style\">\n          Style:&nbsp;\n          <b style={{ textTransform: \"uppercase\" }}>\n            {props.item.style === \"\" ? \"\" : props.item.style}\n          </b>\n        </p> */}\n        <p className=\"item-quantity\">\n          Quantity:&nbsp;\n          <b>{props.item.minimumUnit}</b>\n        </p>\n      </div>\n      <div className=\"card-footer\">\n        {/* <p className=\"ratings\">\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n          <span className=\"fas fa-star\"></span>\n        </p> */}\n        <p className=\"price\">\n          <i className=\"fas fa-rupee\"></i>&nbsp;\n          {props.price === \"normalPrice\"\n            ? props.item.currentPrice\n            : props.item.cfullPrice}\n        </p>\n        <p>\n          Discount Percentage:{\" \"}\n          {props.price === \"normalPrice\"\n            ? 100 -\n              (props.item.currentPrice / props.item.actualPrice) * 100 +\n              \"%\"\n            : 100 - (props.item.cfullPrice / props.item.fullPrice) * 100 + \"%\"}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PreviewCard;\n","import React, { useState } from \"react\";\nimport PreviewCard from \"./PreviewCard\";\n\nconst AddNewForm = (props) => {\n  // const [priceItem, setPriceItem] = useState([\n  //   {\n  //     id: 0,\n  //     quantity: 0,\n  //     units: \"\",\n  //     actualPrice: 0,\n  //     currentPrice: 0\n  //   }\n  // ]);\n\n  const addMoreQuantity = () => {\n    let prevState = props.item.priceItem;\n    let lastdata = prevState[prevState.length - 1];\n    let newId = lastdata.id + 1;\n    let data = {\n      id: newId,\n      quantity: 0,\n      units: \"\",\n      actualPrice: 0,\n      currentPrice: 0,\n    };\n    prevState = [...prevState, data];\n    // console.log(\"prevState\", prevState);\n    props.priceItemChangeHandler(prevState);\n  };\n\n  const reduceQuantity = () => {\n    let prevState = props.item.priceItem;\n    if (prevState.length > 1) {\n      prevState.pop();\n    }\n    // let lastdata = prevState[prevState.length - 1];\n    // let newId = lastdata.id + 1;\n    // let data = {\n    //   id: newId,\n    //   quantity: 0,\n    //   units: \"\",\n    //   actualPrice: 0,\n    //   currentPrice: 0\n    // };\n    prevState = [...prevState];\n    props.priceItemChangeHandler(prevState);\n  };\n\n  const onChangeHandler = (e, id) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    let list = [...props.item.priceItem];\n    let index = list.findIndex((item) => {\n      return item.id === id;\n    });\n    let data = \"\";\n    if (name === \"units\") {\n      data = {\n        ...list[index],\n        [name]: value,\n      };\n    } else {\n      data = {\n        ...list[index],\n        [name]: parseFloat(value),\n      };\n    }\n    list[index] = data;\n    // console.log(\"updated List\", list);\n    // props.setPriceItem(list);\n    props.priceItemChangeHandler(list);\n  };\n\n  let ui = null;\n  if (props.price !== null) {\n    if (props.price === \"quantityPrice\") {\n      ui = (\n        <div className=\"col-12 optional\">\n          <p>\n            Pick the Quantity\n            {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\n          </p>\n          {props.item.priceItem.map((price) => {\n            return (\n              <div key={price.id} className=\"single-row\">\n                <div className=\"pic\">\n                  <input\n                    className=\"pics\"\n                    type=\"number\"\n                    id=\"quantity\"\n                    name=\"quantity\"\n                    min=\"0\"\n                    max=\"1000\"\n                    value={price.quantity}\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                  />\n\n                  <select\n                    className=\"amo\"\n                    name=\"units\"\n                    id=\"units\"\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                    value={price.units}\n                  >\n                    <option value=\"\">--Select--</option>\n                    <option value=\"grams\">grams</option>\n                    <option value=\"kilograms\">kilograms</option>\n                    <option value=\"millilitres\">millilitres</option>\n                    <option value=\"litres\">litres</option>\n                  </select>\n                </div>\n                <div>\n                  <label htmlFor=\"actualPrice\" className=\"price\">\n                    Actual Price&nbsp;\n                  </label>\n                  <i className=\"fas fa-rupee\"></i>\n                  <input\n                    type=\"number\"\n                    id=\"actualPrice\"\n                    name=\"actualPrice\"\n                    min=\"0\"\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                    value={price.actualPrice}\n                  />\n                  <label htmlFor=\"currentPrice\" className=\"price\">\n                    Current Price&nbsp;\n                  </label>\n                  <i className=\"fas fa-rupee\"></i>\n                  <input\n                    type=\"number\"\n                    id=\"currentPrice\"\n                    name=\"currentPrice\"\n                    min=\"0\"\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                    value={price.currentPrice}\n                  />\n                </div>\n              </div>\n            );\n          })}\n\n          <button type=\"button\" onClick={addMoreQuantity}>\n            <i class=\"fas fa-plus-circle\"></i>\n          </button>\n          <button type=\"button\" onClick={reduceQuantity}>\n            <i class=\"fas fa-minus-circle\"></i>\n          </button>\n          {/* <div className=\"single-row\">\n            <input\n              type=\"checkbox\"\n              id=\"half\"\n              name=\"quantity\"\n              value=\"half\"\n              onChange={props.onChangeHandler}\n            />\n            <label htmlFor=\"half\" className=\"label\">\n              Half\n            </label>\n            <label htmlFor=\"halfPrice\" className=\"price\">\n              Actual Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"halfPrice\"\n              name=\"halfPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.halfPrice}\n            />\n            <label htmlFor=\"chalfPrice\" className=\"price\">\n              Current Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"chalfPrice\"\n              name=\"chalfPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.chalfPrice}\n            />\n          </div>\n\n          <div className=\"single-row\">\n            <input\n              type=\"checkbox\"\n              id=\"full\"\n              name=\"quantity\"\n              value=\"full\"\n              onChange={props.onChangeHandler}\n            />\n            <label htmlFor=\"full\" className=\"label\">\n              Full\n            </label>\n            <label htmlFor=\"fullPrice\" className=\"price\">\n              Actual Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"fullPrice\"\n              name=\"fullPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.fullPrice}\n            />\n            <label htmlFor=\"cfullPrice\" className=\"price\">\n              Current Price\n            </label>\n            <input\n              type=\"number\"\n              id=\"cfullPrice\"\n              name=\"cfullPrice\"\n              min=\"0\"\n              onChange={props.onChangeHandler}\n              value={props.item.cfullPrice}\n            />\n          </div> */}\n        </div>\n      );\n    } else if (props.price === \"normalPrice\") {\n      ui = (\n        <div className=\"col-12 price\">\n          {/* <p>Actual Price</p>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            type=\"number\"\n            id=\"actualPrice\"\n            name=\"actualPrice\"\n            style={{ marginRight: \"15px\" }}\n            min=\"0\"\n            onChange={props.onChangeHandler}\n            value={props.item.priceItem.actualPrice}\n          /> */}\n          <p>Current Price</p>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            type=\"number\"\n            id=\"currentPrice\"\n            name=\"currentPrice\"\n            min=\"0\"\n            onChange={props.onChangeHandler}\n            value={props.item.currentPrice}\n          />\n        </div>\n      );\n    }\n  }\n\n  return (\n    <form onSubmit={props.draftHandler}>\n      <div className=\"row\">\n        <div className=\"col-md-8\">\n          <div className=\"card-data\">\n            <div className=\"row\">\n              <div className=\"col-sm-5\">\n                <div className=\"inner-row\">\n                  <label htmlFor=\"name\">Enter Product Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.name}\n                    required\n                    autoComplete=\"off\"\n                  />\n                </div>\n\n                {/* <div className=\"inner-row\">\n                  <label htmlFor=\"altName\">\n                    Enter Brand Name<small>&nbsp;(optional)</small>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"altName\"\n                    name=\"altName\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.altName}\n                    required\n                    autoComplete=\"off\"\n                  />\n                </div> */}\n                <div className=\"inner-row\">\n                  <label htmlFor=\"altName\">Enter Product Id</label>\n                  <input\n                    type=\"text\"\n                    id=\"productId\"\n                    name=\"productId\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.productId}\n                    required\n                    autoComplete=\"off\"\n                  />\n                </div>\n\n                <div className=\"inner-row\">\n                  <label htmlFor=\"desc\">Description</label>\n                  <textarea\n                    id=\"desc\"\n                    name=\"desc\"\n                    onChange={props.onChangeHandler}\n                    value={props.item.desc}\n                    required\n                    autoComplete=\"off\"\n                  ></textarea>\n                </div>\n\n                <div className=\"inner-row\">\n                  <label htmlFor=\"img\">Upload the image</label>\n                  <input\n                    type=\"file\"\n                    id=\"img\"\n                    name=\"img\"\n                    onChange={props.onChangeHandler}\n                    required\n                  />\n                  <small>\n                    The preview of the image can be seen in the card\n                  </small>\n                </div>\n              </div>\n              <div className=\"col-sm-7\">\n                <div className=\"row\">\n                  <div className=\"col-md-8 check\">\n                    <p>Pick Category</p>\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"Fruits_Vegetables\"\n                            value=\"Fruits_Vegetables\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"Fruits_Vegetables\">\n                            Fruits_Vegetables\n                          </label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"Rice\"\n                            value=\"Rice\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"Rice\">Rice</label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"Summer_Drinks_Beverages\"\n                            value=\"Summer_Drinks_Beverages\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"Summer_Drinks_Beverages\">\n                            Summer_Drinks_Beverages\n                          </label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"soaps\"\n                            value=\"soaps\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"soaps\">Soaps</label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"Pharmacy\"\n                            value=\"Pharmacy\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"Pharmacy\">Pharmacy</label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"Organics\"\n                            value=\"Organics\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"Organics\">Organics</label>\n                        </div>\n                      </div>\n                      {/* <div className=\"col-md-6\">\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"personalCare\"\n                            value=\"personalCare\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"personalCare\">Personal Care</label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"cleaners\"\n                            value=\"cleaners\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"cleaners\">Cleaners</label>\n                        </div>\n                        <div className=\"single\">\n                          <input\n                            type=\"radio\"\n                            id=\"others\"\n                            value=\"others\"\n                            name=\"category\"\n                            onChange={props.onChangeHandler}\n                          />\n                          <label htmlFor=\"others\">Others</label>\n                        </div>\n                      </div> */}\n                    </div>\n                  </div>\n                  {/* <div className=\"col-md-4 veg\">\n                    <p>Food Type</p>\n                    <input\n                      type=\"radio\"\n                      id=\"nonveg\"\n                      name=\"foodType\"\n                      value=\"non-veg\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"nonveg\">Non-Veg</label>\n\n                    <input\n                      type=\"radio\"\n                      id=\"veg\"\n                      name=\"foodType\"\n                      value=\"veg\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"veg\">Veg</label>\n                  </div> */}\n                  <div className=\"col-md-7\">\n                    <div className=\"unit\">\n                      <label htmlFor=\"actualUnit\">Total Unit:</label>\n                      <input\n                        type=\"number\"\n                        id=\"actualUnit\"\n                        name=\"actualUnit\"\n                        min=\"0\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.actualUnit}\n                        required\n                      />\n                    </div>\n                    {/* <div className=\"quantity\">\n                      <label htmlFor=\"unit\">Enter Minimum Unit:</label>\n                      <input\n                        type=\"number\"\n                        id=\"unit\"\n                        name=\"minimumUnit\"\n                        min=\"0\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.minimumUnit}\n                        required\n                      />\n                    </div>\n                    <div className=\"unit\">\n                      <label htmlFor=\"quantity\">\n                        Quantity Per Unit:\n                        <br />\n                        <small>(Optional)</small>\n                      </label>\n                      <input\n                        type=\"number\"\n                        id=\"quantity\"\n                        name=\"quantityPerUnit\"\n                        min=\"1\"\n                        onChange={props.onChangeHandler}\n                        value={props.item.quantityPerUnit}\n                      />\n                    </div> */}\n                  </div>\n                  <div className=\"col-md-5 others\">\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"dealOfTheDay\"\n                        name=\"dealOfTheDay\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"dealOfTheDay\">Deal of the day</label>\n                    </div>\n                    {/* <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"onSale\"\n                        name=\"onSale\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"onSale\">On Sale</label>\n                    </div> */}\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"isProductAvailable\"\n                        name=\"isProductAvailable\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"isProductAvailable\">\n                        Product Available\n                      </label>\n                    </div>\n                    <div className=\"single\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"bestSeller\"\n                        name=\"bestSeller\"\n                        onChange={props.onChangeHandler}\n                      />\n                      <label htmlFor=\"bestSeller\">Best Seller</label>\n                      {/* <label htmlFor=\"top\">Top Product</label> */}\n                    </div>\n                  </div>\n                  <div className=\"col-4\">\n                    <input\n                      type=\"radio\"\n                      id=\"normalPrice\"\n                      name=\"price\"\n                      value=\"normalPrice\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\n                  </div>\n                  {/* <div className=\"col-6\">\n                    <input\n                      type=\"radio\"\n                      id=\"quantityPrice\"\n                      name=\"price\"\n                      value=\"quantityPrice\"\n                      onChange={props.onChangeHandler}\n                    />\n                    <label htmlFor=\"quantityPrice\">\n                      &nbsp;Quantity Based Price\n                    </label>\n                  </div> */}\n                  {/* <div className=\"col-12 price\">\n                    <p>Actual Price</p>\n                    <i className=\"fas fa-rupee\"></i>\n                    <input\n                      type=\"number\"\n                      id=\"actualPrice\"\n                      name=\"actualPrice\"\n                      style={{ marginRight: \"15px\" }}\n                      min=\"0\"\n                      onChange={props.onChangeHandler}\n                      value={props.item.actualPrice}\n                    />\n                    <p>Current Price</p>\n                    <i className=\"fas fa-rupee\"></i>\n                    <input\n                      type=\"number\"\n                      id=\"currentPrice\"\n                      name=\"currentPrice\"\n                      min=\"0\"\n                      onChange={props.onChangeHandler}\n                      value={props.item.currentPrice}\n                    />\n                  </div> */}\n                  {ui}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <PreviewCard item={props.item} price={props.price} />\n          <div className=\"button\">\n            <button type=\"submit\" className=\"submit-btn\">\n              Save\n            </button>\n            <button type=\"button\" className=\"submit-btn\">\n              Cancel\n            </button>\n            <button\n              type=\"reset\"\n              className=\"submit-btn\"\n              onClick={props.clearHandler}\n              // onClick={this.form.reset()}\n            >\n              Clear\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddNewForm;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport AddNewForm from \"./AddNewForm\";\nimport $ from \"jquery\";\nimport { addItem } from \"../../../api/ItemDB\";\nimport AlertModal from \"../../../reusable/Modals/AlertModal\";\nimport AuthContext from \"../../../context/auth-context\";\n\nconst AddNewItem = (props) => {\n  const authCtx = useContext(AuthContext);\n  const [item, setItem] = useState({\n    id: \"\",\n    productId: \"\", // we generate it\n    name: \"\",\n    img: {\n      file: null,\n      url: \"\",\n    },\n    // altName: \"\", // brand name\n    desc: \"\",\n    category: \"\", // breakfase, lunch, dinner\n    // style: \"\",\n    foodType: \"\", // nonveg, veg\n    offer: 0, // actual price - offer price = current price\n    bestSeller: false,\n    currencyCode: 356, // 356 - INR\n    dealOfTheDay: false,\n    onSale: false,\n    minimumUnit: 0,\n    actualUnit: 0,\n    quantityPerUnit: 1,\n    isProductAvailable: false,\n    priceItem: [\n      {\n        id: 0,\n        quantity: 0,\n        units: \"\",\n        actualPrice: 0,\n        currentPrice: 0,\n      },\n    ],\n    actualPrice: 0,\n    currentPrice: 0, // doubt\n    // categories: [\"dhosa\"]\n    // foodAvailable: [\n    //   {\n    //     branch: \"vellore\",\n    //     minimumUnit: 0,\n    //     quantityPerUnit: 0,\n    //     isProductAvailable: false\n    //   }\n    // ],\n  });\n  const [price, setPrice] = useState(null);\n  const [alert, setAlert] = useState(null);\n  // const [priceChoice, setPriceChoice] = useState();\n  // useEffect(() => {\n  //   if (price === \"normalPrice\") {\n  //     // console.log(\"normalpyy\");\n\n  //     setItem((prevState) => {\n  //       return {\n  //         ...prevState,\n  //         priceItem: {\n  //           actualPrice: 0,\n  //           currentPrice: 0\n  //         }\n  //       };\n  //     });\n  //   } else {\n  //     // console.log(\"dvgfdihbkvdjk\");\n\n  //     setItem((prevState) => {\n  //       return {\n  //         ...prevState,\n  //         priceItem: [\n  //           {\n  //             id: 0,\n  //             quantity: 0,\n  //             units: \"\",\n  //             actualPrice: 0,\n  //             currentPrice: 0\n  //           }\n  //         ]\n  //       };\n  //     });\n  //   }\n  // }, [price]);\n\n  const onChangeHandler = (event) => {\n    console.log(\"event.name\", event.target.name, event.target.value);\n\n    // setChecked((prevState) => !prevState);\n\n    let value = event.target.value;\n    let ename = event.target.name;\n\n    if (ename === \"img\") {\n      value = event.target.files[0];\n      // console.log(\"url\", URL.createObjectURL(value));\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          img: {\n            file: value,\n            url: URL.createObjectURL(value),\n          },\n        };\n      });\n    } else if (\n      ename === \"dealOfTheDay\" ||\n      ename === \"onSale\" ||\n      ename === \"isProductAvailable\" ||\n      ename === \"bestSeller\"\n    ) {\n      setItem((prevState) => {\n        value = !prevState[event.target.name];\n        // console.log(event.target.name, value);\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    } else if (ename === \"price\") {\n      setPrice(value);\n      if (value === \"normalPrice\") {\n        setItem((prevState) => {\n          return {\n            ...prevState,\n            priceItem: {\n              actualPrice: 0,\n              currentPrice: 0,\n            },\n          };\n        });\n      } else {\n        setItem((prevState) => {\n          return {\n            ...prevState,\n            priceItem: [\n              {\n                id: 0,\n                quantity: 0,\n                units: \"\",\n                actualPrice: 0,\n                currentPrice: 0,\n              },\n            ],\n          };\n        });\n      }\n    } else if (ename === \"actualPrice\") {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          priceItem: {\n            ...prevState.priceItem,\n            actualPrice: value,\n          },\n        };\n      });\n    } else if (ename === \"currentPrice\") {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          // priceItem: {\n          //   ...prevState.priceItem,\n          //   currentPrice: value,\n          // },\n          [event.target.name]: value,\n        };\n      });\n    } else {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    }\n  };\n\n  const clearHandler = () => {\n    document.getElementById(\"img\").value = \"\";\n    $(\":checkbox\").prop(\"checked\", false);\n    $('input[name=\"category\"]').prop(\"checked\", false);\n    $('input[name=\"foodType\"]').prop(\"checked\", false);\n    $('input[name=\"style\"]').prop(\"checked\", false);\n    $('input[name=\"price\"]').prop(\"checked\", false);\n    setPrice(null);\n    setItem({\n      id: \"\",\n      productId: \"\", // we generate it\n      name: \"\",\n      img: {\n        file: null,\n        url: \"\",\n      },\n      // altName: \"\", // brand name\n      desc: \"\",\n      category: \"\", // breakfase, lunch, dinner\n      // style: \"\",\n      foodType: \"\", // nonveg, veg\n      offer: 0, // actual price - offer price = current price\n      bestSeller: false,\n      currencyCode: 356, // 356 - INR\n      dealOfTheDay: false,\n      onSale: false,\n      minimumUnit: 0,\n      actualUnit: 0,\n      quantityPerUnit: 1,\n      isProductAvailable: false,\n      priceItem: [\n        {\n          id: 0,\n          quantity: 0,\n          units: \"\",\n          actualPrice: 0,\n          currentPrice: 0,\n        },\n      ],\n      actualPrice: 0,\n      currentPrice: 0, // doubt\n      // categories: [\"dhosa\"]\n      // foodAvailable: [\n      //   {\n      //     branch: \"vellore\",\n      //     minimumUnit: 0,\n      //     quantityPerUnit: 0,\n      //     isProductAvailable: false\n      //   }\n      // ],\n    });\n  };\n\n  const draftHandler = (e) => {\n    console.log(\"drafthandler\");\n    e.preventDefault();\n    console.log(\"item\", item, price);\n    if (item.category === \"\") {\n      setAlert({\n        title: \"Missing Mandatory Fields\",\n        body: \"Select Category!!!\",\n        status: true,\n      });\n    }\n    // else if (item.foodType === \"\") {\n    //   setAlert({\n    //     title: \"Missing Mandatory Fields\",\n    //     body: \"Select FoodType!!!\",\n    //     status: true,\n    //   });\n    // }\n    // else if (item.style === \"\") {\n    //   setAlert({\n    //     title: \"Missing Mandatory Fields\",\n    //     body: \"Select Style!!!\",\n    //     status: true,\n    //   });\n    // }\n    else if (price === null) {\n      setAlert({\n        title: \"Missing Mandatory Fields\",\n        body: \"select normal price!!!\",\n        // body: \"select normal price or quantity to proceed!!!\",\n        status: true,\n      });\n    } else {\n      let isAddItem = true;\n\n      let pricee = item;  \n      if (pricee.length === undefined || pricee.length === null) {\n        // priceItem is map\n        // if (pricee.actualPrice === 0 || pricee.currentPrice === 0) {\n        if (pricee.currentPrice === 0) {\n          setAlert({\n            title: \"Missing Mandatory Fields\",\n            body: \"Value should be greater than 0!!!\",\n            status: true,\n          });\n          isAddItem = false;\n        }\n      } else {\n        // priceItem is array\n        for (let i = 0; i < pricee.length; i++) {\n          if (pricee[i].units === \"\") {\n            setAlert({\n              title: \"Missing Mandatory Fields\",\n              body: \"select units for all quantity like kilogram, liters etc!!!\",\n              status: true,\n            });\n            isAddItem = false;\n            break;\n          } else if (\n            // pricee[i].quantity <= 0 ||\n            // pricee[i].actualPrice <= 0 ||\n            pricee[i].currentPrice <= 0\n          ) {\n            setAlert({\n              title: \"Missing Mandatory Fields\",\n              body: \"Price should not be 0!!!\",\n              // body: \"Quantity or Price should not be 0!!!\",\n              status: true,\n            });\n            isAddItem = false;\n            break;\n          }\n        }\n      }\n      console.log(\"isaddItem\", isAddItem, props.type, authCtx);\n      if (isAddItem) {\n        addItem(item, price, props.type, authCtx, (isAdded) => {\n          if (isAdded) {\n            // db added\n            window.alert(\"Successfully Added!!!\");\n            clearHandler();\n          } else {\n            // error not adding\n            window.alert(\"Not Added... Try Again!!!\");\n          }\n        });\n      }\n      // console.log(\"new Data\", item);\n    }\n  };\n\n  return (\n    <div class=\"add-new\">\n      {alert !== null && alert.status === true && (\n        <AlertModal\n          title={alert.title}\n          body={alert.body}\n          showModal={alert.status}\n          handleClose={() => setAlert(null)}\n        />\n      )}\n      <h2>Add one or more items</h2>\n      <div class=\"add-form\">\n        <AddNewForm\n          item={item}\n          onChangeHandler={onChangeHandler}\n          priceItemChangeHandler={(list) =>\n            setItem((prevState) => {\n              // console.log(\"list\", list);\n              return {\n                ...prevState,\n                priceItem: list,\n              };\n            })\n          }\n          draftHandler={draftHandler}\n          clearHandler={clearHandler}\n          price={price}\n        />\n        ;\n      </div>\n    </div>\n  );\n};\n\nexport default AddNewItem;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./EditModal.module.css\";\nimport \"./EditModal.css\";\nimport Card from \"../Card/Card\";\nimport Backdrop from \"../Backdrop\";\nimport $ from \"jquery\";\n\nconst ModalOverlay = (props) => {\n  const [item, setItem] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [quantity, setQuantity] = useState({\n    quarter: false,\n    half: false,\n    full: false,\n  });\n  // const [imgView, setImgView] = useState(false);\n\n  useEffect(() => {\n    let item = props.item;\n    if (item !== null) {\n      console.log(\"item\", item);\n      setItem(item);\n      setPrice(\"normalPrice\");\n      // if (\n      //   item.branch[props.location][\"current_price\"] === -1\n      //   // &&\n      //   // item.branch[props.location][\"actualPrice\"] === -1\n      // ) {\n      //   let data = {\n      //     quarter: false,\n      //     half: false,\n      //     full: false\n      //   };\n      //   // if (\n      //   //   item.branch[props.location][\"quarterPrice\"] > 0 &&\n      //   //   item.branch[props.location][\"cquarterPrice\"] > 0\n      //   // ) {\n      //   //   data.quarter = true;\n      //   // }\n      //   // if (\n      //   //   item.branch[props.location][\"halfPrice\"] > 0 &&\n      //   //   item.branch[props.location][\"chalfPrice\"] > 0\n      //   // ) {\n      //   //   data.half = true;\n      //   // }\n      //   // if (\n      //   //   item.branch[props.location][\"fullPrice\"] > 0 &&\n      //   //   item.branch[props.location][\"cfullPrice\"] > 0\n      //   // ) {\n      //   //   data.full = true;\n      //   // }\n      //   // setPrice(\"quantityPrice\");\n      //   setQuantity(data);\n      // } else {\n      //   setPrice(\"normalPrice\");\n      // }\n    }\n  }, [props.item, props.location]);\n\n  const onChangeHandler = (event) => {\n    // console.log(\"event.name\", event.target.name, event.target.value, item);\n    // setChecked((prevState) => !prevState);\n    let value = event.target.value;\n    let ename = event.target.name;\n    // console.log(\"ename\", ename, value);\n\n    if (ename === \"img\") {\n      value = event.target.files[0];\n      // console.log(\"url\", URL.createObjectURL(value));\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [ename]: value,\n        };\n      });\n    } else if (\n      ename === \"dealoftheday\" ||\n      ename === \"onsale\" ||\n      ename === \"Bestseller\" ||\n      ename === \"isproductavailable\"\n    ) {\n      if (ename === \"isproductavailable\") {\n        setItem((prevState) => {\n          value = !prevState[event.target.name];\n          return {\n            ...prevState,\n            [ename]: value,\n          };\n        });\n      } else {\n        setItem((prevState) => {\n          value = !prevState.branch[props.location][event.target.name];\n          // console.log(event.target.name, value);\n          let data = {\n            ...prevState,\n          };\n          data.branch[props.location] = {\n            ...prevState.branch[props.location],\n            [event.target.name]: value,\n          };\n          return data;\n        });\n      }\n    } else if (ename === \"price\") {\n      setPrice(value);\n    } else if (ename === \"actualPrice\") {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [props.location]: {\n            ...prevState[props.location],\n            price: {\n              ...prevState[props.location][\"price\"],\n              actualPrice: value,\n            },\n          },\n        };\n      });\n    } else if (ename === \"current_price\") {\n      setItem((prevState) => {\n        let data = {\n          ...prevState,\n        };\n        data.branch[props.location] = {\n          ...prevState.branch[props.location],\n          [event.target.name]: value,\n        };\n        return data;\n      });\n    } else if (ename === \"quantity\") {\n      console.log(\"quantity\", value);\n      if (value === \"quarter\") {\n        setQuantity((prevState) => {\n          return {\n            ...prevState,\n            quarter: !prevState.quarter,\n          };\n        });\n      } else if (value === \"half\") {\n        setQuantity((prevState) => {\n          return {\n            ...prevState,\n            half: !prevState.half,\n          };\n        });\n      } else if (value === \"full\") {\n        setQuantity((prevState) => {\n          return {\n            ...prevState,\n            full: !prevState.full,\n          };\n        });\n      }\n    } else if (ename === \"quarterPrice\" || ename === \"cquarterPrice\") {\n      let data = {\n        ...item[props.location][\"price\"],\n        quarterPrice: value,\n      };\n      if (ename === \"cquarterPrice\") {\n        data = {\n          ...item[props.location][\"price\"],\n          cquarterPrice: value,\n        };\n      }\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [props.location]: {\n            ...prevState[props.location],\n            price: data,\n          },\n        };\n      });\n    } else if (ename === \"halfPrice\" || ename === \"chalfPrice\") {\n      let data = {\n        ...item[props.location][\"price\"],\n        halfPrice: value,\n      };\n      if (ename === \"chalfPrice\") {\n        data = {\n          ...item[props.location][\"price\"],\n          chalfPrice: value,\n        };\n      }\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [props.location]: {\n            ...prevState[props.location],\n            price: data,\n          },\n        };\n      });\n    } else if (ename === \"fullPrice\" || ename === \"cfullPrice\") {\n      let data = {\n        ...item[props.location][\"price\"],\n        fullPrice: value,\n      };\n      if (ename === \"cfullPrice\") {\n        data = {\n          ...item[props.location][\"price\"],\n          cfullPrice: value,\n        };\n      }\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [props.location]: {\n            ...prevState[props.location],\n            price: data,\n          },\n        };\n      });\n    } else if (\n      ename === \"unit\" ||\n      ename === \"quantityPerUnit\" ||\n      ename === \"minimumUnit\"\n    ) {\n      setItem((prevState) => {\n        let data = {\n          ...prevState,\n        };\n        data.branch[props.location] = {\n          ...prevState.branch[props.location],\n          [event.target.name]: value,\n        };\n        return data;\n        // return {\n        //   ...prevState,\n        //   [props.location]: {\n        //     ...prevState[props.location],\n        //     [ename]: value,\n        //   },\n        // };\n      });\n    } else {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    }\n  };\n\n  const getFile1 = () => {\n    $(\"#uploadButton1\").on(\"click\", function () {\n      $(\"#img\").click();\n    });\n\n    $(\"#img\").change(function () {\n      var file = this.files[0];\n      console.log(file);\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        $(\"#uploadButton1\").css(\n          \"background-image\",\n          'url(\"' + reader.result + '\")'\n        );\n      };\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n      }\n    });\n  };\n\n  const submitHandler = () => {\n    // console.log(\"UpdatedItem\", item);\n    // when mandatory fields are applied then proceed\n    if (price === \"quantityPrice\") {\n      if (\n        quantity.quarter === false &&\n        quantity.half === false &&\n        quantity.full === false\n      ) {\n        alert(\"Pick Quantity or Choose Normal Price!!!\");\n      } else {\n        // let count = 0;\n        // let trueCount = 0;\n        let isUpdate = true;\n        if (quantity.quarter === true) {\n          // trueCount++;\n          if (\n            item[props.location][\"price\"][\"quarterPrice\"] <= 0 &&\n            item[props.location][\"price\"][\"cquarterPrice\"] <= 0\n          ) {\n            alert(\"Update Prices, If Quarter Quantity is Picked!!!\");\n            // props.updateItem(item, price, quantity);\n            isUpdate = false;\n            // count--;\n          } else {\n            // count++;\n          }\n        }\n        if (quantity.half === true) {\n          // trueCount++;\n          if (\n            item[props.location][\"price\"][\"halfPrice\"] <= 0 &&\n            item[props.location][\"price\"][\"chalfPrice\"] <= 0\n          ) {\n            alert(\"Update Prices, If Half Quantity is Picked!!!\");\n            // props.updateItem(item, price, quantity);\n            isUpdate = false;\n            // count--;\n          } else {\n            // count++;\n          }\n        }\n        if (quantity.full === true) {\n          // trueCount++;\n          if (\n            item[props.location][\"price\"][\"fullPrice\"] <= 0 &&\n            item[props.location][\"price\"][\"cfullPrice\"] <= 0\n          ) {\n            alert(\"Update Prices, If Full Quantity is Picked!!!\");\n            // props.updateItem(item, price, quantity);\n            isUpdate = false;\n            // count--;\n          } else {\n            // count++;\n          }\n        }\n        if (isUpdate) {\n          props.updateItem(item, price, quantity);\n          // console.log(\"isUpdate-if\", isUpdate);\n        }\n        // else {\n        //   console.log(\"isUpdate-else\", isUpdate);\n        // }\n      }\n    } else {\n      if (\n        // item[props.location][\"price\"][\"actualPrice\"] > 0 &&\n        item.branch[props.location][\"current_price\"] > 0\n      ) {\n        props.updateItem(item, price, quantity, \"Food\");\n      } else {\n        alert(\"Update Actual/Current Prices!!!\");\n      }\n    }\n  };\n\n  let ui = null;\n  if (price !== null) {\n    // if (price === \"quantityPrice\") {\n    //   ui = (\n    //     <div className=\"col-12\">\n    //       <p>\n    //         Pick the Quantity\n    //         {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\n    //       </p>\n    //       <div className={styles.singlerow}>\n    //         <input\n    //           type=\"checkbox\"\n    //           id=\"quarter\"\n    //           name=\"quantity\"\n    //           value=\"quarter\"\n    //           onChange={onChangeHandler}\n    //           checked={quantity.quarter}\n    //         />\n    //         <label htmlFor=\"quarter\" className=\"label\">\n    //           Quarter\n    //         </label>\n    //         <label htmlFor=\"quaterPrice\" className={styles.price}>\n    //           Actual Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           className={styles.singlenum}\n    //           id=\"quarterPrice\"\n    //           name=\"quarterPrice\"\n    //           min=\"0\"\n    //           value={item[props.location][\"price\"][\"quarterPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //         <label htmlFor=\"cquaterPrice\" className={styles.price}>\n    //           Current Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           id=\"cquarterPrice\"\n    //           name=\"cquarterPrice\"\n    //           min=\"0\"\n    //           className={styles.singlenum}\n    //           value={item[props.location][\"price\"][\"cquarterPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //       </div>\n    //       <div className={styles.singlerow}>\n    //         <input\n    //           type=\"checkbox\"\n    //           id=\"half\"\n    //           name=\"quantity\"\n    //           value=\"half\"\n    //           checked={quantity.half}\n    //           onChange={onChangeHandler}\n    //         />\n    //         <label htmlFor=\"half\" className=\"label\">\n    //           Half\n    //         </label>\n    //         <label htmlFor=\"halfPrice\" className={styles.price}>\n    //           Actual Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           id=\"halfPrice\"\n    //           className={styles.singlenum}\n    //           name=\"halfPrice\"\n    //           min=\"0\"\n    //           value={item[props.location][\"price\"][\"halfPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //         <label htmlFor=\"chalfPrice\" className={styles.price}>\n    //           Current Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           id=\"chalfPrice\"\n    //           name=\"chalfPrice\"\n    //           min=\"0\"\n    //           className={styles.singlenum}\n    //           value={item[props.location][\"price\"][\"chalfPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //       </div>\n\n    //       <div className={styles.singlerow}>\n    //         <input\n    //           type=\"checkbox\"\n    //           id=\"full\"\n    //           name=\"quantity\"\n    //           value=\"full\"\n    //           checked={quantity.full}\n    //           onChange={onChangeHandler}\n    //         />\n    //         <label htmlFor=\"full\" className=\"label\">\n    //           Full\n    //         </label>\n    //         <label htmlFor=\"fullPrice\" className={styles.price}>\n    //           Actual Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           id=\"fullPrice\"\n    //           name=\"fullPrice\"\n    //           min=\"0\"\n    //           className={styles.singlenum}\n    //           value={item[props.location][\"price\"][\"fullPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //         <label htmlFor=\"cfullPrice\" className={styles.price}>\n    //           Current Price\n    //         </label>\n    //         <input\n    //           type=\"number\"\n    //           id=\"cfullPrice\"\n    //           name=\"cfullPrice\"\n    //           min=\"0\"\n    //           className={styles.singlenum}\n    //           value={item[props.location][\"price\"][\"cfullPrice\"]}\n    //           onChange={onChangeHandler}\n    //         />\n    //       </div>\n    //     </div>\n    //   );\n    // } else if (price === \"normalPrice\") {\n    // }\n    if (price === \"normalPrice\") {\n      ui = (\n        <div className=\"col-12 price\">\n          {/* <label htmlFor=\"actualPrice\" className={styles.price}>\n            Actual Price&ensp;\n          </label>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            min=\"0\"\n            type=\"number\"\n            id=\"actualPrice\"\n            name=\"actualPrice\"\n            style={{ marginRight: \"15px\" }}\n            className={styles.singlenum}\n            value={\n              item[props.location][\"price\"][\"actualPrice\"] > -1 &&\n              item[props.location][\"price\"][\"actualPrice\"]\n            }\n            onChange={onChangeHandler}\n          /> */}\n          <label htmlFor=\"currentPrice\" className={styles.price}>\n            Current Price&ensp;\n          </label>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            min=\"0\"\n            type=\"number\"\n            id=\"currentPrice\"\n            className={styles.singlenum}\n            name=\"current_price\"\n            value={\n              item.branch[props.location][\"current_price\"] > -1 &&\n              item.branch[props.location][\"current_price\"]\n            }\n            onChange={onChangeHandler}\n          />\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div class={styles.modal}>\n      {item !== null && (\n        <Card>\n          <div class={styles.row}>\n            <div class={styles.left}>\n              <div class=\"upload-img\">\n                <input\n                  type=\"file\"\n                  id=\"img\"\n                  name=\"img\"\n                  accept=\".gif, .jpg, .png\"\n                  onChange={onChangeHandler}\n                />\n                <label\n                  onClick={() => {\n                    getFile1();\n                    // setImgView(true);\n                  }}\n                  htmlFor=\"img\"\n                  id=\"uploadButton1\"\n                  style={{\n                    backgroundImage: `url('${item.img}')`,\n                  }}\n                >\n                  <span>+</span>\n                </label>\n              </div>\n              <div\n                class=\"row\"\n                style={{ justifyContent: \"end\", paddingTop: \"15px\" }}\n              >\n                <button\n                  type=\"button\"\n                  class={styles.btn}\n                  style={{ marginRight: \"10px\" }}\n                  onClick={submitHandler}\n                >\n                  Save\n                </button>\n                <button\n                  type=\"button\"\n                  class={styles.btn}\n                  onClick={props.onClose}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n            <div class={styles.right}>\n              <div class=\"row\">\n                <div\n                  class={styles.col}\n                  style={{ width: \"30%\", paddingRight: \"10px\" }}\n                >\n                  <label htmlFor=\"name\">Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"Name\"\n                    name=\"Name\"\n                    class={styles.input}\n                    alt=\"productname\"\n                    value={item.Name}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n                <div class={styles.col} style={{ width: \"70%\" }}>\n                  <label htmlFor=\"desc\">Description</label>\n                  <input\n                    type=\"text\"\n                    id=\"description\"\n                    name=\"description\"\n                    class={styles.input}\n                    alt=\"productdescrb\"\n                    value={item.description}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n              </div>\n              <div\n                class=\"row\"\n                style={{ justifyContent: \"space-between\", padding: \"15px 0\" }}\n              >\n                {/* <select\n                  class={styles.select}\n                  name=\"style\"\n                  id=\"style\"\n                  onChange={onChangeHandler}\n                  value={item.style}\n                >\n                  <option\n                    value=\"southindian\"\n                    // selected={item.style === \"southindian\" ? true : false}\n                  >\n                    SouthIndian\n                  </option>\n                  <option\n                    value=\"chinese\"\n                    // selected={item.style === \"chinese\" ? true : false}\n                  >\n                    Chinese\n                  </option>\n                </select> */}\n                {/* <select class={styles.select} name=\"category\" id=\"category\">\n                <option value=\"breakfast\">Breakfast</option>\n                <option value=\"lunch\">Lunch</option>\n                <option value=\"dinner\">Dinner</option>\n              </select> */}\n                <select\n                  class={styles.select}\n                  name=\"Type\"\n                  id=\"Type\"\n                  onChange={onChangeHandler}\n                  value={item.Type}\n                >\n                  {/* <option\n                    value=\"veg\"\n                    // selected={item.Type === \"veg\" ? true : false}\n                  >\n                    Veg\n                  </option>\n                  <option\n                    value=\"nonveg\"\n                    // selected={item.Type === \"non-veg\" ? true : false}\n                  >\n                    Non-Veg\n                  </option> */}\n                  <option value=\"BreakFast\">BreakFast</option>\n                  <option value=\"Lunch\">Lunch</option>\n                  <option value=\"Dinner\">Dinner</option>\n                </select>\n              </div>\n              <div class=\"row\" style={{ justifyContent: \"space-between\" }}>\n                <div class={styles.col} style={{ width: \"48%\" }}>\n                  <div\n                    class=\"row\"\n                    style={{\n                      justifyContent: \"space-between\",\n                      padding: \"5px 0\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <label htmlFor=\"actualUnit\">Actual Unit:</label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"unit\"\n                      name=\"unit\"\n                      min=\"0\"\n                      onChange={onChangeHandler}\n                      value={item.branch[props.location][\"unit\"]}\n                    />\n\n                    {/* <label htmlFor=\"quantityPerUnit\" style={{ margin: \"0\" }}>\n                      Quantity Per Unit\n                    </label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"quantityPerUnit\"\n                      name=\"quantityPerUnit\"\n                      min=\"1\"\n                      value={item[props.location][\"quantityPerUnit\"]}\n                      onChange={onChangeHandler}\n                    /> */}\n                  </div>\n                  {/* <div\n                    class=\"row\"\n                    style={{\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <label htmlFor=\"unit\" style={{ margin: \"0\" }}>\n                      Minimal Unit\n                    </label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"minimumUnit\"\n                      name=\"minimumUnit\"\n                      min=\"0\"\n                      value={item[props.location][\"minimumUnit\"]}\n                      onChange={onChangeHandler}\n                    />\n                  </div> */}\n                </div>\n                <div class={styles.col} style={{ width: \"48%\" }}>\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dealoftheday\"\n                      name=\"dealoftheday\"\n                      className={styles.check}\n                      checked={item.branch[props.location][\"dealoftheday\"]}\n                      onChange={onChangeHandler}\n                    />\n                    <label htmlFor=\"dealoftheday\" className={styles.label}>\n                      Deal of the day\n                    </label>\n                  </div>\n                  {/* <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"onSale\"\n                      name=\"onSale\"\n                      className={styles.check}\n                      // checked={item.dealoftheday}\n                    />\n                    <label htmlFor=\"onSale\" className={styles.label}>\n                      On Sale\n                    </label>\n                  </div> */}\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"isproductavailable\"\n                      name=\"isproductavailable\"\n                      className={styles.check}\n                      checked={item.isproductavailable}\n                      // checked={item[props.location][\"isproductavailable\"]}\n                      onChange={onChangeHandler}\n                    />\n                    <label\n                      htmlFor=\"isproductavailable\"\n                      className={styles.label}\n                    >\n                      Product Available\n                    </label>\n                  </div>\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"Bestseller\"\n                      name=\"Bestseller\"\n                      className={styles.check}\n                      checked={item.branch[props.location][\"Bestseller\"]}\n                      onChange={onChangeHandler}\n                    />\n                    <label htmlFor=\"Bestseller\" className={styles.label}>\n                      Best Seller\n                    </label>\n                    {/* <label htmlFor=\"top\">Top Product</label> */}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row pricecol\">\n                <div className=\"col-4\">\n                  <input\n                    type=\"radio\"\n                    id=\"normalPrice\"\n                    name=\"price\"\n                    value=\"normalPrice\"\n                    checked={price !== null && price === \"normalPrice\"}\n                    onChange={onChangeHandler}\n                  />\n                  <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\n                </div>\n                {/* <div className=\"col-6\">\n                  <input\n                    type=\"radio\"\n                    id=\"quantityPrice\"\n                    name=\"price\"\n                    value=\"quantityPrice\"\n                    checked={price !== null && price === \"quantityPrice\"}\n                    onChange={onChangeHandler}\n                  />\n                  <label htmlFor=\"quantityPrice\">\n                    &nbsp;Quantity Based Price\n                  </label>\n                </div> */}\n                {ui}\n              </div>\n            </div>\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nconst EditModal = (props) => {\n  // console.log(\"edit\", props.item);\n  return (\n    <>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.closeModal} />,\n        document.getElementById(\"backdrop-root\")\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay\n          onClose={props.closeModal}\n          // title={props.title}\n          updateItem={props.updateItem}\n          item={props.item}\n          location={props.location}\n        />,\n        document.getElementById(\"overlay-root\")\n      )}\n    </>\n  );\n};\n\nexport default EditModal;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./EditModal.module.css\";\nimport \"./EditModal.css\";\nimport Card from \"../Card/Card\";\nimport Backdrop from \"../Backdrop\";\nimport $ from \"jquery\";\n\nconst ModalOverlay = (props) => {\n  const [item, setItem] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [quantity, setQuantity] = useState([]);\n  // const [imgView, setImgView] = useState(false);\n\n  useEffect(() => {\n    let item = props.item;\n    if (item !== null) {\n      console.log(\"item\", item);\n      setItem(item);\n      setPrice(\"normalPrice\");\n      // if (item.branch[props.location][\"current_price\"] === undefined) {\n      //   setPrice(\"quantityPrice\");\n      //   setQuantity(item[props.location][\"price\"]);\n      // } else {\n      //   setPrice(\"normalPrice\");\n      // }\n    }\n  }, [props.item, props.location]);\n\n  const onChangeHandler = (event, id) => {\n    // console.log(\"event.name\", event.target.name, event.target.value, item);\n    // setChecked((prevState) => !prevState);\n    let value = event.target.value;\n    let ename = event.target.name;\n    // console.log(\"ename\", ename, value);\n\n    if (ename === \"img\") {\n      value = event.target.files[0];\n      // console.log(\"url\", URL.createObjectURL(value));\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [ename]: value,\n        };\n      });\n    } else if (\n      ename === \"dealoftheday\" ||\n      ename === \"onsale\" ||\n      ename === \"isproductavailable\" ||\n      ename === \"Bestseller\"\n    ) {\n      if (ename === \"isproductavailable\") {\n        setItem((prevState) => {\n          value = !prevState[event.target.name];\n          return {\n            ...prevState,\n            [ename]: value,\n          };\n        });\n      } else {\n        setItem((prevState) => {\n          value = !prevState.branch[props.location][event.target.name];\n          // console.log(event.target.name, value);\n          let data = {\n            ...prevState,\n          };\n          data.branch[props.location] = {\n            ...prevState.branch[props.location],\n            [event.target.name]: value,\n          };\n          return data;\n        });\n      }\n    } else if (ename === \"price\") {\n      setPrice(value);\n    } else if (ename === \"actualPrice\") {\n      if (price === \"normalPrice\") {\n        // console.log(\"actualPrice-normal\", value);\n        setItem((prevState) => {\n          return {\n            ...prevState,\n            [props.location]: {\n              ...prevState[props.location],\n              price: {\n                ...prevState[props.location][\"price\"],\n                actualPrice: parseFloat(value),\n              },\n            },\n          };\n        });\n      } else {\n        setQuantity((prevState) => {\n          // console.log(\"actualPrice-quan\", prevState);\n          let list = [...prevState];\n          let index = list.findIndex((item) => {\n            return item.id === id;\n          });\n          let data = {\n            ...list[index],\n            [ename]: parseFloat(value),\n          };\n          list[index] = data;\n          return [...list];\n        });\n      }\n    } else if (ename === \"current_price\") {\n      if (price === \"normalPrice\") {\n        // console.log(\"currPrice-normal\", value);\n        setItem((prevState) => {\n          let data = {\n            ...prevState,\n          };\n          data.branch[props.location] = {\n            ...prevState.branch[props.location],\n            [ename]: value,\n          };\n          return data;\n        });\n      } else {\n        // console.log(\"currPrice-quant\", value);\n        setQuantity((prevState) => {\n          let list = [...prevState];\n          let index = list.findIndex((item) => {\n            return item.id === id;\n          });\n          let data = {\n            ...list[index],\n            [ename]: parseFloat(value),\n          };\n          list[index] = data;\n          return [...list];\n        });\n      }\n    } else if (ename === \"quantity\") {\n      // console.log(\"quantity\", value);\n      setQuantity((prevState) => {\n        let list = [...prevState];\n        let index = list.findIndex((item) => {\n          return item.id === id;\n        });\n        let data = \"\";\n        data = {\n          ...list[index],\n          [ename]: parseFloat(value),\n        };\n        list[index] = data;\n        return [...list];\n      });\n    } else if (ename === \"units\") {\n      // console.log(\"units\", value);\n      setQuantity((prevState) => {\n        let list = [...prevState];\n        let index = list.findIndex((item) => {\n          return item.id === id;\n        });\n        let data = {\n          ...list[index],\n          [ename]: value,\n        };\n        list[index] = data;\n        return [...list];\n      });\n    } else if (\n      ename === \"unit\" ||\n      ename === \"quantityPerUnit\" ||\n      ename === \"minimumUnit\"\n    ) {\n      setItem((prevState) => {\n        let data = {\n          ...prevState,\n        };\n        data.branch[props.location] = {\n          ...prevState.branch[props.location],\n          [ename]: value,\n        };\n        return data;\n        // return {\n        //   ...prevState,\n        //   [props.location]: {\n        //     ...prevState[props.location],\n        //     [ename]: value,\n        //   },\n        // };\n      });\n    } else {\n      setItem((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value,\n        };\n      });\n    }\n  };\n\n  const getFile1 = () => {\n    $(\"#uploadButton1\").on(\"click\", function () {\n      $(\"#img\").click();\n    });\n\n    $(\"#img\").change(function () {\n      var file = this.files[0];\n      console.log(file);\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        $(\"#uploadButton1\").css(\n          \"background-image\",\n          'url(\"' + reader.result + '\")'\n        );\n      };\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n      }\n    });\n  };\n\n  const submitHandler = () => {\n    // console.log(\"UpdatedItem\", item, quantity, price);\n    let isAddItem = true;\n    if (price === \"normalPrice\") {\n      if (\n        // item[props.location].price.actualPrice <= 0 ||\n        item.branch[props.location].current_price <= 0 ||\n        // item[props.location].price.actualPrice === undefined ||\n        item.branch[props.location].current_price === undefined\n      ) {\n        alert(\"Price should be greater than 0 to proceed further!!!\");\n        isAddItem = false;\n      }\n    } else {\n      for (let i = 0; i < quantity.length; i++) {\n        if (quantity[i].units === \"\") {\n          alert(\"Select units for all quantity like kilogram, liters etc!!!\");\n          isAddItem = false;\n          break;\n        } else if (\n          quantity[i].quantity <= 0 ||\n          quantity[i].actualPrice <= 0 ||\n          quantity[i].currentPrice <= 0\n        ) {\n          alert(\"Quantity or Price should not be 0!!!\");\n          isAddItem = false;\n          break;\n        }\n      }\n    }\n    if (isAddItem) {\n      props.updateItem(item, price, quantity, \"Grocery\");\n    }\n  };\n\n  const addMoreQuantity = () => {\n    setQuantity((prevState) => {\n      let price = prevState;\n      let newId = price.length; // if already two elements[0, 1] then next element id will be [0, 1, 2]\n      let data = {\n        id: newId,\n        quantity: 0,\n        units: \"\",\n        actualPrice: 0,\n        currentPrice: 0,\n      };\n      // price = [...price, data];\n      return [...price, data];\n    });\n  };\n\n  const reduceQuantity = () => {\n    setQuantity((prevState) => {\n      let price = prevState;\n      // let prevState = props.item.priceItem;\n      if (price.length > 1) {\n        price.pop();\n      }\n      return [...price];\n    });\n  };\n\n  let ui = null;\n  if (price !== null) {\n    if (price === \"quantityPrice\") {\n      ui = (\n        <div className=\"col-12\">\n          <p>\n            Pick the Quantity\n            {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\n          </p>\n          {quantity.map((price) => {\n            return (\n              <div className={styles.singlerow} key={price.id}>\n                <div className=\"pic\">\n                  <input\n                    className=\"pics\"\n                    type=\"number\"\n                    id=\"quantity\"\n                    name=\"quantity\"\n                    min=\"0\"\n                    max=\"1000\"\n                    value={price.quantity}\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                  />\n\n                  <select\n                    className=\"amo\"\n                    name=\"units\"\n                    id=\"units\"\n                    onChange={(e) => {\n                      onChangeHandler(e, price.id);\n                    }}\n                    value={price.units}\n                  >\n                    <option value=\"\">--Select--</option>\n                    <option value=\"grams\">grams</option>\n                    <option value=\"kilograms\">kilograms</option>\n                    <option value=\"millilitres\">millilitres</option>\n                    <option value=\"litres\">litres</option>\n                  </select>\n                </div>\n                <div>\n                  <label htmlFor=\"quarterPrice\" className={styles.price}>\n                    Actual Price&ensp;\n                  </label>\n                  <i className=\"fas fa-rupee\"></i>\n                  <input\n                    type=\"number\"\n                    className={styles.singlenum}\n                    id=\"actualPrice\"\n                    name=\"actualPrice\"\n                    min=\"0\"\n                    value={price.actualPrice}\n                    onChange={(e) => onChangeHandler(e, price.id)}\n                  />\n                  <label htmlFor=\"cquaterPrice\" className={styles.price}>\n                    Current Price&ensp;\n                  </label>\n                  <i className=\"fas fa-rupee\"></i>\n                  <input\n                    type=\"number\"\n                    id=\"currentPrice\"\n                    name=\"currentPrice\"\n                    min=\"0\"\n                    className={styles.singlenum}\n                    value={price.currentPrice}\n                    onChange={(e) => onChangeHandler(e, price.id)}\n                  />\n                </div>\n              </div>\n            );\n          })}\n          <button className=\"plus\" type=\"button\" onClick={addMoreQuantity}>\n            <i class=\"fas fa-plus-circle\"></i>\n          </button>\n          <button className=\"neg\" type=\"button\" onClick={reduceQuantity}>\n            <i class=\"fas fa-minus-circle\"></i>\n          </button>\n        </div>\n      );\n    } else if (price === \"normalPrice\") {\n      ui = (\n        <div className=\"col-12 price\">\n          {/* <label htmlFor=\"actualPrice\" className={styles.price}>\n            Actual Price&ensp;\n          </label>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            min=\"0\"\n            type=\"number\"\n            id=\"actualPrice\"\n            name=\"actualPrice\"\n            style={{ marginRight: \"15px\" }}\n            className={styles.singlenum}\n            value={item[props.location].price.actualPrice}\n            onChange={onChangeHandler}\n          /> */}\n          <label htmlFor=\"current_price\" className={styles.price}>\n            Current Price&ensp;\n          </label>\n          <i className=\"fas fa-rupee\"></i>\n          <input\n            min=\"0\"\n            type=\"number\"\n            id=\"current_price\"\n            className={styles.singlenum}\n            name=\"current_price\"\n            value={item.branch[props.location].current_price}\n            onChange={onChangeHandler}\n          />\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div class={styles.modal}>\n      {item !== null && (\n        <Card>\n          <div class={styles.row}>\n            <div class={styles.left}>\n              <div class=\"upload-img\">\n                <input\n                  type=\"file\"\n                  id=\"img\"\n                  name=\"img\"\n                  accept=\".gif, .jpg, .png\"\n                  onChange={onChangeHandler}\n                />\n                <label\n                  onClick={() => {\n                    getFile1();\n                    // setImgView(true);\n                  }}\n                  htmlFor=\"img\"\n                  id=\"uploadButton1\"\n                  style={{\n                    backgroundImage: `url('${props.img}')`,\n                  }}\n                >\n                  <span>+</span>\n                </label>\n              </div>\n              <div\n                class=\"row\"\n                style={{ justifyContent: \"end\", paddingTop: \"15px\" }}\n              >\n                <button\n                  type=\"button\"\n                  class={styles.btn}\n                  style={{ marginRight: \"10px\" }}\n                  onClick={submitHandler}\n                >\n                  Save\n                </button>\n                <button\n                  type=\"button\"\n                  class={styles.btn}\n                  onClick={props.onClose}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n            <div class={styles.right}>\n              <div class=\"row\">\n                <div\n                  class={styles.col}\n                  style={{ width: \"30%\", paddingRight: \"10px\" }}\n                >\n                  <label htmlFor=\"name\">Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"Name\"\n                    name=\"Name\"\n                    class={styles.input}\n                    alt=\"productname\"\n                    value={item.Name}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n                <div class={styles.col} style={{ width: \"70%\" }}>\n                  <label htmlFor=\"desc\">Description</label>\n                  <input\n                    type=\"text\"\n                    id=\"description\"\n                    name=\"description\"\n                    class={styles.input}\n                    alt=\"productdescrb\"\n                    value={item.description}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n              </div>\n              <div\n                class=\"row\"\n                style={{ justifyContent: \"space-between\", padding: \"15px 0\" }}\n              >\n                {/* <select\n                  class={styles.select}\n                  name=\"style\"\n                  id=\"style\"\n                  onChange={onChangeHandler}\n                  value={item.style}\n                >\n                  <option\n                    value=\"southindian\"\n                    // selected={item.style === \"southindian\" ? true : false}\n                  >\n                    SouthIndian\n                  </option>\n                  <option\n                    value=\"chinese\"\n                    // selected={item.style === \"chinese\" ? true : false}\n                  >\n                    Chinese\n                  </option>\n                </select> */}\n                {/* <select class={styles.select} name=\"category\" id=\"category\">\n                <option value=\"breakfast\">Breakfast</option>\n                <option value=\"lunch\">Lunch</option>\n                <option value=\"dinner\">Dinner</option>\n              </select> */}\n                <select\n                  class={styles.select}\n                  name=\"Type\"\n                  id=\"Type\"\n                  onChange={onChangeHandler}\n                  value={item.Type}\n                >\n                  <option value=\"Fruits_Vegetables\">Fruits_Vegetables</option>\n                  <option value=\"Rice\">Rice</option>\n                  <option value=\"Summer_Drinks_Beverages\">\n                    Summer_Drinks_Beverages\n                  </option>\n                  <option value=\"soaps\">Soaps</option>\n                  <option value=\"Pharmacy\">Pharmacy</option>\n                  <option value=\"Organics\">Organics</option>\n                </select>\n              </div>\n              <div class=\"row\" style={{ justifyContent: \"space-between\" }}>\n                <div class={styles.col} style={{ width: \"48%\" }}>\n                  <div\n                    class=\"row\"\n                    style={{\n                      justifyContent: \"space-between\",\n                      padding: \"5px 0\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <label htmlFor=\"actualUnit\">Actual Unit:</label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"unit\"\n                      name=\"unit\"\n                      min=\"0\"\n                      onChange={onChangeHandler}\n                      value={item.branch[props.location].unit}\n                    />\n                    {/* <label htmlFor=\"quantityPerUnit\" style={{ margin: \"0\" }}>\n                      Quantity Per Unit\n                    </label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"quantityPerUnit\"\n                      name=\"quantityPerUnit\"\n                      min=\"1\"\n                      value={item[props.location].quantityPerUnit}\n                      onChange={onChangeHandler}\n                    /> */}\n                  </div>\n                  {/* <div\n                    class=\"row\"\n                    style={{\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <label htmlFor=\"unit\" style={{ margin: \"0\" }}>\n                      Minimal Unit\n                    </label>\n                    <input\n                      type=\"number\"\n                      class={styles.number}\n                      id=\"minimumUnit\"\n                      name=\"minimumUnit\"\n                      min=\"0\"\n                      value={item[props.location].minimumUnit}\n                      onChange={onChangeHandler}\n                    />\n                  </div> */}\n                </div>\n                <div class={styles.col} style={{ width: \"48%\" }}>\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dealoftheday\"\n                      name=\"dealoftheday\"\n                      className={styles.check}\n                      checked={item.branch[props.location].dealoftheday}\n                      onChange={onChangeHandler}\n                    />\n                    <label htmlFor=\"dealoftheday\" className={styles.label}>\n                      Deal of the day\n                    </label>\n                  </div>\n                  {/* <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"onSale\"\n                      name=\"onSale\"\n                      className={styles.check}\n                      // checked={item.dealoftheday}\n                    />\n                    <label htmlFor=\"onSale\" className={styles.label}>\n                      On Sale\n                    </label>\n                  </div> */}\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"isproductavailable\"\n                      name=\"isproductavailable\"\n                      className={styles.check}\n                      // checked={item[props.location].isproductavailable}\n                      checked={item.isproductavailable}\n                      onChange={onChangeHandler}\n                    />\n                    <label\n                      htmlFor=\"isproductavailable\"\n                      className={styles.label}\n                    >\n                      Product Available\n                    </label>\n                  </div>\n                  <div className={styles.single}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"Bestseller\"\n                      name=\"Bestseller\"\n                      className={styles.check}\n                      checked={item.branch[props.location].Bestseller}\n                      onChange={onChangeHandler}\n                    />\n                    <label htmlFor=\"Bestseller\" className={styles.label}>\n                      Best Seller\n                    </label>\n                    {/* <label htmlFor=\"top\">Top Product</label> */}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row pricecol\">\n                <div className=\"col-4\">\n                  <input\n                    type=\"radio\"\n                    id=\"normalPrice\"\n                    name=\"price\"\n                    value=\"normalPrice\"\n                    checked={price !== null && price === \"normalPrice\"}\n                    onChange={onChangeHandler}\n                  />\n                  <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\n                </div>\n                {/* <div className=\"col-6\">\n                  <input\n                    type=\"radio\"\n                    id=\"quantityPrice\"\n                    name=\"price\"\n                    value=\"quantityPrice\"\n                    checked={price !== null && price === \"quantityPrice\"}\n                    onChange={onChangeHandler}\n                  />\n                  <label htmlFor=\"quantityPrice\">\n                    &nbsp;Quantity Based Price\n                  </label>\n                </div> */}\n                {ui}\n              </div>\n            </div>\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nconst GroceryEditModal = (props) => {\n  // console.log(\"edit\", props.item);\n  return (\n    <>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.closeModal} />,\n        document.getElementById(\"backdrop-root\")\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay\n          onClose={props.closeModal}\n          // title={props.title}\n          updateItem={props.updateItem}\n          item={props.item}\n          location={props.location}\n        />,\n        document.getElementById(\"overlay-root\")\n      )}\n    </>\n  );\n};\n\nexport default GroceryEditModal;\n","import \"./Snackbar.css\";\n\nfunction snackbar(item, status) {\n  var el = document.createElement(\"div\");\n  el.className = \"snackbar\";\n  var y = document.getElementById(\"snackbar-container\");\n  el.innerHTML = item.Name + \" - \" + status;\n  y.append(el);\n  el.className = \"snackbar show\";\n  setTimeout(function () {\n    el.className = el.className.replace(\"snackbar show\", \"snackbar\");\n  }, 3000);\n}\n\n// function snackbar1(item, status) {\n//   var el = document.createElement(\"div\");\n//   el.className = \"snackbar\";\n//   var y = document.getElementById(\"snackbar-container\");\n//   el.innerHTML = \"Some Text1 Message\";\n//   y.append(el);\n//   el.className = \"snackbar show\";\n//   setTimeout(function () {\n//     el.className = el.className.replace(\"snackbar show\", \"snackbar\");\n//   }, 3000);\n// }\n\nexport default snackbar;\n","import React from \"react\";\n// import { propTypes } from \"react-bootstrap/esm/Image\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst DeleteConfirmModal = (props) => {\n  return (\n    <Modal show={props.showModal} onHide={props.handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Delete Confirmation!!!</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>Are you sure want to delete it?</Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"danger\"\n          onClick={() => props.confirmDelete(props.item)}\n        >\n          Delete\n        </Button>\n        <Button variant=\"primary\" onClick={props.handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default DeleteConfirmModal;\n","import React, { useEffect, useState } from \"react\";\n// import { Toast, ToastContainer } from \"react-bootstrap\";\n// import { getFood } from \"../../api/FoodDB\";\nimport { getItems, deleteItem, updateItem } from \"../../api/ItemDB\";\nimport EditModal from \"../../ui/EditModal/EditModal\";\nimport GroceryEditModal from \"../../ui/EditModal/GroceryEditModal\";\nimport snackbar from \"../../ui/Snackbar/Snackbar\";\nimport Card from \"../Card/Card\";\nimport DeleteConfirmModal from \"../Modals/DeleteConfirmModal\";\n\nconst Items = (props) => {\n  const [item, setItem] = useState(null);\n  const [items, setItems] = useState(null);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [updateModal, setUpdateModel] = useState(false);\n\n  useEffect(() => {\n    getItems(props.title, props.type, (res) => {\n      console.log(\"res\", res);\n      let list = [];\n      let item;\n      res.forEach((it) => {\n        if (it.branch[props.authCtx.user.location] === undefined) {\n          if (props.type === \"Food\") {\n            item = {\n              ...it,\n            };\n            item.branch[props.authCtx.user.location] = {\n              Bestseller: false,\n              BranchName: props.authCtx.user.location,\n              current_price: 0,\n              dealoftheday: false,\n              unit: 0,\n            };\n          } else {\n            item = {\n              ...it,\n            };\n            item.branch[props.authCtx.user.location] = {\n              Bestseller: false,\n              BranchName: props.authCtx.user.location,\n              current_price: 0,\n              dealoftheday: false,\n              unit: 0,\n            };\n          }\n          list.push(item);\n        } else {\n          list.push(it);\n        }\n      });\n      // console.log(\"list\", list);\n      setItems(list);\n    });\n  }, [props.title, props.type]);\n\n  const updateItemHandler = (updatedItem, price, quantity, type) => {\n    // if data not updated\n    // console.log(\"upitem\", updatedItem, price, quantity, type);\n    // console.log(\"updatedItem\", item);\n    let isUpdate = true;\n    if (item === updatedItem) {\n      if (type === \"Food\") {\n        alert(\"You didn't update anything!!!\");\n        isUpdate = false;\n      } else {\n        if (price === \"normalPrice\") {\n          // console.log(item[props.authCtx.user.location].price);\n          if (\n            item.branch[props.authCtx.user.location].current_price ===\n            updatedItem.branch[props.authCtx.user.location].current_price\n          ) {\n            alert(\"You didn't update anything!!!\");\n            isUpdate = false;\n          }\n        } else {\n          if (item.branch[props.authCtx.user.location].price === quantity) {\n            alert(\"You didn't update anything!!!\");\n            isUpdate = false;\n          }\n        }\n      }\n    }\n    if (isUpdate) {\n      // updated\n      updateItem(\n        updatedItem,\n        price,\n        quantity,\n        props.title,\n        props.type,\n        props.authCtx.user.location,\n        (isUpdated) => {\n          if (isUpdated === false) {\n            snackbar(item, \"Sorry Not Updated\");\n          } else {\n            console.log(\"isUpdated\", isUpdated);\n            let list = [...items];\n            let index = list.findIndex((i) => {\n              return i.id === updatedItem.id;\n            });\n            list[index] = isUpdated;\n            setItems(list);\n            snackbar(item, \"Successfully Updated\");\n            setUpdateModel(false);\n          }\n        }\n      );\n    }\n  };\n\n  const deleteItems = (item) => {\n    // console.log(\"items\", item);\n    deleteItem(item, props.title, props.type, (isDeleted) => {\n      if (isDeleted) {\n        let itemsList = [...items];\n        let list = itemsList.filter((it) => {\n          return it.id !== item.id;\n        });\n        setItems(list);\n        snackbar(item, \"Successfully Deleted\");\n      } else {\n        snackbar(item, \"Failed To Delete, Try Again!!!\");\n      }\n    });\n    setDeleteModal(false);\n  };\n\n  let ui = null;\n  if (items === null) {\n    ui = <p>Loading!!!</p>;\n  } else {\n    if (items.length <= 0) {\n      ui = <p>No Items!!!</p>;\n    } else {\n      ui = items.map((item, i) => (\n        <Card\n          key={i}\n          item={item}\n          deleteItem={(it) => {\n            setDeleteModal(true);\n            setItem(it);\n          }}\n          type={props.type}\n          location={props.authCtx.user.location}\n          updateItem={(it) => {\n            setItem(it);\n            setUpdateModel(props.type);\n          }}\n        />\n      ));\n    }\n  }\n\n  return (\n    <>\n      {updateModal === \"Food\" ? (\n        <EditModal\n          item={item}\n          showModal={updateModal}\n          closeModal={() => setUpdateModel(false)}\n          updateItem={updateItemHandler}\n          location={props.authCtx.user.location}\n        />\n      ) : (\n        updateModal === \"Grocery\" && (\n          <GroceryEditModal\n            item={item}\n            showModal={updateModal}\n            closeModal={() => setUpdateModel(false)}\n            updateItem={updateItemHandler}\n            location={props.authCtx.user.location}\n          />\n        )\n      )}\n      {/* {updateModal && (\n        <GroceryEditModal\n          item={item}\n          showModal={updateModal}\n          closeModal={() => setUpdateModel(false)}\n          updateItem={updateItemHandler}\n        />\n      )} */}\n      {deleteModal && (\n        <DeleteConfirmModal\n          item={item}\n          showModal={deleteModal}\n          handleClose={() => setDeleteModal(false)}\n          confirmDelete={deleteItems}\n          location={props.authCtx.user.location}\n        />\n      )}\n      <h1>{props.title}</h1>\n      <div class=\"row item-card\">{ui}</div>\n      <div id=\"snackbar-container\"></div>\n    </>\n  );\n};\n\nexport default Items;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport { db, auth, firebase } from \"../services/firebase\";\nimport AuthContext from \"../context/auth-context\";\nimport snackbar from \"../ui/Snackbar/Snackbar\";\n\nconst Profile = () => {\n  const authCtx = useContext(AuthContext);\n  const [newData, setNewData] = useState({\n    name: \"\",\n    prfl_img: null,\n    mno: \"\"\n  });\n\n  const [password, setPassword] = useState({\n    // oldPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\"\n  });\n\n  useEffect(() => {\n    if (authCtx.user !== null) {\n      let user = authCtx.user;\n      setNewData({\n        name: user.name,\n        prfl_img: null,\n        mno: user.phone\n      });\n    }\n  }, [authCtx.user]);\n\n  $(document).ready(function () {\n    $(\"#togglePassword\").click(function () {\n      var x = document.getElementById(\"newpass\");\n      if (x.type === \"password\") {\n        x.type = \"text\";\n      } else {\n        x.type = \"password\";\n      }\n      $(\"#togglePassword\").toggleClass(\"fa-eye-slash\");\n    });\n\n    $(\"#togglePassword1\").click(function () {\n      var x = document.getElementById(\"pass\");\n      if (x.type === \"password\") {\n        x.type = \"text\";\n      } else {\n        x.type = \"password\";\n      }\n      $(\"#togglePassword1\").toggleClass(\"fa-eye-slash\");\n    });\n  });\n\n  const getFile1 = () => {\n    $(\"#uploadButton1\").on(\"click\", function () {\n      $(\"#img\").click();\n    });\n\n    $(\"#img\").change(function () {\n      var file = this.files[0];\n      console.log(file);\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        $(\"#uploadButton1\").css(\n          \"background-image\",\n          'url(\"' + reader.result + '\")'\n        );\n      };\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n      }\n    });\n  };\n\n  // onChangeHandler()\n  // submitHandler()\n  const updateUser = (newData) => {\n    // console.log(\"updating user details\", newData);\n    let authUser = authCtx.user;\n    let name = authUser.name;\n    let phone = authUser.phone;\n    // only image is updated\n    // both udpated\n    if (newData.prfl_img !== undefined && newData.prfl_img !== null) {\n      // version - 8\n      let bucketName = \"images\";\n      let img = newData.prfl_img;\n      let storageRef = firebase.storage().ref();\n      let timestamp = +new Date().getTime() + \"-\" + newData.prfl_img.name;\n      // console.log(\"timestamp\", timestamp);\n      let imgRef = storageRef.child(`${bucketName}/${timestamp}`);\n      // let photoUrl = \"\";\n      // delete previous photo from storage, but not the default photo\n      imgRef\n        .put(img)\n        .then((snapshot) => {\n          imgRef.getDownloadURL().then((imgUrl) => {\n            // photoUrl = imgUrl;\n            db.collection(\"admin\")\n              .doc(authUser.id)\n              .update({\n                name: newData.name,\n                phone: newData.mno,\n                img: imgUrl\n              })\n              .then(() => {\n                if (\n                  authUser.img !==\n                  \"https://www.w3schools.com/howto/img_avatar.png\"\n                ) {\n                  firebase\n                    .storage()\n                    .refFromURL(authUser.img)\n                    .delete()\n                    .then(() =>\n                      console.log(\n                        \"image deleted successfullty from firebase storage\"\n                      )\n                    );\n                }\n                alert(\"successfully updated\");\n                // console.log(\"successfully updated data to db\");\n                authCtx.setUser({\n                  ...authUser,\n                  name: newData.name,\n                  phone: newData.mno,\n                  img: imgUrl\n                });\n\n                document.getElementById(\"img\").value = \"\";\n                $(\"#uploadButton\").css(\"background-image\", 'url(\"\")');\n              })\n              .catch((e) => console.log(\"getDownloadUrl\", e));\n          });\n        })\n        .catch((e) => {\n          console.log(\"img put\", e);\n        });\n    } else {\n      // no img\n      if (name !== newData.name || phone !== newData.mno) {\n        // console.log(\"name, mno\", newData);\n        db.collection(\"admin\")\n          .doc(authUser.id)\n          .update({\n            name: newData.name,\n            phone: newData.mno\n          })\n          .then(() => {\n            alert(\"successfully updated\");\n            console.log(\"successfully updated data to db\");\n            authCtx.setUser({\n              ...authUser,\n              name: newData.name,\n              phone: newData.mno\n            });\n          })\n          .catch((e) => console.log(e));\n      } else {\n        alert(\"change anything to update!!!\");\n      }\n    }\n    // } else {\n    //   // User is signed out\n    //   // ...\n    // }\n    // });\n  };\n\n  const updatePassword = (password) => {\n    // console.log(\"newPas\", password);\n    if (password.confirmPassword !== password.newPassword) {\n      alert(\"New Password is not equal to Confirm Password!!!\");\n    } else {\n      auth.onAuthStateChanged((user) => {\n        if (user !== null) {\n          // console.log(\"userId\", user.uid);\n          user\n            .updatePassword(password.newPassword)\n            .then(() => {\n              // let item = {\n              //   Name: \"Password\"\n              // };\n              // snackbar(item, \"updated successfully\");\n              alert(\"password updated successfully!!!\");\n              setPassword({\n                newPassword: \"\",\n                confirmPassword: \"\"\n              });\n            })\n            .catch((e) => {\n              if (e.code === \"auth/requires-recent-login\") {\n                alert(\n                  \"Changing sensitive information, So please try again immediately after login. If password is wrong, try with new password you tried.\"\n                );\n              }\n              console.log(e);\n            });\n        }\n      });\n    }\n  };\n\n  const onChangeHandler = (event) => {\n    // console.log(event.target.name);\n    let value = null;\n    if (event.target.name === \"prfl_img\") {\n      value = event.target.files[0];\n    } else {\n      value = event.target.value;\n    }\n    if (\n      event.target.name === \"newPassword\" ||\n      event.target.name === \"confirmPassword\"\n    ) {\n      setPassword((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value\n        };\n      });\n    } else {\n      setNewData((prevState) => {\n        return {\n          ...prevState,\n          [event.target.name]: value\n        };\n      });\n    }\n  };\n\n  return (\n    <div className=\"settings\">\n      <div className=\"row form\">\n        {/* box-shadow bg white */}\n        <div className=\"col-md-5\">\n          <div class=\"upload-img\">\n            <input\n              type=\"file\"\n              id=\"img\"\n              name=\"prfl_img\"\n              accept=\".gif, .jpg, .png\"\n              onChange={onChangeHandler}\n            />\n            <label\n              onClick={() => {\n                getFile1();\n                // setImgView(true);\n              }}\n              htmlFor=\"img\"\n              id=\"uploadButton1\"\n              style={\n                {\n                  // backgroundImage: `url('${props.img}')`\n                }\n              }\n            >\n              <span>+</span>\n            </label>\n          </div>\n          {authCtx.user !== null && (\n            <>\n              <p className=\"name\">{authCtx.user.name}</p>\n              <p className=\"phn\">{authCtx.user.phone}</p>\n              <p className=\"email\">{authCtx.user.email}</p>\n              <p className=\"branch\">{authCtx.user.location}</p>\n            </>\n          )}\n        </div>\n        <div className=\"col-md-7\">\n          <form className=\"edit-details\">\n            <h4 className=\"title\">Account Details</h4>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <label for=\"name\">Name:</label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={newData.name}\n                  onChange={onChangeHandler}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <label for=\"phone\">Phone:</label>\n                <input\n                  type=\"tel\"\n                  class=\"form-control\"\n                  id=\"mno\"\n                  name=\"mno\"\n                  value={newData.mno}\n                  onChange={onChangeHandler}\n                />\n              </div>\n            </div>\n            <label for=\"email\">Email:</label>\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              id=\"email\"\n              name=\"email\"\n              value={authCtx.user !== null && authCtx.user.email}\n              disabled\n            />\n            <div className=\"footer\">\n              <button\n                class=\"save\"\n                type=\"button\"\n                onClick={() => updateUser(newData)}\n              >\n                Save\n              </button>\n              {/* <button class=\"cancel\" type=\"button\">\n                Clear\n              </button> */}\n            </div>\n            <br />\n\n            {/* //button */}\n            <h4 className=\"title\">Account Security</h4>\n            {/* <label for=\"oldpass\">Old Password:</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              id=\"oldpass\"\n              name=\"oldPassword\"\n              value={password.oldPassword}\n              onChange={onChangeHandler}\n            /> */}\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <label for=\"newpass\">New Password:</label>\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  id=\"newpass\"\n                  name=\"newPassword\"\n                  value={password.newPassword}\n                  onChange={onChangeHandler}\n                />\n                <i class=\"fas fa-eye\" id=\"togglePassword\"></i>\n              </div>\n              <div className=\"col-sm-6\">\n                <label for=\"pass\">Confirm Password:</label>\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  id=\"pass\"\n                  name=\"confirmPassword\"\n                  value={password.confirmPassword}\n                  onChange={onChangeHandler}\n                />\n                <i\n                  class=\"fas fa-eye\"\n                  id=\"togglePassword1\"\n                  style={{ right: \"15px\" }}\n                ></i>\n              </div>\n            </div>\n\n            <div className=\"footer\">\n              <button\n                class=\"save\"\n                type=\"button\"\n                onClick={() => updatePassword(password)}\n              >\n                Save\n              </button>\n              {/* <button class=\"cancel\" type=\"button\">\n                Clear\n              </button> */}\n            </div>\n          </form>\n        </div>\n      </div>\n      {/* <div id=\"snackbar-container\"></div> */}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\n\nconst DeliveryCard = (props) => {\n  return (\n    <div className=\"col-md-3 delivery-card\">\n      {props.users.length === 0 ? (\n        <p>No Users!!!</p>\n      ) : (\n        props.users.map((user) => {\n          return (\n            <div className=\"card\" key={user.user_id}>\n              <img\n                className=\"img-fluid\"\n                src={user.user_image_url}\n                alt={user.user_username}\n              />\n              <p className=\"name\">\n                <b>Name:</b>&ensp;{user.user_username}\n              </p>\n              <p className=\"no\">\n                <b>Mobile:</b>&ensp;{user.user_phone_number}\n              </p>\n              <p className=\"add\">\n                <b>Address:</b>&ensp;{user.user_locality}\n              </p>\n              <div className=\"footer row\">\n                <button\n                  type=\"submit\"\n                  className=\"acpt\"\n                  onClick={() => props.acceptHandler(user)}\n                >\n                  Accept&nbsp;<i className=\"fas fa-check\"></i>\n                </button>\n                {user.userStatus === \"registered\" ? (\n                  <>\n                    <button\n                      type=\"submit\"\n                      className=\"rjct\"\n                      onClick={() => props.rejectHandler(user)}\n                    >\n                      Reject&nbsp;<i className=\"fas fa-times\"></i>\n                    </button>\n                  </>\n                ) : (\n                  <>\n                    <button\n                      type=\"submit\"\n                      className=\"rjct\"\n                      onClick={() => props.removeHandler(user)}\n                    >\n                      Remove&nbsp;<i className=\"fas fa-times\"></i>\n                    </button>\n                  </>\n                )}\n                {/* <button\n                  type=\"submit\"\n                  className=\"rjct\"\n                  onClick={() => props.rejectHandler(user)}\n                >\n                  Reject&nbsp;<i className=\"fas fa-times\"></i>\n                </button> */}\n              </div>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default DeliveryCard;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  acceptDeliveryUser,\n  getDeliveryUsers,\n  rejectDeliveryUser,\n  removeDeliveryUser,\n} from \"../api/DeliveryDB\";\nimport DeliveryCard from \"../reusable/DeliveryCard\";\nimport { Switch, Route, NavLink } from \"react-router-dom\";\nimport AuthContext from \"../context/auth-context\";\nimport { db } from \"../services/firebase\";\n\nconst Delivery = () => {\n  const [deliveryUsers, setDeliveryUsers] = useState({\n    newD: [],\n    verified: [],\n    rejected: [],\n  });\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    if (authCtx.user !== null) {\n      let deliveryList = [];\n      let location = authCtx.user.location;\n      // location = location[0].toUpperCase() + location.substring(1);\n      console.log(\"location: \", location);\n      var unsubscribe = db\n        .collection(\"DeliveryUsers\")\n        .doc(\"Branches\")\n        .collection(location)\n        .onSnapshot((docs) => {\n          docs.forEach((doc) => {\n            let data = doc.data();\n            if (data.user_image_url === \"\") {\n              data.user_image_url =\n                \"https://www.w3schools.com/howto/img_avatar.png\";\n            }\n            deliveryList.push(data);\n          });\n          // getDeliveryUsers(true, location, (deliveryList) => {\n          console.log(\"deliveryList\", deliveryList);\n          let newD = [];\n          let verified = [];\n          let rejected = [];\n          deliveryList.forEach((dguy) => {\n            if (dguy.verification === \"registered\") {\n              newD.push(dguy);\n            } else if (dguy.verification === \"rejected\") {\n              rejected.push(dguy);\n            } else if (dguy.verification === \"verified\") {\n              verified.push(dguy);\n            }\n          });\n          setDeliveryUsers({\n            newD: newD,\n            verified: verified,\n            rejected: rejected,\n          });\n          deliveryList = [];\n          // });\n        });\n\n      return () => {\n        unsubscribe();\n      };\n    }\n  }, [authCtx.user]);\n\n  const acceptHandler = (user) => {\n    acceptDeliveryUser(authCtx.user.location, user.user_id, (isAccepted) => {\n      if (isAccepted) {\n        console.log(\"accept\");\n        // newD -> verified\n        // let updatedUser = {\n        //   ...user,\n        //   userStatus: \"verified\"\n        // };\n        // setDeliveryUsers((prevState) => {\n        //   if (user.userStatus === \"registered\") {\n        //     let newD = [...prevState.newD];\n        //     let verified = [...prevState.verified];\n        //     let index = newD.findIndex((u) => u.user_id === user.user_id);\n        //     newD.splice(index, 1);\n        //     verified.push(updatedUser);\n        //     return {\n        //       ...prevState,\n        //       newD: newD,\n        //       verified: verified\n        //     };\n        //   } else {\n        //     let rejected = [...prevState.rejected];\n        //     let verified = [...prevState.verified];\n        //     let index = rejected.findIndex((u) => u.user_id === user.user_id);\n        //     rejected.splice(index, 1);\n        //     verified.push(updatedUser);\n        //     return {\n        //       ...prevState,\n        //       rejected: rejected,\n        //       verified: verified\n        //     };\n        //   }\n        // });\n        // newD.splice(index, noOfElementsToBeDeleted)\n      } else {\n        console.log(\"error-not accepted\");\n      }\n    });\n  };\n\n  const rejectHandler = (user) => {\n    rejectDeliveryUser(authCtx.user.location, user.user_id, (isRejected) => {\n      if (isRejected) {\n        console.log(\"rejected\");\n        let updatedUser = {\n          ...user,\n          userStatus: \"\",\n        };\n        setDeliveryUsers((prevState) => {\n          let newD = [...prevState.newD];\n          let rejected = [...prevState.rejected];\n          let index = newD.findIndex((u) => u.user_id === user.user_id);\n          newD.splice(index, 1);\n          rejected.push(updatedUser);\n          return {\n            ...prevState,\n            newD: newD,\n            rejected: rejected,\n          };\n        });\n      } else {\n        console.log(\"error-not rejected\");\n      }\n    });\n  };\n\n  const removeHandler = (user) => {\n    removeDeliveryUser(authCtx.user.location, user.user_id, (isRejected) => {\n      if (isRejected) {\n        console.log(\"removed\");\n\n        setDeliveryUsers((prevState) => {\n          let rejected = [...prevState.rejected];\n          let index = rejected.findIndex((u) => u.user_id === user.user_id);\n          rejected.splice(index, 1);\n          return {\n            ...prevState,\n            rejected: rejected,\n          };\n        });\n      } else {\n        console.log(\"error-not removed\");\n      }\n    });\n  };\n\n  let ui = null;\n  if (deliveryUsers === null) {\n    ui = <p>Loading!!!</p>;\n  } else if (deliveryUsers.verified.length === 0) {\n    ui = <p>No Delivery Persons!!!</p>;\n  } else {\n    ui = deliveryUsers.verified.map((user, i) => (\n      <div className=\"row details\" key={user.user_id}>\n        <p className=\"id\">{i + 1}</p>\n        <p className=\"name\">{user.user_username}</p>\n        <p className=\"number\">{user.user_phone_number}</p>\n        <p className=\"add\">{user.user_locality}</p>\n        <button\n          type=\"submit\"\n          className=\"action\"\n          onClick={() => rejectHandler(user)}\n        >\n          Remove\n        </button>\n      </div>\n    ));\n  }\n\n  return (\n    <>\n      <div className=\"row headnav\">\n        <div className=\"toggle\">\n          <NavLink to=\"/home/delivery/new\" className=\"newreq row\">\n            New Request\n          </NavLink>\n        </div>\n        <div className=\"toggle\">\n          <NavLink to=\"/home/delivery/reject\" className=\"newreq row\">\n            Rejected\n          </NavLink>\n        </div>\n      </div>\n\n      <div className=\"delivery-person\">\n        {/* <div className=\"newreq row\">\n        <h2 className=\"col-12\">New Request</h2>\n        <DeliveryCard />\n      </div> */}\n        <Switch>\n          <Route path=\"/home/delivery/new\">\n            <div className=\"row newreq\">\n              <DeliveryCard\n                users={deliveryUsers.newD}\n                acceptHandler={acceptHandler}\n                rejectHandler={rejectHandler}\n              />\n            </div>\n          </Route>\n          <Route path=\"/home/delivery/reject\">\n            <div className=\"newreq row\">\n              <DeliveryCard\n                users={deliveryUsers.rejected}\n                acceptHandler={acceptHandler}\n                removeHandler={removeHandler}\n                // rejectHandler={rejectHandler}\n              />\n            </div>\n          </Route>\n        </Switch>\n        <div className=\"person-list\">\n          <h2>Delivery Persons List</h2>\n          <div className=\"row head\">\n            {/* <p className=\"id\">Delivery ID</p> */}\n            <p className=\"id\">No.</p>\n            <p className=\"name\">Person Name</p>\n            <p className=\"number\">Mobile Number</p>\n            <p className=\"add\">Address</p>\n            <p className=\"action\">Action</p>\n          </div>\n          {ui}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Delivery;\n","import { db } from \"../services/firebase\";\n\n// read all - food & grocery\n// not in use, bcs it needs unsubscribe, which should be directly done in respecive component\n// const getDeliveryUsers = (location, setList) => {\n//   let list = [];\n//   db.collection(\"DeliveryUsers\")\n//     .doc(\"Branches\")\n//     .collection(location)\n//     .where(\"verification\", \"==\", \"verified\")\n//     .onSnapshot((docs) => {\n//       docs.forEach((doc) => {\n//         list.push(doc.data());\n//       });\n//       setList(list);\n//       list = [];\n//     });\n// };\n\nconst acceptDeliveryUser = (location, id, setList) => {\n  // console.log(\"Accepted\");\n  let value = window.confirm(\"Do you want Accept\");\n  // location = location[0].toUpperCase() + location.substring(1);\n  if (value) {\n    db.collection(\"DeliveryUsers\")\n      .doc(\"Branches\")\n      .collection(location)\n      .doc(id)\n      .update({\n        verification: \"verified\",\n      })\n      .then(() => {\n        setList(true);\n      })\n      .catch((e) => {\n        console.log(e);\n\n        setList(false);\n      });\n  } else {\n    console.log(\"Not Accepted\");\n    setList(false);\n  }\n};\n\nconst rejectDeliveryUser = (location, id, setList) => {\n  console.log(\"Accepted\");\n  let value = window.confirm(\"Do you want to Reject\");\n  // location = location[0].toUpperCase() + location.substring(1);\n  if (value) {\n    db.collection(\"DeliveryUsers\")\n      .doc(\"Branches\")\n      .collection(location)\n      .doc(id)\n      .update({\n        verification: \"rejected\",\n      })\n      .then(() => {\n        setList(true);\n      })\n      .catch((e) => {\n        console.log(e);\n\n        setList(false);\n      });\n  } else {\n    console.log(\"Not Accepted\");\n    setList(false);\n  }\n};\n\nconst removeDeliveryUser = (location, id, setList) => {\n  // console.log(\"Deleted\");\n  let value = window.confirm(\"Do you want Delete\");\n  // location = location[0].toUpperCase() + location.substring(1);\n  if (value) {\n    console.log(\"Deleted\");\n    db.collection(\"DeliveryUsers\")\n      .doc(\"Branches\")\n      .collection(location)\n      .doc(id)\n      .delete()\n      .then(() => {\n        setList(true);\n      })\n      .catch((e) => {\n        console.log(e);\n\n        setList(false);\n      });\n  } else {\n    console.log(\"Not Accepted\");\n    setList(false);\n  }\n};\n\nexport {\n  // getDeliveryUsers,\n  acceptDeliveryUser,\n  rejectDeliveryUser,\n  removeDeliveryUser,\n};\n","import React, { useContext } from \"react\";\nimport { Switch, Route, NavLink } from \"react-router-dom\";\nimport Dashboard from \"../pages/Dashboard\";\nimport Food from \"./FoodItems/Food\";\nimport Orders from \"./Orders/Orders\";\nimport Grocery from \"./Grocery/Grocery\";\nimport AddNew from \"./FoodItems/AddNew/AddNew\";\nimport AddNewItem from \"./Grocery/AddNewItem/AddNewItem\";\n// import FoodItem from \"./FoodItems/FoodItem\";\nimport Items from \"../reusable/Items/Items\";\nimport Profile from \"../pages/Profile\";\nimport Delivery from \"../pages/Delivery\";\n\nimport AuthContext from \"../context/auth-context\";\n\nconst Sidebar = (props) => {\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <section>\n      {/* <!-- main content --> */}\n      <div className=\"container-fluid pt\">\n        <div className=\"flex-wrapper\">\n          <div className=\"sidebar\">\n            <ul className=\"sidebar-list\">\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/dashboard/allorder\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  {/* <i className=\"fas fa-tachometer-alt\"></i> */}\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/dashboard.png\"\n                    alt=\"dashboard\"\n                  />\n                  <span>Dashboard</span>\n                </NavLink>\n              </li>\n              {/* <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/profile\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  \n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/user.png\"\n                    alt=\"profile\"\n                  />\n                  <span>Profile</span>\n                </NavLink>\n              </li> */}\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/fooditems\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  {/* <i class=\"fas fa-utensils\"></i> */}\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/cutlery.png\"\n                    alt=\"fooditem\"\n                  />\n                  <span>Food Items</span>\n                </NavLink>\n              </li>\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/grocery\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  {/* <i className=\"fas fa-shopping-basket\"></i> */}\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/groceries.png\"\n                    alt=\"grocery\"\n                  />\n                  <span>Grocery</span>\n                </NavLink>\n              </li>\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/orders\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/order.png\"\n                    alt=\"fooditem\"\n                  />\n                  <span>Orders</span>\n                </NavLink>\n              </li>\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/delivery\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  <img\n                    className=\"img-fluid\"\n                    src=\"https://cdn-icons-png.flaticon.com/512/2830/2830312.png\"\n                    alt=\"fooditem\"\n                  />\n                  <span>Delivery</span>\n                </NavLink>\n              </li>\n              <li className=\"list-item\">\n                <NavLink\n                  to=\"/home/profile\"\n                  activeClassName=\"active\"\n                  className=\"list-link\"\n                >\n                  <img\n                    className=\"img-fluid\"\n                    // src=\"/images/profile.png\"\n                    src={authCtx.user !== null && authCtx.user.img}\n                    alt=\"fooditem\"\n                  />\n                  <span>Profile</span>\n                </NavLink>\n              </li>\n              <li className=\"list-item\">\n                <div className=\"list-link\" onClick={props.logoutHandler}>\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/images/exit.png\"\n                    alt=\"fooditem\"\n                  />\n                  <span>Logout</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n          <div className=\"rt\">\n            <Switch>\n              {/* Food */}\n              <Route path=\"/home/fooditems/addnew\">\n                <AddNew type=\"Food\" />\n              </Route>\n              <Route path=\"/home/fooditems/breakfast\">\n                {/* <BreakFast /> */}\n                {/* <FoodItem title=\"BreakFast\" type=\"food\" /> */}\n                <Items title=\"BreakFast\" type=\"Food\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/fooditems/lunch\">\n                <Items title=\"Lunch\" type=\"Food\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/fooditems/dinner\">\n                <Items title=\"Dinner\" type=\"Food\" authCtx={authCtx} />\n              </Route>\n              {/* <Route path=\"/home/fooditems/starters\">\n                <Items title=\"Starters\" type=\"food\" authCtx={authCtx} />  \n              </Route>\n              <Route path=\"/home/fooditems/desserts\">\n                <Items title=\"Desserts\" type=\"food\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/fooditems/bigdeal\">\n                <Items title=\"BigDeal\" type=\"food\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/fooditems/juice\">\n                <Items title=\"Juice\" type=\"food\" authCtx={authCtx} />\n              </Route> */}\n              <Route path=\"/home/fooditems\">\n                <Food />\n              </Route>\n\n              {/* Food Orders */}\n              <Route path=\"/home/orders\">\n                <Orders />\n              </Route>\n\n              {/* Grocery */}\n              <Route path=\"/home/grocery/rice\">\n                <Items title=\"Rice\" type=\"Grocery\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/grocery/fruitsvegs\">\n                <Items\n                  title=\"Fruits_Vegetables\"\n                  type=\"Grocery\"\n                  authCtx={authCtx}\n                />\n              </Route>\n              {/* <Route path=\"/home/grocery/cannedgoods\">\n                <Items title=\"CannedGoods\" type=\"grocery\" authCtx={authCtx} />\n              </Route> */}\n              <Route path=\"/home/grocery/summer-drinks-beverages\">\n                <Items\n                  title=\"Summer_Drinks_Beverages\"\n                  type=\"Grocery\"\n                  authCtx={authCtx}\n                />\n              </Route>\n              <Route path=\"/home/grocery/soaps\">\n                <Items title=\"soaps\" type=\"Grocery\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/grocery/pharmacy\">\n                <Items title=\"Pharmacy\" type=\"Grocery\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/grocery/organics\">\n                <Items title=\"Organics\" type=\"Grocery\" authCtx={authCtx} />\n              </Route>\n              {/* <Route path=\"/home/grocery/cleaners\">\n                <Items title=\"Cleaners\" type=\"grocery\" authCtx={authCtx} />\n              </Route>\n              <Route path=\"/home/grocery/others\">\n                <Items title=\"Others\" type=\"grocery\" authCtx={authCtx} />\n              </Route> */}\n              <Route path=\"/home/grocery/addnewitem\">\n                <AddNewItem type=\"Grocery\" />\n              </Route>\n              <Route path=\"/home/grocery\">\n                <Grocery />\n              </Route>\n\n              {/* Delivery */}\n              <Route path=\"/home/delivery\">\n                <Delivery />\n              </Route>\n\n              {/* Profile */}\n              <Route path=\"/home/profile\">\n                <Profile />\n              </Route>\n\n              {/* Dashboard */}\n              <Route path=\"/home/dashboard/manual\">\n                <Dashboard />\n              </Route>\n              <Route path=\"/home/dashboard/delivered\">\n                <Dashboard type=\"food\" />\n              </Route>\n              <Route path=\"/home/dashboard/ondeliver\">\n                <Dashboard type=\"food\" />\n              </Route>\n              <Route path=\"/home/dashboard/preparing\">\n                <Dashboard type=\"food\" />\n              </Route>\n              <Route path=\"/home/dashboard/neworder\">\n                <Dashboard type=\"food\" />\n              </Route>\n              <Route path=\"/home/dashboard/allorder\">\n                <Dashboard type=\"food\" />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Sidebar;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../services/firebase\";\nimport IdleTimeoutModal from \"../ui/IdleTimeoutModal\";\nimport IdleTimerContainer from \"../helpers/IdleTimerContainer\";\nimport Navbar from \"../components/Navbar\";\nimport Sidebar from \"../components/Sidebar\";\nimport { useHistory } from \"react-router\";\nimport ReactNotifications from \"react-notifications-component\";\n// import AuthContext from \"../context/auth-context\";\n\nfunction Home(props) {\n  const [showTimeoutModal, setShowTimeoutModal] = useState(false);\n  const [isTimedout, setIsTimedout] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    history.push(\"/home/dashboard/allorder\");\n  }, []);\n\n  const handleClose = () => {\n    setShowTimeoutModal(false);\n    setIsTimedout(false);\n  };\n\n  const logoutHandler = () => {\n    auth\n      .signOut()\n      .then(() => {\n        // Sign-out successful.\n        console.log(\"signed out successfully...\");\n        // alert(\"signed out\");\n        localStorage.removeItem(\"userId\");\n        props.history.replace(\"/\");\n      })\n      .catch((error) => {\n        // An error happened.\n        alert(\"Some Error To Logout!!!\");\n        console.log(error);\n      });\n  };\n\n  const timeoutModalHandler = () => {\n    setShowTimeoutModal(true);\n  };\n  return (\n    <div className=\"App\">\n      <ReactNotifications />\n      <IdleTimeoutModal\n        showModal={showTimeoutModal}\n        handleClose={handleClose}\n        handleLogout={logoutHandler}\n      />\n      <IdleTimerContainer\n        handleLogout={logoutHandler}\n        timeout={isTimedout}\n        timeoutModal={timeoutModalHandler}\n        timedoutHandler={(bool) => {\n          setIsTimedout(bool);\n        }}\n      />\n      <Navbar logoutHandler={logoutHandler} />\n      <Sidebar logoutHandler={logoutHandler} />\n    </div>\n  );\n}\nexport default Home;\n","import React from \"react\";\nimport Lottie from \"react-lottie\";\nimport { useHistory } from \"react-router\";\nimport * as pagenotfound from \"../assets/images/64076-404-not-found-page.json\";\n\nconst PageNotFound = () => {\n  const history = useHistory();\n  const defaultOptions1 = {\n    loop: true,\n    autoplay: true,\n    animationData: pagenotfound.default,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\"\n    }\n  };\n\n  return (\n    <div id=\"wrapper\" onClick={() => history.push(\"/\")}>\n      <Lottie options={defaultOptions1} height={500} width={1000} />\n      {/* <div id=\"info\">\n        <h3>This page could not be found</h3>\n      </div> */}\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import \"./styles.css\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport PageNotFound from \"./ui/404Error\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport AuthContext from \"./context/auth-context\";\n// import BulkUpdate from \"./components/BulkUpdate\";\n\nexport default function App() {\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    // console.log(\"location: \", window.location.pathname);\n    if (!authCtx.isLoggedIn) {\n      history.replace(\"/\");\n    } else {\n      history.replace(\"/home\");\n    }\n  }, [authCtx.isLoggedIn]);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        {/* <Route path=\"/bulk\" component={BulkUpdate} /> */}\n        <Route path=\"/home\" component={Home} />\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"*\" render={() => <PageNotFound />} />\n      </Switch>\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./context/auth-context\";\nimport { OrdersContextProvider } from \"./context/orders-context\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <AuthContextProvider>\n    <OrdersContextProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </OrdersContextProvider>\n  </AuthContextProvider>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__3R81p\",\"Button\":\"Login_Button__3M5ml\",\"Link\":\"Login_Link__1qBtC\"};"],"sourceRoot":""}