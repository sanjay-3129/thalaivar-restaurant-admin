{"version":3,"sources":["ui/EditModal/EditModal.module.css","ui/Card/Card.module.css","ui/DeliveryModal/DeliveryModal.module.css","services/firebase.js","context/auth-context.js","ui/Input.js","pages/Login.js","ui/IdleTimeoutModal.js","helpers/IdleTimerContainer.js","context/orders-context.js","ui/Counter.js","components/Navbar.js","api/OrderDB.js","ui/Card/Card.js","ui/Backdrop.js","ui/DeliveryModal/DeliveryModal.js","components/Dashboard/OrderMaintain.js","api/ItemDB.js","components/Manual/ManualBilling.js","pages/Dashboard.js","components/FoodItems/Food.js","ui/Charts/LineChart.js","ui/Charts/PieChart.js","ui/Tables/Tables.js","helpers/ExportToExcel.js","components/Orders/Orders.js","reusable/Card/Card.js","components/Grocery/Grocery.js","components/FoodItems/AddNew/PreviewCard.js","components/FoodItems/AddNew/AddNewForm.js","reusable/Modals/AlertModal.js","components/FoodItems/AddNew/AddNew.js","components/Grocery/AddNewItem/PreviewCard.js","components/Grocery/AddNewItem/AddNewForm.js","components/Grocery/AddNewItem/AddNewItem.js","ui/EditModal/EditModal.js","ui/EditModal/GroceryEditModal.js","ui/Snackbar/Snackbar.js","reusable/Modals/DeleteConfirmModal.js","reusable/Items/Items.js","pages/Profile.js","reusable/DeliveryCard.js","pages/Delivery.js","api/DeliveryDB.js","components/Sidebar.js","pages/Home.js","ui/404Error.js","App.js","index.js","pages/Login.module.css"],"names":["module","exports","restaurant","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","auth","messaging","getToken","setTokenFound","currentToken","vapidKey","console","log","enablePersistence","experimentalTabSynchronization","then","catch","err","code","AuthContext","React","createContext","user","id","name","location","role","email","img","phone","isLoggedIn","setUser","setIsLoggedIn","logout","AuthContextProvider","props","useState","useEffect","userId","localStorage","getItem","collection","doc","get","data","e","Provider","value","status","children","Input","Form","Group","className","controlId","Label","label","Control","type","placeholder","onChange","Value","isText","Text","text","Login","authCtx","useContext","error","setError","password","userCred","setUserCred","isTokenFound","token","setToken","tokenFunc","changeHandler","event","val","target","prevState","style","Alert","variant","onSubmit","preventDefault","signInWithEmailAndPassword","userCredential","uid","setItem","fcm_token","update","history","push","Button","IdleTimeOutModal","Modal","show","showModal","onHide","handleClose","Header","closeButton","Title","Body","Footer","onClick","handleLogout","IdleTimerContainer","idleTimerRef","useRef","timeoutDuration","ref","timeout","onIdle","timeoutModal","current","reset","timedoutHandler","onActive","OrdersContext","orderData","online","dinein","ready","cancelled","setOrderData","OrdersContextProvider","Counter","orderContext","telephone","Overlay","logoutHandler","Navbar","isOverlay","setIsOverlay","src","alt","href","to","activeClassName","noOfDaysInNormalYear","noOfDaysInLeapYear","billPaidOrder","order","isAdded","orderType","items","daitem","its","item","updateitem","itemName","Name","itemId","itemPrice","itemSize","noOfQuantity","itemQuantity","order_items","actualPrice","totalPrice","timestamp","Date","getTime","date","day","getDate","month","getMonth","getFullYear","orders","FieldValue","arrayUnion","set","createDocumentIds","days","year","docIds","i","getOrders","setOrders","ty","datee","onlineStat","Array","fill","dineInStat","onlineRevenue","dineInRevenue","forEach","o","hour","parseInt","getHours","length","updateOrderStatus","isUpdated","dBoyId","userStatus","Card","classes","Backdrop","onClose","position","top","left","width","height","zIndex","background","ModalOverlay","deliveryUsers","setDeliveryUsers","list","unsubscribe","where","onSnapshot","docs","dUser","currentOrders","user_id","orderId","address","userDetails","userAddress","ui","map","statusUi","styles","free","assign","assignDeliveryUser","span","busy","span1","title","user_username","textDecoration","row","marginBottom","no","user_phone_number","ord","class","modal","assignmodal","hname","hno","hstatus","hassign","hcurrentOrder","DeliveryModal","ReactDOM","createPortal","closeModal","document","getElementById","OrderMaintain","assignModal","setAssignModal","undefined","deliveryAssignHandler","pathname","includes","getDeliveredOrders","hours","mins","getMinutes","timePeriod","userName","order_address","payment","isPaid","noOfItems","addOutOfStock","branch","unit","minimumUnit","addItem","price","category","bucketName","storageRef","storage","subCategoryTimestamp","file","imgRef","child","put","getDownloadURL","nameSearch","createNameSearchArray","Bestseller","Type","actual_price","categories","currency","current_price","currentPrice","dealoftheday","dealOfTheDay","description","desc","image","isproductavailable","isProductAvailable","product_id","productId","quantityPerUnit","shop_name","name_search","bestSeller","BranchName","actualUnit","add","docRef","pName","toLowerCase","sum","ManualBilling","manual","setManual","generate","setGenerate","titles","setItems","listPromises","tit","Promise","all","res","getMultiTitleItems","onChangeHandler","removeOrder","htmlFor","marginRight","padding","createOrder","disabled","ongoingOrders","cursor","setCurrentOrder","justifyContent","alignItems","currentOrder","autoComplete","outline","priceUi","min","removeItem","size","paymentMethod","window","alert","generateBill","addTelOrders","Dashboard","ordersContext","setType","allOrders","newOrders","preparingOrders","onDeliveryOrders","deliveredOrders","food","grocery","setOutOfStockItems","telephoneBillNoFood","telephoneBillNoGrocery","manualBillNoFood","manualBillNoGrocery","setOngoingOrders","cancelReason","deliveryCharge","discount","latitude","longitude","tax","userid","navigator","serviceWorker","onmessage","notification","localForage","findIndex","v","messageType","store","addNotification","message","body","insert","container","animationIn","animationOut","dismiss","duration","onScreen","statData","sort","a","b","Function","listFood","index","splice","localforage","listGrocery","sendNotificationToDeliveryUser","dGuy","registration_ids","vibrate","sound","show_in_foreground","priority","content_available","user_token","headers","Headers","Authorization","fetch","method","JSON","stringify","response","json","updateOrder","updatedOrder","allIndex","newIndex","prepareIndex","path","newItem","l","updatedItem","sumPrice","cquarterPrice","chalfPrice","cfullPrice","time","newData","Food","LineChart","labels","stat","filter","config","datasets","borderColor","tension","options","chart","Chart","destroy","PieChart","backgroundColor","hoverOffset","Tables","textAlign","textTransform","ExportToExcel","apiData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","Orders","itemType","setFilter","setStat","showTable","setShowTable","toISOString","split","max","labelName","checked","emptyData","noOfDays","isLeap","checkLeapYear","listOrders","values","getMonthOrders","listStat","monthStat","monthNo","noOfOrders","getYearOrders","updateItem","fontSize","PreviewCard","foodType","url","altName","fullPrice","AddNewForm","quarterPrice","halfPrice","draftHandler","required","clearHandler","DeleteConfirmModal","AddNew","offer","currencyCode","onSale","quaterPrice","cquaterPrice","setPrice","setAlert","$","prop","AlertModal","ename","files","URL","createObjectURL","priceItem","parseFloat","priceItemChangeHandler","quantity","units","pop","AddNewItem","isAddItem","pricee","quarter","half","full","setQuantity","singlenum","accept","on","click","change","this","reader","FileReader","onloadend","css","result","readAsDataURL","backgroundImage","paddingTop","btn","isUpdate","right","col","paddingRight","input","select","number","single","check","EditModal","singlerow","GroceryEditModal","snackbar","el","createElement","y","innerHTML","append","setTimeout","replace","confirmDelete","Items","deleteModal","setDeleteModal","updateModal","setUpdateModel","getItems","it","updateItemHandler","updatedData","refFromURL","delete","deleteItem","isDeleted","Profile","prfl_img","mno","setNewData","newPassword","confirmPassword","setPassword","x","toggleClass","for","authUser","snapshot","imgUrl","updateUser","onAuthStateChanged","updatePassword","DeliveryCard","users","user_image_url","user_locality","acceptHandler","rejectHandler","removeHandler","Delivery","newD","verified","rejected","deliveryList","dguy","verification","setList","confirm","acceptDeliveryUser","isAccepted","rejectDeliveryUser","isRejected","u","Sidebar","Grocery","Home","showTimeoutModal","setShowTimeoutModal","isTimedout","setIsTimedout","useHistory","signOut","IdleTimeoutModal","bool","PageNotFound","defaultOptions1","loop","autoplay","animationData","pagenotfound","rendererSettings","preserveAspectRatio","App","component","exact","render","rootElement"],"mappings":"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","file":"static/js/main.e01fc969.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"EditModal_modal__30IoW\",\"row\":\"EditModal_row__1IOSq\",\"right\":\"EditModal_right__2tsf5\",\"col\":\"EditModal_col__2zR6c\",\"input\":\"EditModal_input__BzCK-\",\"select\":\"EditModal_select__3ecWR\",\"number\":\"EditModal_number__1tuI4\",\"btn\":\"EditModal_btn__1wHDB\",\"single\":\"EditModal_single__3ak-2\",\"check\":\"EditModal_check__2DtWW\",\"label\":\"EditModal_label__2Rhwu\",\"singlerow\":\"EditModal_singlerow__2JO9c\",\"singlenum\":\"EditModal_singlenum__1XuZJ\",\"singleprice\":\"EditModal_singleprice__7MgFd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__xVu6V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"DeliveryModal_modal__pwOXT\",\"assignmodal\":\"DeliveryModal_assignmodal__2VagV\",\"row\":\"DeliveryModal_row__q4me-\",\"hname\":\"DeliveryModal_hname__fl55l\",\"hno\":\"DeliveryModal_hno__3LzZz\",\"hstatus\":\"DeliveryModal_hstatus__3GOba\",\"hassign\":\"DeliveryModal_hassign__1vBGK\",\"hcurrentOrder\":\"DeliveryModal_hcurrentOrder__2WavA\",\"name\":\"DeliveryModal_name__ekLvC\",\"no\":\"DeliveryModal_no__LkD0H\",\"status\":\"DeliveryModal_status__1dYhN\",\"assign\":\"DeliveryModal_assign__2CKYs\",\"span\":\"DeliveryModal_span__3fXhr\"};","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/messaging\";\r\n\r\n// config for institute\r\nconst config = {\r\n  apiKey: \"AIzaSyCmOWm_VEzYodG_PzusXD61HmEkSyV1Kcw\",\r\n  authDomain: \"thalaivan-restaurant.firebaseapp.com\",\r\n  projectId: \"thalaivan-restaurant\",\r\n  storageBucket: \"thalaivan-restaurant.appspot.com\",\r\n  messagingSenderId: \"1084918476722\",\r\n  appId: \"1:1084918476722:web:1502d45a5f59d483977eab\",\r\n  measurementId: \"G-ZKVE7EMKFJ\"\r\n};\r\n\r\nconst restaurant = firebase.initializeApp(config);\r\n\r\nrestaurant.analytics();\r\n// firebase.analytics();\r\nconst db = restaurant.firestore();\r\nconst auth = restaurant.auth();\r\nconst messaging = restaurant.messaging();\r\nconst publicKey =\r\n  \"BLA1gt_4yje_f8ttbbDAToMEeN1BT9qygiB5Bc8ShJh0qc_cTBcZUznZNd5A1XBla2lX-IMyLJhFzjIezu58jEI\";\r\n\r\n// notifications\r\nexport const getToken = async (setTokenFound) => {\r\n  let currentToken = \"\";\r\n  try {\r\n    currentToken = await messaging.getToken({ vapidKey: publicKey });\r\n    // console.log(\"Current Token\", currentToken);\r\n    if (currentToken) {\r\n      setTokenFound(true);\r\n    } else {\r\n      setTokenFound(false);\r\n    }\r\n  } catch (error) {\r\n    console.log(\"An error occurred while retrieving token.\", error);\r\n  }\r\n  // messaging.onMessage((payload) => {\r\n  //   console.log(\"onmes---\");\r\n  //   // resolve(payload);\r\n  // });\r\n  return currentToken;\r\n};\r\n\r\n// messaging.getToken().then((currentToken) => {\r\n//   if (currentToken) {\r\n//     console.log(\"token\", currentToken);\r\n//   } else {\r\n//     // Show permission request.\r\n//     console.log(\r\n//       \"No Instance ID token available. Request permission to generate one.\"\r\n//     );\r\n//   }\r\n//   /** When app is active */\r\n//   firebase.messaging().onMessage(\r\n//     (payload) => {\r\n//       console.log(payload);\r\n//     },\r\n//     (e) => {\r\n//       console.log(e);\r\n//     }\r\n//   );\r\n// });\r\n\r\n// getToken();\r\nexport const onMessageListener = () =>\r\n  new Promise((resolve) => {\r\n    messaging.onMessage((payload) => {\r\n      console.log(\"onmes\");\r\n      resolve(payload);\r\n    });\r\n  });\r\n\r\n// offline support\r\ndb.enablePersistence({ experimentalTabSynchronization: true })\r\n  .then(() => {\r\n    console.log(\"Woohoo! Multi-Tab Persistence!\");\r\n  })\r\n  .catch((err) => {\r\n    if (err.code === \"failed-precondition\") {\r\n      // Multiple tabs open, persistence can only be enabled\r\n      // in one tab at a a time.\r\n      // ...\r\n      console.log(\r\n        \"multiple tab is opened please close this tab and use only one tab, when offline\"\r\n      );\r\n    } else if (err.code === \"unimplemented\") {\r\n      // The current browser does not support all of the\r\n      // features required to enable persistence\r\n      // ...\r\n      console.log(\r\n        \"Current Browser or its version doesn't support offline mode\"\r\n      );\r\n    }\r\n  });\r\n\r\nexport { db, auth, firebase, messaging };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { auth, db } from \"../services/firebase\";\r\n\r\nconst AuthContext = React.createContext({\r\n  user: {\r\n    id: \"\",\r\n    name: \"\",\r\n    location: \"\",\r\n    role: \"\",\r\n    email: \"\",\r\n    img: \"\",\r\n    phone: \"\"\r\n  },\r\n  isLoggedIn: false,\r\n  setUser: (user) => {},\r\n  setIsLoggedIn: () => {},\r\n  logout: () => {}\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let userId = localStorage.getItem(\"userId\");\r\n    if (userId !== null) {\r\n      // auth.onAuthStateChanged((user) => {\r\n      //   if (user !== null) {\r\n      //   }\r\n      // });\r\n      db.collection(\"admin\")\r\n        .doc(userId)\r\n        .get()\r\n        .then((doc) => {\r\n          setUser(doc.data());\r\n          setIsLoggedIn(true);\r\n        })\r\n        .catch((e) => console.log(e));\r\n    } else {\r\n      setIsLoggedIn(false);\r\n    }\r\n  }, []);\r\n\r\n  const setMyUser = (user) => {\r\n    console.log(\"Setting User\", user);\r\n    setUser(user);\r\n  };\r\n\r\n  const setLoggedIn = (status) => {\r\n    setIsLoggedIn(status);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    console.log(\"logout\");\r\n    // return true;\r\n    // auth\r\n    //   .signOut()\r\n    //   .then(() => {\r\n    //     // Sign-out successful.\r\n    //     console.log(\"signed out successfully...\");\r\n    //     // alert(\"signed out\");\r\n    //     return true;\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     // An error happened.\r\n    //     console.log(error);\r\n    //     return false;\r\n    //   });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: user,\r\n        setUser: setMyUser,\r\n        isLoggedIn: isLoggedIn,\r\n        setIsLoggedIn: setLoggedIn,\r\n        logout: logoutHandler\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst Input = (props) => {\r\n  return (\r\n    <div>\r\n      <Form.Group className=\"mb-3\" controlId={props.id}>\r\n        <Form.Label>{props.label}</Form.Label>\r\n        <Form.Control\r\n          type={props.type}\r\n          placeholder={props.placeholder}\r\n          onChange={props.onChange}\r\n          value={props.Value}\r\n          name={props.name}\r\n        />\r\n        {props.isText && (\r\n          <Form.Text className=\"text-muted\">{props.text}</Form.Text>\r\n        )}\r\n      </Form.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Button, Alert } from \"react-bootstrap\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport { auth, db, getToken } from \"../services/firebase\";\r\nimport Input from \"../ui/Input\";\r\nimport style from \"./Login.module.css\";\r\n\r\nconst Login = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const [error, setError] = useState();\r\n  const [userCred, setUserCred] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n  const [isTokenFound, setTokenFound] = useState(false);\r\n  const [token, setToken] = useState(false);\r\n  console.log(\"Token found\", isTokenFound);\r\n\r\n  // console.log(\"navigator\", navigator.onLine);\r\n  useEffect(() => {\r\n    let data;\r\n    async function tokenFunc() {\r\n      data = await getToken(setTokenFound);\r\n      if (data) {\r\n        setToken(data);\r\n        console.log(\"Token is\", data);\r\n      }\r\n      return data;\r\n    }\r\n    tokenFunc();\r\n  }, [setTokenFound]);\r\n\r\n  const changeHandler = (event) => {\r\n    let val = event.target.value;\r\n    setUserCred((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [event.target.name]: val\r\n      };\r\n    });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    // firebase signin auth\r\n    auth\r\n      .signInWithEmailAndPassword(userCred.email, userCred.password)\r\n      .then((userCredential) => {\r\n        // setOpen(true);\r\n        // Signed in\r\n        let userId = userCredential.user.uid;\r\n        console.log(\"userId\", userId);\r\n        localStorage.setItem(\"userId\", userId);\r\n        // props.history.replace(`/home?userId=${userId}`);\r\n        db.collection(\"admin\")\r\n          .doc(userId)\r\n          .get()\r\n          .then((doc) => {\r\n            console.log(doc.data());\r\n            let user = doc.data();\r\n            if (user.fcm_token !== token) {\r\n              user = {\r\n                ...user,\r\n                fcm_token: token\r\n              };\r\n              db.collection(\"admin\")\r\n                .doc(userId)\r\n                .update({\r\n                  fcm_token: token\r\n                })\r\n                .then(() => {})\r\n                .catch((e) => console.log(e));\r\n            }\r\n            console.log(\"user\", user);\r\n            authCtx.setUser(user);\r\n            authCtx.setIsLoggedIn(true);\r\n            // sessionStorage.setItem(\"userId\", userId);\r\n          })\r\n          .catch((e) => console.log(e));\r\n        props.history.push(\"/home\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e.code);\r\n        if (e.code === \"auth/wrong-password\") {\r\n          setError(\"Incorrect password. Try again.\");\r\n        } else if (e.code === \"auth/network-request-failed\") {\r\n          setError(\"Internet connection is down!!!\");\r\n        } else {\r\n          setError(\"User doesn't exist. Please do register.\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={style.Login}>\r\n        {/* <Snackbar open={open} handleClose={handleClose} /> */}\r\n        <h1>Login</h1>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        <form onSubmit={submitHandler}>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            label=\"Email address\"\r\n            id=\"email\"\r\n            placeholder=\"Enter email\"\r\n            text=\"We'll never share your email with anyone else.\"\r\n            isText=\"true\"\r\n            onChange={changeHandler}\r\n            value={userCred.email}\r\n          />\r\n\r\n          <Input\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={changeHandler}\r\n            value={userCred.password}\r\n          />\r\n\r\n          <Button className={style.Button} variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button type=\"reset\" className={style.Button} variant=\"primary\">\r\n            Clear\r\n          </Button>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          {/* <p style={{ display: \"inline\" }}>Don't have an account? </p>\r\n          <a className={style.Link} href=\"/signup\">\r\n            Register\r\n          </a> */}\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n// import { propTypes } from \"react-bootstrap/esm/Image\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst IdleTimeOutModal = (props) => {\r\n  return (\r\n    <Modal show={props.showModal} onHide={props.handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>You Have Been Idle!</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>You Will Get Timed Out. You want to stay?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={props.handleLogout}>\r\n          Logout\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={props.handleClose}>\r\n          Stay\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default IdleTimeOutModal;\r\n","import React, { useRef, useState } from \"react\";\r\nimport IdleTimer from \"react-idle-timer\";\r\n\r\nconst IdleTimerContainer = (props) => {\r\n  const idleTimerRef = useRef(null);\r\n  const [timeoutDuration, setTimeoutDuration] = useState(1000 * 60 * 15); // 10mins\r\n\r\n  const onIdleHandler = () => {\r\n    console.log(\"user is idle...\");\r\n    if (props.timeout) {\r\n      props.handleLogout();\r\n    } else {\r\n      props.timeoutModal(); // opens the modal\r\n      idleTimerRef.current.reset();\r\n      props.timedoutHandler(true); // after the modal, if they are not responding then\r\n    }\r\n    // props.timeoutModal(); // opens the modal\r\n  };\r\n\r\n  const onActiveHandler = () => {\r\n    console.log(\"user is active...\");\r\n    props.timedoutHandler(false);\r\n  };\r\n\r\n  // const onActionHandler = () => {\r\n  //   console.log(\"user action...\");\r\n  //   props.timedoutHandler(false);\r\n  // };\r\n\r\n  return (\r\n    <IdleTimer\r\n      ref={idleTimerRef}\r\n      timeout={timeoutDuration} // {1000 * 60 * 15}, {1000 * 5 * 1}\r\n      onIdle={onIdleHandler}\r\n      onActive={onActiveHandler}\r\n      // onAction={onActionHandler}\r\n    />\r\n  );\r\n};\r\n\r\nexport default IdleTimerContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst OrdersContext = React.createContext({\r\n  orderData: {\r\n    online: 0,\r\n    dinein: 0,\r\n    ready: 0,\r\n    cancelled: 0\r\n  },\r\n  setOrderData: (orderData) => {}\r\n});\r\n\r\nexport const OrdersContextProvider = (props) => {\r\n  const [orderData, setOrderData] = useState({\r\n    online: 0,\r\n    dinein: 0,\r\n    ready: 0,\r\n    cancelled: 0\r\n  });\r\n\r\n  // useEffect(() => {\r\n  // }, []);\r\n\r\n  const setMyOrdersData = (orderData) => {\r\n    console.log(\"Setting orderData\", orderData);\r\n    setOrderData(orderData);\r\n  };\r\n\r\n  return (\r\n    <OrdersContext.Provider\r\n      value={{\r\n        orderData: orderData,\r\n        setOrderData: setMyOrdersData\r\n      }}\r\n    >\r\n      {props.children}\r\n    </OrdersContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OrdersContext;\r\n","import React, { useContext } from \"react\";\r\nimport OrdersContext from \"../context/orders-context\";\r\n\r\nconst Counter = (props) => {\r\n  const orderContext = useContext(OrdersContext);\r\n  // console.log(\"orderData\", orderContext);\r\n  return (\r\n    <div className=\"row header-count\">\r\n      <div className=\"inner-div\">\r\n        <div className=\"card\">\r\n          <h5>Online Orders:</h5>\r\n          <p className=\"count\">{orderContext.orderData.online}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"inner-div\">\r\n        <div className=\"card\">\r\n          <h5>Telephone:</h5>\r\n          <p className=\"count\">{orderContext.orderData.telephone}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"inner-div\">\r\n        <div className=\"card\">\r\n          <h5>On-Delivery:</h5>\r\n          <p className=\"count\">{orderContext.orderData.ready}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"inner-div\">\r\n        <div className=\"card\">\r\n          <h5>Cancelled:</h5>\r\n          <p className=\"count\">{orderContext.orderData.cancelled}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Counter from \"../ui/Counter\";\r\nimport Search from \"../ui/Search\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthContext from \"../context/auth-context\";\r\n// import OrdersContext from \"../context/orders-context\";\r\n\r\nconst Overlay = (props) => {\r\n  return (\r\n    <div className=\"content\">\r\n      <ul>\r\n        <li className=\"inner-list\">\r\n          <p>Welcome {props.authCtx.user.name} !</p>\r\n        </li>\r\n        {/* <li className=\"inner-list\">\r\n                  <a href=\"#\" className=\"list-link\">\r\n                    <i className=\"fas fa-cog\"></i>Settings\r\n                  </a>\r\n                </li> */}\r\n        <li className=\"inner-list\">\r\n          <div className=\"list-link\" onClick={props.logoutHandler}>\r\n            <i className=\"fas fa-sign-out-alt\"></i>Logout\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Navbar = (props) => {\r\n  const [isOverlay, setIsOverlay] = useState(false);\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"authCtx\", authCtx.user);\r\n  // }, [authCtx.user]);\r\n\r\n  const overlayHandler = () => {\r\n    setIsOverlay((prevState) => {\r\n      // console.log(userDetail, \"overlay\");\r\n      return !prevState;\r\n    });\r\n  };\r\n\r\n  // const [orderData, setOrderData] = useState({\r\n  //   online: 0,\r\n  //   dinein: 0,\r\n  //   ready: 0,\r\n  //   cancelled: 0\r\n  // });\r\n\r\n  return (\r\n    <section className=\"nav-bar\">\r\n      {authCtx.user !== null && (\r\n        <div className=\"navbar\">\r\n          <div className=\"logo\">\r\n            <img className=\"img-fluid\" src=\"/images/logo.jpg\" alt=\"Logo\" />\r\n          </div>\r\n          <Counter />\r\n          {/* <Search /> */}\r\n          <ul className=\"nav-item\">\r\n            <li className=\"list-item\">\r\n              <a className=\"list-link\" href=\"#l\">\r\n                <i className=\"far fa-bell\"></i>\r\n              </a>\r\n            </li>\r\n            <li className=\"list-item\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={overlayHandler}\r\n                className=\"btn collapsible\"\r\n              >\r\n                <div className=\"flex\">\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    src={authCtx.user.img}\r\n                    alt=\"profilepic\"\r\n                  />\r\n                  <p className=\"aname\">\r\n                    {authCtx.user.name}\r\n                    <i className=\"fas fa-angle-down\"></i>\r\n                  </p>\r\n                </div>\r\n              </button>\r\n              {isOverlay && (\r\n                <Overlay\r\n                  authCtx={authCtx}\r\n                  logoutHandler={props.logoutHandler}\r\n                />\r\n              )}\r\n            </li>\r\n            <li className=\"list-item\">\r\n              <Link\r\n                to=\"/home/profile\"\r\n                activeClassName=\"active\"\r\n                className=\"list-link\"\r\n              >\r\n                <i className=\"fas fa-cog\"></i>\r\n              </Link>\r\n            </li>\r\n            {/* <li className=\"list-item\">\r\n              <a className=\"list-link\" href=\"#l\">\r\n                <i className=\"fas fa-cog\"></i>\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {/* <!-- Header Ends --> */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import localforage from \"localforage\";\r\nimport { CardColumns } from \"react-bootstrap\";\r\nimport { db, firebase } from \"../services/firebase\";\r\n\r\nconst noOfDaysInNormalYear = {\r\n  \"01\": 31,\r\n  \"02\": 28,\r\n  \"03\": 31,\r\n  \"04\": 30,\r\n  \"05\": 31,\r\n  \"06\": 30,\r\n  \"07\": 31,\r\n  \"08\": 31,\r\n  \"09\": 30,\r\n  10: 31,\r\n  11: 30,\r\n  12: 31,\r\n};\r\nconst noOfDaysInLeapYear = {\r\n  \"01\": 31,\r\n  \"02\": 29,\r\n  \"03\": 31,\r\n  \"04\": 30,\r\n  \"05\": 31,\r\n  \"06\": 30,\r\n  \"07\": 31,\r\n  \"08\": 31,\r\n  \"09\": 30,\r\n  10: 31,\r\n  11: 30,\r\n  12: 31,\r\n};\r\n\r\n// program to check leap year\r\nconst checkLeapYear = (year) => {\r\n  //three conditions to find out the leap year\r\n  if ((0 === year % 4 && 0 !== year % 100) || 0 === year % 400) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst genrateBillOrder = (order) => {\r\n  console.log(\"orderdb genbil\", order);\r\n\r\n  //local storage code\r\n};\r\n\r\nconst billPaidOrder = (order, type, location, isAdded) => {\r\n  console.log(\"billPaidOrder\", order, location, type);\r\n  console.log(\"->\", order.items);\r\n  let orderType;\r\n  if (type === \"food\") {\r\n    orderType = \"FoodOrders\";\r\n  } else {\r\n    orderType = \"GroceryOrders\";\r\n  }\r\n\r\n  let daitem = order.items;\r\n  let its = [];\r\n  for (let item of daitem) {\r\n    let updateitem = {\r\n      itemName: item.Name,\r\n      itemId: item.id,\r\n      itemPrice: +item.itemPrice,\r\n      itemSize: +item.itemSize,\r\n      noOfQuantity: +item.itemQuantity,\r\n    };\r\n    its.push(updateitem);\r\n  }\r\n\r\n  let data;\r\n\r\n  if (type === \"food\") {\r\n    data = {\r\n      ...order,\r\n      order_items: its,\r\n      actualPrice: order.totalPrice,\r\n      status: \"delivered\",\r\n    };\r\n  } else {\r\n    data = {\r\n      ...order,\r\n      order_items: its,\r\n      actualPrice: order.totalPrice,\r\n      status: \"delivered\",\r\n    };\r\n  }\r\n  data.timestamp = \"\" + new Date().getTime();\r\n  const date = new Date();\r\n  let day = date.getDate();\r\n  if (day < 10) {\r\n    day = \"0\" + day;\r\n  }\r\n  let month = date.getMonth() + 1;\r\n  if (month < 10) {\r\n    month = \"0\" + month;\r\n  }\r\n  // delete items bcs we have order_items\r\n  // console.log(\"data-updated\", data, `${day}.${month}.${date.getFullYear()}`);\r\n  delete data.items;\r\n\r\n  // let orderRef = [];\r\n  // let df = orderRef.push(data);\r\n\r\n  db.collection(orderType)\r\n    .doc(\"branch\")\r\n    .collection(location)\r\n    .doc(`${day}.${month}.${date.getFullYear()}`)\r\n    .update({\r\n      orders: firebase.firestore.FieldValue.arrayUnion(data),\r\n    })\r\n    .then(() => {\r\n      isAdded(true);\r\n      console.log(\"Dine in Item updated\");\r\n    })\r\n    .catch((e) => {\r\n      // console.log(e, \"errorrrrs\");\r\n      db.collection(orderType)\r\n        .doc(\"branch\")\r\n        .collection(location)\r\n        .doc(`${day}.${month}.${date.getFullYear()}`)\r\n        .set({\r\n          orders: [data],\r\n        })\r\n        .then(() => {\r\n          isAdded(true);\r\n          console.log(\"Dine in Item created\");\r\n        })\r\n        .catch((e) => {\r\n          // console.log(e);\r\n          isAdded(false);\r\n        });\r\n    });\r\n};\r\nconst createDocumentIds = (days, month, year) => {\r\n  let docIds = [];\r\n  for (let i = 1; i <= days; i++) {\r\n    let doc = \"\";\r\n    if (i < 10) {\r\n      doc = \"0\" + i + \".\" + month + \".\" + year;\r\n    } else {\r\n      doc = i + \".\" + month + \".\" + year;\r\n    }\r\n    docIds.push(doc);\r\n  }\r\n  return docIds;\r\n};\r\n\r\nconst addTelOrders = (order, type, location, isAdded) => {\r\n  console.log(\"..............>>\", order, location);\r\n  console.log(\"->\", order.items, type);\r\n  let orderType;\r\n  if (type === \"food\") {\r\n    orderType = \"FoodOrders\";\r\n  } else {\r\n    orderType = \"GroceryOrders\";\r\n  }\r\n\r\n  let daitem = order.items;\r\n  let its = [];\r\n  for (let item of daitem) {\r\n    let updateitem = {\r\n      itemName: item.Name,\r\n      itemId: item.id,\r\n      itemPrice: item.itemPrice,\r\n      itemSize: item.itemSize,\r\n      // noOfQuantity: item.itemQuantity\r\n    };\r\n    its.push(updateitem);\r\n  }\r\n  // console.log(\"itss\", its);\r\n  let data;\r\n  if (type === \"food\") {\r\n    data = {\r\n      ...order,\r\n      order_items: its,\r\n      actualPrice: order.totalPrice,\r\n      status: \"booked\",\r\n    };\r\n  } else {\r\n    data = {\r\n      ...order,\r\n      order_items: its,\r\n      actualPrice: order.totalPrice,\r\n      status: \"booked\",\r\n    };\r\n  }\r\n  data.timestamp = \"\" + new Date().getTime();\r\n  const date = new Date();\r\n  let day = date.getDate();\r\n  if (day < 10) {\r\n    day = \"0\" + day;\r\n  }\r\n  let month = date.getMonth() + 1;\r\n  if (month < 10) {\r\n    month = \"0\" + month;\r\n  }\r\n  // delete items bcs we have order_items\r\n  delete data.items;\r\n  console.log(\"ordersss\", data);\r\n\r\n  db.collection(orderType)\r\n    .doc(\"todayOrders\")\r\n    .collection(location)\r\n    .doc(data.id)\r\n    .set(data)\r\n    .then((docRef) => {\r\n      isAdded(true);\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      isAdded(false);\r\n    });\r\n};\r\n\r\nconst getDeliveredOrders = (type, location, setOrders) => {\r\n  let ty = \"\";\r\n  if (type === \"food\") {\r\n    ty = \"FoodOrders\";\r\n  } else {\r\n    ty = \"GroceryOrders\";\r\n  }\r\n  let date = new Date();\r\n  let day = date.getDate();\r\n  if (day < 10) {\r\n    day = \"0\" + day;\r\n  }\r\n  let month = date.getMonth() + 1;\r\n  if (month < 10) {\r\n    month = \"0\" + month;\r\n  }\r\n  let year = date.getFullYear();\r\n  date = day + \".\" + month + \".\" + year;\r\n  db.collection(ty)\r\n    .doc(\"branch\")\r\n    .collection(location)\r\n    .doc(date)\r\n    .get()\r\n    .then((doc) => {\r\n      let orders = doc.data().orders;\r\n      setOrders(orders);\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      setOrders(null);\r\n    });\r\n};\r\n\r\n// // read all - food & grocery\r\nconst getOrders = (date, type, location, setOrders) => {\r\n  // let list = [];\r\n  let ty = \"\";\r\n  // let date = \"\";\r\n  if (type === \"food\") {\r\n    ty = \"FoodOrders\";\r\n    // date = \"02.11.2021\";\r\n  } else {\r\n    ty = \"GroceryOrders\";\r\n    // date = \"03.11.2021\";\r\n  }\r\n  let datee = new Date();\r\n  let day = datee.getDate();\r\n  if (day < 10) {\r\n    day = \"0\" + day;\r\n  }\r\n  let month = datee.getMonth() + 1;\r\n  if (month < 10) {\r\n    month = \"0\" + month;\r\n  }\r\n  let year = datee.getFullYear();\r\n  date = day + \".\" + month + \".\" + year;\r\n  // console.log(\"date\", date);\r\n  // let listStat = new Array(10).fill(0);\r\n  let onlineStat = new Array(10).fill(0);\r\n  let dineInStat = new Array(10).fill(0);\r\n  db.collection(ty)\r\n    .doc(\"branch\")\r\n    .collection(location)\r\n    .doc(date)\r\n    .get()\r\n    .then((doc) => {\r\n      let orders = doc.data().orders;\r\n      // console.log(\"o\", orders);\r\n      // let monthStat = doc.data().month;\r\n      let onlineRevenue = 0;\r\n      let dineInRevenue = 0;\r\n      // console.log(orders);\r\n      orders.forEach((o) => {\r\n        let hour = new Date(parseInt(o.timestamp)).getHours();\r\n        if (o.type === \"online\") {\r\n          onlineRevenue += o.totalPrice;\r\n        } else {\r\n          dineInRevenue += o.totalPrice;\r\n        }\r\n        // console.log(hour);\r\n        if (hour >= 6 && hour < 8) {\r\n          if (o.type === \"online\") {\r\n            onlineStat[0]++;\r\n          } else {\r\n            dineInStat[0]++;\r\n          }\r\n        } else if (hour >= 8 && hour < 10) {\r\n          if (o.type === \"online\") {\r\n            onlineStat[1]++;\r\n          } else {\r\n            dineInStat[1]++;\r\n          }\r\n        } else if (hour >= 10 && hour < 12) {\r\n          if (o.type === \"online\") {\r\n            onlineStat[2]++;\r\n          } else {\r\n            dineInStat[2]++;\r\n          }\r\n        } else if (hour >= 12 && hour < 14) {\r\n          if (o.type === \"online\") {\r\n            onlineStat[3]++;\r\n          } else {\r\n            dineInStat[3]++;\r\n          }\r\n        } else if (hour >= 14 && hour < 16) {\r\n          if (o.type === \"online\") {\r\n            onlineStat[4]++;\r\n          } else {\r\n            dineInStat[4]++;\r\n          }\r\n        } else if (hour >= 16 && hour < 18) {\r\n          if (o.type === \"online\") {\r\n            onlineStat[5]++;\r\n          } else {\r\n            dineInStat[5]++;\r\n          }\r\n        } else if (hour >= 18 && hour < 20) {\r\n          if (o.type === \"online\") {\r\n            onlineStat[6]++;\r\n          } else {\r\n            dineInStat[6]++;\r\n          }\r\n        } else if (hour >= 20 && hour < 22) {\r\n          if (o.type === \"online\") {\r\n            onlineStat[7]++;\r\n          } else {\r\n            dineInStat[7]++;\r\n          }\r\n        } else if (hour >= 22 && hour < 24) {\r\n          if (o.type === \"online\") {\r\n            onlineStat[8]++;\r\n          } else {\r\n            dineInStat[8]++;\r\n          }\r\n        } else if (hour >= 0 && hour < 6) {\r\n          if (o.type === \"online\") {\r\n            onlineStat[9]++;\r\n          } else {\r\n            dineInStat[9]++;\r\n          }\r\n        }\r\n      });\r\n      // monthStat.sort((a, b) =>\r\n      //   a.monthNo > b.monthNo ? 1 : b.monthNo > a.monthNo ? -1 : 0\r\n      // );\r\n      // for (let i = 0; i < monthStat.length; i++) {\r\n      //   listStat[i] += monthStat[i].noOfOrders;\r\n      // }\r\n      // console.log(\"list-data\", listStat);\r\n      if (orders.length === 0) {\r\n        setOrders(\"empty\");\r\n      } else {\r\n        let listStat = {\r\n          onlineStat: onlineStat,\r\n          onlineRevenue: onlineRevenue,\r\n          dineInStat: dineInStat,\r\n          dineInRevenue: dineInRevenue,\r\n        };\r\n        setOrders(orders, listStat);\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      let listStat = {\r\n        onlineStat: 0,\r\n        onlineRevenue: 0,\r\n        dineInStat: 0,\r\n        dineInRevenue: 0,\r\n      };\r\n      console.log(\"getFo\", e);\r\n      setOrders(\"empty\", listStat);\r\n    });\r\n};\r\n\r\n// get orders for whole month\r\nconst getMonthOrders = (type, location, filter, setOrders) => {\r\n  // current month\r\n  // previous month - differnt year\r\n  let date = filter.value.split(\"-\");\r\n  let year = date[0];\r\n  let month = date[1];\r\n  let days;\r\n  let noOfDays;\r\n\r\n  let ty = \"\";\r\n  if (type === \"food\") {\r\n    ty = \"FoodOrders\";\r\n    // date = \"02.11.2021\";\r\n  } else {\r\n    ty = \"GroceryOrders\";\r\n    // date = \"03.11.2021\";\r\n  }\r\n  let list = [];\r\n  let listPromises = [];\r\n  // leap year or not\r\n  let isLeap = checkLeapYear(parseInt(year));\r\n  if (isLeap) {\r\n    days = noOfDaysInNormalYear;\r\n  } else {\r\n    days = noOfDaysInLeapYear;\r\n  }\r\n  if (new Date().getMonth() + 1 == month) {\r\n    // current month\r\n    noOfDays = new Date().getDate();\r\n  } else {\r\n    // other month\r\n    noOfDays = days[month];\r\n  }\r\n  let docIds = createDocumentIds(noOfDays, month, year);\r\n  // console.log(\"docIds\", docIds);\r\n  docIds.forEach((id) => {\r\n    listPromises.push(\r\n      db.collection(ty).doc(\"branch\").collection(location).doc(id).get()\r\n    );\r\n  });\r\n  let listOrders = [];\r\n  // creating empty arrays\r\n  // let listStat = new Array(noOfDays).fill(0);\r\n  let onlineStat = new Array(noOfDays).fill(0);\r\n  let dineInStat = new Array(noOfDays).fill(0);\r\n  let onlineRevenue = 0;\r\n  let dineInRevenue = 0;\r\n  Promise.all(listPromises)\r\n    .then((values) => {\r\n      values.forEach((val) => {\r\n        // console.log(\"data\", val.data());\r\n        let data = val.data();\r\n        list.push(data);\r\n      });\r\n    })\r\n    .then(() => {\r\n      if (list.length === 0) {\r\n        setOrders(\"empty\");\r\n      } else {\r\n        // console.log(\"else\", list);\r\n        for (let i = 0; i < list.length; i++) {\r\n          // console.log(\"list\", list);\r\n          if (list[i] !== undefined) {\r\n            let orders = list[i].orders;\r\n            listOrders = [...listOrders, ...orders];\r\n            // if(list[i])\r\n            orders.forEach((o) => {\r\n              if (o.type === \"online\") {\r\n                onlineStat[i]++;\r\n                onlineRevenue += o.totalPrice;\r\n              } else {\r\n                dineInStat[i]++;\r\n                dineInRevenue += o.totalPrice;\r\n              }\r\n            });\r\n          }\r\n        }\r\n        // console.log(list);\r\n        let listStat = {\r\n          onlineStat: onlineStat,\r\n          onlineRevenue: onlineRevenue,\r\n          dineInStat: dineInStat,\r\n          dineInRevenue: dineInRevenue,\r\n        };\r\n        setOrders(listOrders, listStat);\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      let listStat = {\r\n        onlineStat: 0,\r\n        onlineRevenue: 0,\r\n        dineInStat: 0,\r\n        dineInRevenue: 0,\r\n      };\r\n      setOrders(\"empty\", listStat);\r\n      console.log(e);\r\n    });\r\n};\r\n\r\n// get orders for whole year\r\nconst getYearOrders = (type, location, filter, setOrders) => {\r\n  let ty = \"\";\r\n  let date = \"\";\r\n  if (type === \"food\") {\r\n    ty = \"FoodOrders\";\r\n    // date = \"02.11.2021\";\r\n  } else {\r\n    ty = \"GroceryOrders\";\r\n    // date = \"03.11.2021\";\r\n  }\r\n\r\n  let list = [];\r\n  let listOrders = [];\r\n  let listStat = [];\r\n  let listPromises = [];\r\n  let year = filter.value;\r\n  let docIds = createDocumentIds(31, \"12\", year);\r\n  // console.log(\"docIds\", docIds);\r\n  docIds.forEach((id) => {\r\n    listPromises.push(\r\n      db.collection(ty).doc(\"branch\").collection(location).doc(id).get()\r\n    );\r\n  });\r\n\r\n  Promise.all(listPromises)\r\n    .then((values) => {\r\n      values.forEach((val) => {\r\n        // console.log(\"data\", val.data());\r\n        let data = val.data();\r\n        if (data !== undefined) {\r\n          list.push(data);\r\n          // let order = val.data().orders;\r\n          // let statData = val.data().month;\r\n          // listOrders.push(order);\r\n          // listStat.push(statData);\r\n        }\r\n      });\r\n    })\r\n    .then(() => {\r\n      // console.log(\"list\", list);\r\n      if (list.length === 0) {\r\n        setOrders(\"empty\");\r\n      } else {\r\n        list.forEach((l) => {\r\n          listOrders = [...listOrders, ...l.orders];\r\n        });\r\n        let monthStat = list[list.length - 1].month;\r\n        monthStat.sort((a, b) =>\r\n          a.monthNo > b.monthNo ? 1 : b.monthNo > a.monthNo ? -1 : 0\r\n        );\r\n        for (let i = 0; i < monthStat.length; i++) {\r\n          listStat[i] += monthStat[i].noOfOrders;\r\n        }\r\n        // console.log(\"list-data\", listStat);\r\n        setOrders(listOrders, listStat);\r\n      }\r\n    })\r\n    .catch((e) => console.log(e));\r\n};\r\nvar unsubscribe;\r\n\r\nconst removeListener = () => {\r\n  try {\r\n    if (unsubscribe instanceof Function) {\r\n      unsubscribe();\r\n    } else {\r\n      console.log(\"Not a function\");\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getTodayOrders = (date, type, location, setOrders) => {\r\n  let ty = \"\";\r\n  if (type === \"food\") {\r\n    ty = \"FoodOrders\";\r\n    // date = \"02.11.2021\";\r\n  } else {\r\n    ty = \"GroceryOrders\";\r\n    // date = \"03.11.2021\";\r\n  }\r\n  let list = [];\r\n  unsubscribe = db\r\n    .collection(ty)\r\n    .doc(\"todayOrders\")\r\n    .collection(location)\r\n    .onSnapshot(\r\n      (docs) => {\r\n        docs.forEach((doc) => {\r\n          list.push(doc.data());\r\n        });\r\n        setOrders(list);\r\n        list = [];\r\n        console.log(\"unsub\", unsubscribe);\r\n      },\r\n      (e) => console.log(e)\r\n    );\r\n  // db.collection(ty)\r\n  //   .doc(\"todayOrders\")\r\n  //   .collection(location)\r\n  //   .get()\r\n  //   .then((docs) => {\r\n  //     docs.forEach((doc) => {\r\n  //       // console.log(\"doc\", doc.data());\r\n  //       list.push(doc.data());\r\n  //     });\r\n  //     setOrders(list);\r\n  //   })\r\n  //   .catch((e) => console.log(e));\r\n  // db.collection(ty)\r\n  //   .doc(\"todayOrders\")\r\n  //   .collection(location)\r\n  //   .onSnapshot((docs) => {\r\n  //     docs.forEach((doc) => {\r\n  //       list.push(doc.data());\r\n  //     });\r\n  //     setOrders(list);\r\n  //     list = [];\r\n  //   });\r\n};\r\n\r\nconst updateOrderStatus = (type, location, order, status, isUpdated) => {\r\n  let ty = \"\";\r\n  if (type === \"food\") {\r\n    ty = \"FoodOrders\";\r\n    // date = \"02.11.2021\";\r\n  } else {\r\n    ty = \"GroceryOrders\";\r\n    // date = \"03.11.2021\";\r\n  }\r\n\r\n  // let orderStatus = status;\r\n  let data = \"\";\r\n  if (status === \"preparing\") {\r\n    data = {\r\n      status: \"preparing\",\r\n    };\r\n    db.collection(ty)\r\n      .doc(\"todayOrders\")\r\n      .collection(location)\r\n      .doc(order.id)\r\n      .update(data)\r\n      .then(() => {\r\n        isUpdated(true);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        isUpdated(false);\r\n      });\r\n  } else if (status === \"assigned\") {\r\n    data = {\r\n      status: \"assigned\",\r\n      dBoyId: order.dBoyId,\r\n    };\r\n    db.collection(ty)\r\n      .doc(\"todayOrders\")\r\n      .collection(location)\r\n      .doc(order.id)\r\n      .update(data)\r\n      .then(() => {\r\n        db.collection(\"DeliveryUsers\")\r\n          .doc(\"Branches\")\r\n          .collection(location)\r\n          .doc(order.dBoyId)\r\n          .update({\r\n            userStatus: \"Assigned\",\r\n          })\r\n          .then(() => {\r\n            isUpdated(true);\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n            // isUpdated(false);\r\n          });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        isUpdated(false);\r\n      });\r\n  }\r\n  console.log(\"updateOrderStatus\", location, order.id);\r\n};\r\n\r\n// Get Orders Based On Parameters\r\n// const getOrdersBP = (type, location, setOrders) => {};\r\n\r\nexport {\r\n  getOrders,\r\n  getTodayOrders,\r\n  getMonthOrders,\r\n  getYearOrders,\r\n  updateOrderStatus,\r\n  addTelOrders,\r\n  genrateBillOrder,\r\n  billPaidOrder,\r\n  removeListener,\r\n  getDeliveredOrders,\r\n};\r\n\r\n// const updateOrderStatus = (date, type, location, order, status) => {\r\n//   console.log(\"updateOrderStatusDB\", order, status);\r\n//   // if u have listener then no need to get orders again\r\n//   // now we will get the order and update immedietly\r\n//   // let list = [];\r\n//   let ty = \"\";\r\n//   // let date = \"\";\r\n//   if (type === \"food\") {\r\n//     ty = \"FoodOrders\";\r\n//     date = \"02.11.2021\";\r\n//   } else {\r\n//     ty = \"GroceryOrders\";\r\n//     date = \"03.11.2021\";\r\n//   }\r\n//   getTodayOrders(date, type, location, (orders, manualBillNo) => {\r\n//     if (orders === \"empty\") {\r\n//       console.log(\"No Items!!!\");\r\n//     } else {\r\n//       console.log(\"ordersINDB\", orders, manualBillNo);\r\n//       let index = orders.findIndex((o) => o.id === order.id);\r\n//       let updatedOrder = {\r\n//         ...order,\r\n//         status: status\r\n//       };\r\n//       orders[index] = updatedOrder;\r\n//       db.collection(ty)\r\n//         .doc(\"branch\")\r\n//         .collection(location)\r\n//         .doc(date)\r\n//         .update({\r\n//           orders: orders\r\n//         })\r\n//         .then(() => {\r\n//           console.log(\"successfully updated!!!\");\r\n//         })\r\n//         .catch((e) => console.log(e));\r\n//     }\r\n//   });\r\n// };\r\n\r\n// const getTodayOrders = (date, type, location, setOrders) => {\r\n//   // let list = [];\r\n//   let ty = \"\";\r\n//   // let date = \"\";\r\n//   if (type === \"food\") {\r\n//     ty = \"FoodOrders\";\r\n//     date = \"02.11.2021\";\r\n//   } else {\r\n//     ty = \"GroceryOrders\";\r\n//     date = \"03.11.2021\";\r\n//   }\r\n//   // let date = new Date();\r\n//   // let day = date.getDate();\r\n//   // if (day < 10) {\r\n//   //   day = \"0\" + day;\r\n//   // }\r\n//   // let month = date.getMonth() + 1;\r\n//   // if (month < 10) {\r\n//   //   month = \"0\" + month;\r\n//   // }\r\n//   // let year = date.getFullYear();\r\n//   // date = day + \".\" + month + \".\" + year;\r\n//   // console.log(\"date\", date);\r\n//   db.collection(ty)\r\n//     .doc(\"branch\")\r\n//     .collection(location)\r\n//     .doc(date)\r\n//     // .get()\r\n//     // .then((doc) => {\r\n//     .onSnapshot((doc) => {\r\n//       let orders = doc.data().orders;\r\n//       let manualBillingNo = doc.data().manualBillNo;\r\n//       // console.log(\"o\", orders);\r\n//       // let monthStat = doc.data().month;\r\n//       if (orders.length === 0) {\r\n//         setOrders(\"empty\");\r\n//       } else {\r\n//         setOrders(orders, manualBillingNo);\r\n//       }\r\n//     });\r\n//   // .catch((e) => {\r\n//   //   console.log(\"getFo\", e);\r\n//   //   setOrders(\"empty\");\r\n//   // });\r\n// };\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`${classes.Card} ${props.className}`}>{props.children}</div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","// import styled from \"styled-components\";\r\n\r\nconst Backdrop = (props) => {\r\n  // const BackDrop = styled.div`\r\n  //   position: fixed;\r\n  //   top: 0;\r\n  //   left: 0;\r\n  //   width: 100%;\r\n  //   height: 100vh;\r\n  //   z-index: 1000;\r\n  //   background: rgba(0, 0, 0, 0.75);\r\n  // `;\r\n\r\n  return (\r\n    <div\r\n      onClick={props.onClose}\r\n      style={{\r\n        position: \"fixed\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        zIndex: \"1000\",\r\n        background: \"rgba(0, 0, 0, 0.75)\"\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n// import styled from \"styled-components\";\r\n\r\n// const Backdrop = (props) => {\r\n//   const BackDrop = styled.div`\r\n//     position: fixed;\r\n//     top: 0;\r\n//     left: 0;\r\n//     width: 100%;\r\n//     height: 100vh;\r\n//     z-index: 1000;\r\n//     background: rgba(0, 0, 0, 0.75);\r\n//   `;\r\n\r\n//   return <BackDrop onClick={props.onClose} />;\r\n// };\r\n\r\n// export default Backdrop;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styles from \"./DeliveryModal.module.css\";\r\nimport Card from \"../Card/Card\";\r\nimport Backdrop from \"../Backdrop\";\r\n// import $ from \"jquery\";\r\nimport { getDeliveryUsers } from \"../../api/DeliveryDB\";\r\nimport AuthContext from \"../../context/auth-context\";\r\nimport { db } from \"../../services/firebase\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const [deliveryUsers, setDeliveryUsers] = useState(null);\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    let location = authCtx.user.location;\r\n    // console.log(\"location\", location);\r\n    // getDeliveryUsers(location, (users) => {\r\n    let list = [];\r\n    var unsubscribe = db\r\n      .collection(\"DeliveryUsers\")\r\n      .doc(\"Branches\")\r\n      .collection(location)\r\n      .where(\"verification\", \"==\", \"verified\")\r\n      .onSnapshot((docs) => {\r\n        docs.forEach((doc) => {\r\n          let dUser = {\r\n            ...doc.data(),\r\n            currentOrders: [],\r\n          };\r\n          props.orders.forEach((order) => {\r\n            if (dUser.user_id === order.dBoyId) {\r\n              dUser.currentOrders.push({\r\n                orderId: order.orderId,\r\n                address: order.userDetails.userAddress,\r\n              });\r\n            }\r\n          });\r\n          list.push(dUser);\r\n        });\r\n        console.log(\"deli\", list);\r\n        console.log(\"orders\", props.orders);\r\n        setDeliveryUsers((prevState) => {\r\n          return [...list];\r\n        });\r\n        list = [];\r\n      });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n    // });\r\n  }, [authCtx.user.location]);\r\n\r\n  let ui = null;\r\n  if (deliveryUsers === null) {\r\n    ui = <p>Loading!!!</p>;\r\n  } else if (deliveryUsers.length === 0) {\r\n    ui = <p>No delivery users available!!!</p>;\r\n  } else {\r\n    ui = deliveryUsers.map((user) => {\r\n      let statusUi = null;\r\n      if (user.userStatus === \"Online\") {\r\n        statusUi = (\r\n          <>\r\n            <p className={styles.status}>\r\n              {/* <span className={styles.busy}>On Delivery</span> */}\r\n              <span className={styles.free}>Available</span>\r\n            </p>\r\n            <p\r\n              className={styles.assign}\r\n              onClick={() => props.assignDeliveryUser(props.order, user)}\r\n            >\r\n              {/* <span className={styles.span}>Assign&nbsp;&#10003;</span> */}\r\n              <span className={styles.span}>Assign&nbsp;&#10003;</span>\r\n            </p>\r\n          </>\r\n        );\r\n      } else if (user.userStatus === \"Offline\") {\r\n        statusUi = (\r\n          <>\r\n            <p className={styles.status}>\r\n              <span className={styles.busy}>Offline</span>\r\n            </p>\r\n            <p className={styles.assign}>\r\n              <span className={styles.span}>Offline&nbsp;&#10003;</span>\r\n            </p>\r\n          </>\r\n        );\r\n      } else if (user.userStatus === \"RideOn\") {\r\n        statusUi = (\r\n          <>\r\n            <p className={styles.status}>\r\n              <span className={styles.free}>Ride On</span>\r\n            </p>\r\n            <p className={styles.assign}>\r\n              {/* <span className={styles.span}>Ride-On&nbsp;&#10003;</span> */}\r\n            </p>\r\n          </>\r\n        );\r\n      } else if (user.userStatus === \"Assigned\") {\r\n        statusUi = (\r\n          <>\r\n            <p className={styles.status}>\r\n              <span className={styles.free}>Assigned</span>\r\n            </p>\r\n            {props.order.dBoyId === user.user_id ? (\r\n              <p className={styles.assign}>\r\n                <span\r\n                  className={styles.span1}\r\n                  title={`This order is already assigned to ${user.user_username}`}\r\n                  style={{ textDecoration: \"underline\" }}\r\n                >\r\n                  Can't Assign\r\n                </span>\r\n              </p>\r\n            ) : (\r\n              <p\r\n                className={styles.assign}\r\n                onClick={() => {\r\n                  props.assignDeliveryUser(props.order, user);\r\n                }}\r\n              >\r\n                <span className={styles.span}>Re-Assign&nbsp;&#10003;</span>\r\n              </p>\r\n            )}\r\n          </>\r\n        );\r\n      }\r\n      return (\r\n        <div\r\n          className={styles.row}\r\n          style={{ marginBottom: \"5px\" }}\r\n          key={user.user_id}\r\n        >\r\n          <p className={styles.name}>{user.user_username}</p>\r\n          <p className={styles.no}>{user.user_phone_number}</p>\r\n          {statusUi}\r\n          <p className={styles.no} title>\r\n            {user.currentOrders.length > 0\r\n              ? user.currentOrders.map((ord, i) => (\r\n                  <>\r\n                    <p\r\n                      title={ord.address}\r\n                      style={{ textDecoration: \"underline\" }}\r\n                    >\r\n                      {ord.orderId}\r\n                    </p>\r\n                    {/* {i < user.currentOrders.length - 1 ? \";\" : \"\"} */}\r\n                  </>\r\n                ))\r\n              : \"Empty\"}\r\n          </p>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  return (\r\n    <div class={styles.modal}>\r\n      <Card>\r\n        <div className={styles.assignmodal}>\r\n          <div className={styles.row} style={{ marginBottom: \"10px\" }}>\r\n            <p className={styles.hname}>Delivery Person</p>\r\n            <p className={styles.hno}>Mobile Number</p>\r\n            <p className={styles.hstatus}>Status</p>\r\n            <p className={styles.hassign}>Assign</p>\r\n            <p className={styles.hcurrentOrder}>Current Orders</p>\r\n          </div>\r\n          {ui}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DeliveryModal = (props) => {\r\n  // console.log(\"edit\", props.item);\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClose={props.closeModal} />,\r\n        document.getElementById(\"backdrop-root\")\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay\r\n          onClose={props.closeModal}\r\n          // title={props.title}\r\n          assignDeliveryUser={props.assignDeliveryUser}\r\n          // updateItem={props.updateItem}\r\n          order={props.order}\r\n          orders={props.orders}\r\n        />,\r\n        document.getElementById(\"overlay-root\")\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeliveryModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getDeliveredOrders } from \"../../api/OrderDB\";\r\nimport DeliveryModal from \"../../ui/DeliveryModal/DeliveryModal\";\r\n\r\nconst OrderMaintain = (props) => {\r\n  const [assignModal, setAssignModal] = useState(false);\r\n  const [orders, setOrders] = useState(undefined);\r\n\r\n  const deliveryAssignHandler = (order) => {\r\n    setAssignModal(order);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location.pathname.includes(\"delivered\")) {\r\n      getDeliveredOrders(props.type, props.location, (orders) => {\r\n        console.log(\"delvieredOrders\", orders);\r\n        setOrders(orders);\r\n      });\r\n    } else {\r\n      setOrders(props.orders);\r\n    }\r\n  }, [props.orders]);\r\n\r\n  return (\r\n    <>\r\n      {assignModal && (\r\n        <DeliveryModal\r\n          orders={props.orders}\r\n          order={assignModal}\r\n          assignDeliveryUser={(order, user) => {\r\n            props.assignDeliveryUser(order, user);\r\n            setAssignModal(false);\r\n          }}\r\n          closeModal={() => setAssignModal(false)}\r\n        />\r\n      )}\r\n      <div class=\"order-head row\">\r\n        <p className=\"oid\">Order ID</p>\r\n        <p className=\"uname\">User Name</p>\r\n        <p className=\"add\">Address</p>\r\n        <p className=\"date\">In Time</p>\r\n        <p className=\"cat\">Category</p>\r\n        <p className=\"amount\">Amount</p>\r\n        <p className=\"tq\">Qty</p>\r\n        <p className=\"tp\">Total Price</p>\r\n        <p className=\"status\">Status</p>\r\n      </div>\r\n      {orders === undefined || orders === null\r\n        ? \"No Orders\"\r\n        : orders.map((order) => {\r\n            let timestamp = new Date(parseInt(order.timestamp));\r\n            let year = timestamp.getFullYear();\r\n            let month = timestamp.getMonth() + 1;\r\n            if (month < 10) {\r\n              month = \"0\" + month;\r\n            }\r\n            let day = timestamp.getDate();\r\n            if (day < 10) {\r\n              day = \"0\" + day;\r\n            }\r\n            let hours = timestamp.getHours();\r\n            let mins = timestamp.getMinutes();\r\n            let timePeriod = \"AM\";\r\n            if (hours > 12) {\r\n              timePeriod = \"PM\";\r\n              hours = hours - 12;\r\n            }\r\n            if (hours < 10) {\r\n              hours = \"0\" + hours;\r\n            }\r\n            if (mins < 10) {\r\n              mins = \"0\" + mins;\r\n            }\r\n            return (\r\n              <details className=\"order-view\" key={order.orderId}>\r\n                <summary className=\"row\">\r\n                  <p className=\"oid\">#{order.orderId}</p>\r\n                  <p className=\"uname\">\r\n                    {order.userDetails?.userName ||\r\n                      order.order_address?.userName}\r\n                  </p>\r\n                  <p className=\"add\">\r\n                    {order.userDetails?.userAddress ||\r\n                      order.order_address?.userAddress}\r\n                  </p>\r\n                  <p className=\"date\">\r\n                    {`${day}-${month}-${year}`} {hours}:{mins} {timePeriod}\r\n                  </p>\r\n                  <p className=\"cat\">{order.type}</p>\r\n                  <p className=\"amount\">\r\n                    {/* {order.payment.isPaid ? \"Paid\" : \"Not Paid\"} */}\r\n                    {/* <span className=\"paid\"></span> */}\r\n                    {order.payment.isPaid ? (\r\n                      <span className=\"paid\">Paid</span>\r\n                    ) : (\r\n                      <span className=\"pod\">POD</span>\r\n                    )}\r\n                  </p>\r\n                  <p className=\"tq\">{order.noOfItems}</p>\r\n                  <p className=\"tp\">\r\n                    <i class=\"fas fa-rupee\"></i>\r\n                    {order.totalPrice}\r\n                  </p>\r\n                  <p className=\"status\">\r\n                    {/* <span className=\"new\"> */}\r\n                    {order.status === \"booked\" ? (\r\n                      <span className=\"new\">NewOrder</span>\r\n                    ) : order.status === \"preparing\" ? (\r\n                      <span className=\"prepare\">Preparing</span>\r\n                    ) : order.status === \"assigned\" ? (\r\n                      <span className=\"ready\">Assigned</span>\r\n                    ) : order.status === \"accepted\" ? (\r\n                      <span className=\"ready\">Accepted</span>\r\n                    ) : order.status === \"rideon\" ? (\r\n                      <span className=\"ready\">On-Delivery</span>\r\n                    ) : order.status === \"delivered\" ? (\r\n                      <span className=\"delivered\">Delivered</span>\r\n                    ) : order.status === \"rejected\" ? (\r\n                      <span className=\"cancelled\">Rejected</span>\r\n                    ) : (\r\n                      <span className=\"cancelled\">Cancelled</span>\r\n                    )}\r\n                    {/* </span> */}\r\n                    {/* <span className=\"prepare\">Preparing</span> */}\r\n                    {/* <span className=\"ready\">New Order</span>\r\n            <span className=\"delivered\">New Order</span> */}\r\n                  </p>\r\n                </summary>\r\n                <div className=\"details row\">\r\n                  {order.order_items?.map((item) => {\r\n                    return (\r\n                      <p key={item.itemId} className=\"item\">\r\n                        {item.itemName} x {item.itemSize}\r\n                      </p>\r\n                    );\r\n                  })}\r\n\r\n                  {order.status === \"booked\" ? (\r\n                    <button\r\n                      className=\"btn btn-dark\"\r\n                      type=\"button\"\r\n                      onClick={() =>\r\n                        props.updateOrderStatus(order, \"preparing\")\r\n                      }\r\n                    >\r\n                      Preparing\r\n                    </button>\r\n                  ) : order.status === \"preparing\" ? (\r\n                    <>\r\n                      <button\r\n                        className=\"btn btn-dark\"\r\n                        type=\"button\"\r\n                        onClick={() => deliveryAssignHandler(order)}\r\n                      >\r\n                        Ready To Deliver\r\n                      </button>\r\n                    </>\r\n                  ) : order.status === \"assigned\" ||\r\n                    order.status === \"accepted\" ||\r\n                    order.status === \"rejected\" ? (\r\n                    <>\r\n                      <button\r\n                        className=\"btn btn-dark\"\r\n                        type=\"button\"\r\n                        onClick={() => deliveryAssignHandler(order)}\r\n                      >\r\n                        Re-Assign Delivery Boy\r\n                      </button>\r\n                    </>\r\n                  ) : order.status === \"rideon\" ? (\r\n                    <>\r\n                      <button\r\n                        className=\"btn btn-dark\"\r\n                        type=\"button\"\r\n                        onClick={() => deliveryAssignHandler(order)}\r\n                      >\r\n                        Re-Assign Delivery Boy\r\n                      </button>\r\n                    </>\r\n                  ) : order.status === \"delivered\" ? (\r\n                    <span className=\"delivered\">Delivered</span>\r\n                  ) : (\r\n                    <span className=\"cancelled\">Cancelled</span>\r\n                  )}\r\n\r\n                  {/* <button type=\"button\" onClick={() => acceptHandler()}>\r\n                    Accept\r\n                  </button>\r\n                  <button type=\"button\" onClick={() => cancelHandler()}>\r\n                    Cancel\r\n                  </button> */}\r\n                  {/* <p className=\"cancel\">Cancel</p> */}\r\n                  {/* <p className=\"deliverydetails\">Akhil,&nbsp;8072711781</p> */}\r\n                </div>\r\n              </details>\r\n            );\r\n          })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderMaintain;\r\n","import { db, firebase } from \"../services/firebase\";\r\n\r\nconst getItem = (title, type, itemId, location, addOutOfStock) => {\r\n  // console.log(\"ItemDB\", title);\r\n  // let list = [];\r\n  db.collection(type)\r\n    .doc(type + \"_Types\")\r\n    .collection(title) // BreakFast, PersonalCare\r\n    .doc(itemId)\r\n    .get()\r\n    .then((doc) => {\r\n      let item = doc.data();\r\n      console.log(\"itemm\", item, location);\r\n      if (item.branch[location].unit <= item.branch[location].minimumUnit) {\r\n        addOutOfStock(item);\r\n      } else {\r\n        addOutOfStock(null);\r\n      }\r\n    })\r\n    .catch((e) => console.log(\"getItem()\", e));\r\n};\r\n\r\nconst setItem = (title, type, item, location, addOutOfStock) => {\r\n  console.log(\"item\", item, title, type, location);\r\n  let data = {\r\n    ...item,\r\n  };\r\n  // let data = {\r\n  //   [location]: {\r\n  //     ...item[location],\r\n  //     unit: parseInt(item[location].unit),\r\n  //   },\r\n  // };\r\n  data.branch[location] = {\r\n    ...item.branch[location],\r\n    unit: parseInt(item.branch[location].unit),\r\n  };\r\n  if (type === \"Food\") {\r\n    if (item.Type === \"Breakfast\") {\r\n      title = \"BreakFast\";\r\n    } else if (item.Type === \"Lunch\") {\r\n      title = \"Lunch\";\r\n    } else if (item.Type === \"Dinner\") {\r\n      title = \"Dinner\";\r\n    }\r\n  } else {\r\n    if (item.Type === \"Rice\") {\r\n      title = \"Rice\";\r\n    } else if (item.Type === \"Fruits_Vegetables\") {\r\n      title = \"Fruits_Vegetables\";\r\n    } else if (item.Type === \"Summer_Drinks_Beverage\") {\r\n      title = \"Summer_Drinks_Beverage\";\r\n    } else if (item.Type === \"soaps\") {\r\n      title = \"soaps\";\r\n    } else if (item.Type === \"Pharmacy\") {\r\n      title = \"Pharmacy\";\r\n    } else if (item.Type === \"Organics\") {\r\n      title = \"Organics\";\r\n    }\r\n  }\r\n  db.collection(type)\r\n    .doc(type + \"_Types\")\r\n    .collection(title) // BreakFast, PersonalCare\r\n    .doc(item.id)\r\n    .update(data)\r\n    .then(() => {\r\n      console.log(\"success\");\r\n      addOutOfStock(true);\r\n    })\r\n    .catch((e) => {\r\n      console.log(\"setItem()\", e);\r\n      addOutOfStock(false);\r\n    });\r\n};\r\n\r\n// read all - food & grocery\r\nconst getItems = (title, type, setItems) => {\r\n  console.log(\"ItemDB\", title, type);\r\n  let list = [];\r\n  db.collection(type)\r\n    .doc(type + \"_Types\")\r\n    .collection(title) // BreakFast, PersonalCare\r\n    .get()\r\n    .then((docs) => {\r\n      docs.forEach((doc) => {\r\n        let item = doc.data();\r\n        item.id = doc.id;\r\n        list.push(item);\r\n      });\r\n    })\r\n    .then(() => {\r\n      setItems(list);\r\n    })\r\n    .catch((e) => console.log(\"getItems()\", e));\r\n};\r\n\r\n// get multi title items\r\nconst getMultiTitleItems = (titles, type, setItems) => {\r\n  // let titles = [...title];\r\n  let list = [];\r\n  let listPromises = [];\r\n  titles.forEach((tit) => {\r\n    console.log(\"tit\", tit, type);\r\n    listPromises.push(\r\n      db\r\n        .collection(type)\r\n        .doc(type + \"_Types\")\r\n        .collection(tit) // BreakFast, PersonalCare\r\n        .get()\r\n    );\r\n  });\r\n  Promise.all(listPromises)\r\n    .then((value) => {\r\n      // console.log(\"res\", value);\r\n      value.forEach((val) => {\r\n        val.forEach((res) => {\r\n          list.push(res.data());\r\n        });\r\n      });\r\n      return list;\r\n    })\r\n    .then((data) => {\r\n      console.log(\"2nd then\", data);\r\n      setItems(data);\r\n    })\r\n    .catch((e) => console.log(e));\r\n};\r\n\r\n// add item - food & grocery\r\nconst addItem = (item, price, type, authCtx, isAdded) => {\r\n  console.log(\"item\", item, type, price);\r\n  let title = \"\";\r\n  let priceData = \"\";\r\n  if (type === \"Food\") {\r\n    if (item.category === \"BreakFast\") {\r\n      title = \"BreakFast\";\r\n    } else if (item.category === \"Lunch\") {\r\n      title = \"Lunch\";\r\n    } else if (item.category === \"Dinner\") {\r\n      title = \"Dinner\";\r\n    }\r\n  } else {\r\n    if (item.category === \"Fruits_Vegetables\") {\r\n      title = \"Fruits_Vegetables\";\r\n    } else if (item.category === \"Rice\") {\r\n      title = \"Rice\";\r\n    } else if (item.category === \"Summer_Drinks_Beverages\") {\r\n      title = \"Summer_Drinks_Beverages\";\r\n    } else if (item.category === \"soaps\") {\r\n      title = \"soaps\";\r\n    } else if (item.category === \"Pharmacy\") {\r\n      title = \"Pharmacy\";\r\n    } else if (item.category === \"Organics\") {\r\n      title = \"Organics\";\r\n    }\r\n  }\r\n\r\n  let bucketName = type === \"Food\" ? \"Foods\" : \"Grocery\";\r\n  let storageRef = firebase.storage().ref();\r\n  let subCategoryTimestamp = +new Date().getTime() + \"-\" + item.img.file.name;\r\n  let imgRef = storageRef.child(`${bucketName}/${subCategoryTimestamp}`);\r\n  // console.log(\"submit\", subCategoryTimestamp, priceData);\r\n  imgRef.put(item.img.file).then(() => {\r\n    imgRef\r\n      .getDownloadURL()\r\n      .then((img) => {\r\n        let nameSearch = createNameSearchArray(item.name);\r\n        let data = \"\";\r\n        data = {\r\n          Bestseller: true,\r\n          Name: item.name,\r\n          Type: item.category,\r\n          actual_price: 0,\r\n          branch: {},\r\n          categories: [],\r\n          currency: \"\",\r\n          current_price: +item.currentPrice,\r\n          dealoftheday: item.dealOfTheDay,\r\n          description: item.desc,\r\n          image: img,\r\n          isproductavailable: item.isProductAvailable,\r\n          product_id: item.productId,\r\n          quantityPerUnit: 1,\r\n          shop_name: \"Thalaivar\",\r\n          unit: \"1\",\r\n          name_search: [...nameSearch],\r\n        };\r\n        data.branch[authCtx.user.location] = {\r\n          Bestseller: item.bestSeller,\r\n          BranchName: authCtx.user.location,\r\n          current_price: +item.currentPrice,\r\n          dealoftheday: item.dealOfTheDay,\r\n          unit: parseInt(item.actualUnit),\r\n        };\r\n\r\n        db.collection(type)\r\n          .doc(type + \"_Types\")\r\n          .collection(title)\r\n          .add(data)\r\n          .then((docRef) => {\r\n            console.log(\"docRef\", docRef);\r\n            db.collection(type)\r\n              .doc(type + \"_Types\")\r\n              .collection(title)\r\n              .doc(docRef.id)\r\n              .update({\r\n                id: docRef.id,\r\n              })\r\n              .then(() => {\r\n                isAdded(true);\r\n                console.log(\"Item added\");\r\n              })\r\n              .catch((e) => {\r\n                isAdded(false);\r\n                console.log(e);\r\n              });\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n            isAdded(false);\r\n          });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        isAdded(false);\r\n      });\r\n  });\r\n};\r\n\r\n// update item - food & grocery\r\nconst updateItem = (\r\n  item,\r\n  price,\r\n  quantity,\r\n  title,\r\n  type,\r\n  location,\r\n  isUpdated\r\n) => {\r\n  // console.log(\"--\", item, price, quantity, title, type, location);\r\n  // create name search\r\n  let nameSearch = createNameSearchArray(item.Name);\r\n  // without image\r\n  if (item.img === undefined) {\r\n    console.log(\"item.img-undefined\", item);\r\n    let data = {\r\n      ...item,\r\n      Name: item.Name,\r\n      description: item.description,\r\n      // category: item.category,\r\n      Type: item.Type,\r\n      // [location]: {\r\n      //   isproductavailable: item[location].isproductavailable,\r\n      //   Bestseller: item[location].Bestseller,\r\n      //   dealoftheday: item[location].dealoftheday,\r\n      //   unit: parseInt(item[location].unit),\r\n      //   minimumUnit: parseInt(item[location].minimumUnit),\r\n      //   quantityPerUnit: parseInt(item[location].quantityPerUnit),\r\n      //   price: priceData,\r\n      // },\r\n      name_search: [...nameSearch],\r\n    };\r\n    data.branch[location] = {\r\n      Bestseller: item.branch[location].Bestseller,\r\n      BranchName: location,\r\n      current_price: +item.branch[location].current_price,\r\n      dealoftheday: item.branch[location].dealoftheday,\r\n      unit: +item.branch[location].unit,\r\n    };\r\n    // if (type === \"Food\") {\r\n    //   data = {\r\n    //     ...data,\r\n    //     style: item.style,\r\n    //   };\r\n    // }\r\n    // // console.log(\"data\", data);\r\n    db.collection(type)\r\n      .doc(type + \"_Types\")\r\n      .collection(title)\r\n      .doc(item.id)\r\n      .update(data)\r\n      .then(() => {\r\n        let updatedData = {\r\n          ...data,\r\n          id: item.id,\r\n          image: item.image,\r\n          currency: item.currency,\r\n        };\r\n        isUpdated(updatedData);\r\n      })\r\n      .catch((e) => {\r\n        isUpdated(false);\r\n        console.log(\"updateItem()\", e);\r\n      });\r\n  } else {\r\n    console.log(\"item.img\", item.img.name, item.img, item.img.file);\r\n    // image\r\n    let bucketName = type === \"Food\" ? \"Foods\" : \"Grocery\";\r\n    let storageRef = firebase.storage().ref();\r\n    let subCategoryTimestamp = +new Date().getTime() + \"-\" + item.img.name;\r\n    let imgRef = storageRef.child(`${bucketName}/${subCategoryTimestamp}`);\r\n    // console.log(\"submit\", subCategoryTimestamp, priceData);\r\n    imgRef\r\n      .put(item.img)\r\n      .then(() => {\r\n        console.log(\"img ref put...\");\r\n        imgRef\r\n          .getDownloadURL()\r\n          .then((img) => {\r\n            let data = {\r\n              ...item,\r\n              Name: item.Name,\r\n              image: img,\r\n              description: item.description,\r\n              Type: item.Type,\r\n              name_search: [...nameSearch],\r\n            };\r\n            data.branch[location] = {\r\n              Bestseller: item.branch[location].Bestseller,\r\n              BranchName: location,\r\n              current_price: +item.branch[location].current_price,\r\n              dealoftheday: item.branch[location].dealoftheday,\r\n              unit: +item.branch[location].unit,\r\n            };\r\n            delete data.img;\r\n            // console.log(\"img\", img, data);\r\n\r\n            db.collection(type)\r\n              .doc(type + \"_Types\")\r\n              .collection(title)\r\n              .doc(item.id)\r\n              .update({\r\n                ...data,\r\n              })\r\n              .then(() => {\r\n                isUpdated(data);\r\n                // delete previous image from storage\r\n                let storaRef = firebase.storage();\r\n                storaRef\r\n                  .refFromURL(item.image)\r\n                  .delete()\r\n                  .then(() =>\r\n                    console.log(\"image deleted successfullty, MyBin.js[284]\")\r\n                  )\r\n                  .catch((e) => console.log(e, \"already deleted\"));\r\n              })\r\n              .catch((e) => {\r\n                isUpdated(false);\r\n                console.log(\"updateItem()\", e);\r\n              });\r\n          })\r\n          .catch((e) => {\r\n            console.log(\"img update\", e);\r\n            isUpdated(false);\r\n          });\r\n      })\r\n      .catch((e) => {\r\n        isUpdated(false);\r\n        console.log(\"put image\", e);\r\n      });\r\n  }\r\n};\r\n\r\nconst createNameSearchArray = (name) => {\r\n  let pName = name.toLowerCase();\r\n  let list = [];\r\n  let sum = \"\";\r\n  for (let i = 0; i < pName.length; i++) {\r\n    sum += pName[i];\r\n    list.push(sum);\r\n  }\r\n  return list;\r\n};\r\n\r\n// delete item - food & grocery\r\nconst deleteItem = (item, title, type, isDeleted) => {\r\n  db.collection(type)\r\n    .doc(type + \"_Types\")\r\n    .collection(title)\r\n    .doc(item.id)\r\n    .delete()\r\n    .then(() => {\r\n      console.log(\"successfully deleted\");\r\n      firebase\r\n        .storage()\r\n        .refFromURL(item.image)\r\n        .delete()\r\n        .then(() => {\r\n          console.log(\"image deleted successfullty from firebase storage\");\r\n          isDeleted(true);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          isDeleted(false);\r\n        });\r\n    })\r\n    .catch((e) => {\r\n      console.log(\"deleteItem()\", e);\r\n      isDeleted(false);\r\n    });\r\n};\r\n\r\nexport {\r\n  setItem,\r\n  getItem,\r\n  getItems,\r\n  addItem,\r\n  deleteItem,\r\n  updateItem,\r\n  getMultiTitleItems,\r\n};\r\n","import localforage from \"localforage\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { getMultiTitleItems } from \"../../api/ItemDB\";\r\nimport {\r\n  addTelOrders,\r\n  genrateBillOrder,\r\n  billPaidOrder,\r\n} from \"../../api/OrderDB\";\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\nconst ManualBilling = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const [manual, setManual] = useState(null);\r\n  const [generate, setGenerate] = useState(null);\r\n  useEffect(() => {\r\n    let titles = [\"BreakFast\", \"Lunch\", \"Dinner\"];\r\n    // let titles = [\"Lunch\", \"Dinner\"];\r\n    console.log(\"type\", props.type);\r\n    let type = \"Food\";\r\n    if (props.type !== \"food\") {\r\n      type = \"Grocery\";\r\n      titles = [\r\n        \"Fruits_Vegetables\",\r\n        \"Rice\",\r\n        \"Summer_Drinks_Beverages\",\r\n        \"soaps\",\r\n      ];\r\n    }\r\n    getMultiTitleItems(titles, type, (res) => {\r\n      let list = [];\r\n      res.forEach((item) => {\r\n        item.branch[props.location] !== undefined && list.push(item);\r\n      });\r\n      props.setItems(list);\r\n    });\r\n  }, [props.type]);\r\n\r\n  const onChangeHandler = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    if (name === \"manual\") {\r\n      setManual(value);\r\n      console.log(value);\r\n    } else if (name === \"gennbill\") {\r\n      setGenerate(value);\r\n    }\r\n  };\r\n\r\n  const addteleorder = () => {\r\n    addTelOrders(props.currentOrder, props.type, props.location, (isAdded) => {\r\n      if (isAdded) {\r\n        // db added\r\n        window.alert(\"Successfully Added!!!\");\r\n        removeOrder(props.currentOrder.orderId, props.type);\r\n      } else {\r\n        // error not adding\r\n        window.alert(\"Not Added... Try Again!!!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const generateBill = () => {\r\n    // console.log(\"hjlllll\");\r\n    // setGenerate(\"gennbill\");\r\n    // genrateBillOrder(props.currentOrder);\r\n    props.generateBill();\r\n    // if (props.type === \"food\") {\r\n    // let foodOrderList = [];\r\n    // localforage\r\n    //   .getItem(\"food-order\")\r\n    //   .then((value) => {\r\n    //     console.log(\"fOrde\", value);\r\n    //     if (value === null) {\r\n    //       // new order\r\n    //     }\r\n    //   })\r\n    //   .catch((e) => console.log(e));\r\n    // }\r\n    // localforage.setItem(\"food-order\", props.currentOrder);\r\n  };\r\n\r\n  const removeOrder = (orderId, type) => {\r\n    props.removeOrder(orderId, type);\r\n  };\r\n\r\n  const paidOrders = () => {\r\n    // console.log(\"hjlllll\");\r\n    billPaidOrder(props.currentOrder, props.type, props.location, (isAdded) => {\r\n      if (isAdded) {\r\n        window.alert(\"Successfully Added to local store!!!\");\r\n      } else {\r\n        // error not adding\r\n        window.alert(\"Not Added... Try Again!!!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"manual row\">\r\n      <div>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"dineIn\"\r\n          name=\"manual\"\r\n          value=\"dineIn\"\r\n          onChange={onChangeHandler}\r\n        />\r\n        <label htmlFor=\"dineIn\">&nbsp;Dine-In</label>\r\n      </div>\r\n      <div style={{ marginRight: \"auto\", padding: \"0 5px\" }}>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"telephone\"\r\n          name=\"manual\"\r\n          value=\"telephone\"\r\n          onChange={onChangeHandler}\r\n        />\r\n        <label htmlFor=\"telephone\">&nbsp;Telephone order</label>\r\n      </div>\r\n      <div className=\"col-12\"></div>\r\n\r\n      <div className=\"billno\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"add\"\r\n          onClick={() => props.createOrder(manual)}\r\n          disabled={!manual}\r\n        >\r\n          New Order <b>+</b>\r\n        </button>\r\n        <h4>Ongoing Bills</h4>\r\n        <div className=\"scroll\">\r\n          {props.ongoingOrders.map((order) => {\r\n            return (\r\n              <div\r\n                key={order.orderId}\r\n                className=\"card\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => props.setCurrentOrder(order)}\r\n              >\r\n                <p className=\"bno\">{order.orderId}</p>\r\n                <p className=\"number\">{order.userDetails.phone}</p>\r\n                <p className=\"tq\">{order.noOfItems}</p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"billdetails\">\r\n        <div\r\n          className=\"row\"\r\n          style={{ justifyContent: \"space-between\", alignItems: \"center\" }}\r\n        >\r\n          {/* {console.log(props.currentOrder)} */}\r\n          <p className=\"bno\">{props.currentOrder.orderId}</p>\r\n          <p className=\"text\">Bill Details</p>\r\n          {props.ongoingOrders.length > 0 && props.currentOrder.orderId !== \"\" && (\r\n            <>\r\n              <input\r\n                list=\"searchItem\"\r\n                name=\"searchItems\"\r\n                id=\"searchItems\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"Type to search...\"\r\n                onChange={props.onChange}\r\n                style={{ outline: \"0\", cursor: \"pointer\" }}\r\n              />\r\n              <datalist id=\"searchItem\">\r\n                {props.items.map((item) => {\r\n                  return <option key={item.id} value={item.Name} />;\r\n                })}\r\n              </datalist>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"row head\">\r\n          <p className=\"iname\">Item Name</p>\r\n          <p className=\"ino\">Item Size</p>\r\n          <p className=\"quantity\">Quantity</p>\r\n          <p className=\"rate\">Rate</p>\r\n          <p className=\"price\">Price</p>\r\n        </div>\r\n        <div className=\"scroll\">\r\n          {props.currentOrder.items.map((item, i) => {\r\n            let priceUi = (\r\n              <>\r\n                <p className=\"ino\">{item.itemQuantity}</p>\r\n                <input\r\n                  name=\"itemSize\"\r\n                  type=\"number\"\r\n                  className=\"quantity\"\r\n                  placeholder=\"0\"\r\n                  min=\"0\"\r\n                  value={item.itemSize}\r\n                  onChange={(e) => props.onChange(e, item)}\r\n                />\r\n                <p className=\"rate\">{item.itemPrice}</p>\r\n              </>\r\n            );\r\n            if (\r\n              // item.branch[props.location].actualPrice === -1 &&\r\n              item.branch[props.location].current_price === -1 &&\r\n              item.branch[props.location].length === undefined\r\n            ) {\r\n              priceUi = (\r\n                <>\r\n                  <p className=\"ino\">\r\n                    <select\r\n                      className=\"itemId\"\r\n                      name=\"itemQuantity\"\r\n                      value={item.itemQuantity}\r\n                      onChange={(e) => props.onChange(e, item)}\r\n                    >\r\n                      <option value=\"quarter\">Quarter</option>\r\n                      <option value=\"half\">Half</option>\r\n                      <option value=\"full\">Full</option>\r\n                    </select>\r\n                  </p>\r\n                  <input\r\n                    name=\"itemSize\"\r\n                    type=\"number\"\r\n                    className=\"quantity\"\r\n                    placeholder=\"0\"\r\n                    min=\"0\"\r\n                    value={item.itemSize}\r\n                    onChange={(e) => props.onChange(e, item)}\r\n                  />\r\n                  <p className=\"rate\">{item.itemPrice}</p>\r\n                </>\r\n              );\r\n            } else if (item.branch[props.location].length >= 0) {\r\n              priceUi = (\r\n                <>\r\n                  <p className=\"ino\">\r\n                    <select\r\n                      className=\"itemId\"\r\n                      name=\"itemQuantity\"\r\n                      value={item.itemQuantity}\r\n                      onChange={(e) => props.onChange(e, item)}\r\n                    >\r\n                      <option value=\"grams\">Grams</option>\r\n                      <option value=\"kilograms\">KiloGrams</option>\r\n                      <option value=\"litres\">Litres</option>\r\n                      <option value=\"kilolitres\">KiloLitres</option>\r\n                    </select>\r\n                  </p>\r\n                  <input\r\n                    name=\"itemSize\"\r\n                    type=\"number\"\r\n                    className=\"quantity\"\r\n                    placeholder=\"0\"\r\n                    min=\"0\"\r\n                    value={item.itemSize}\r\n                    onChange={(e) => props.onChange(e, item)}\r\n                  />\r\n                  <p className=\"rate\">{item.itemPrice}</p>\r\n                </>\r\n              );\r\n            }\r\n            return (\r\n              <div className=\"row item\" key={item.id}>\r\n                <p name=\"itemName\" className=\"iname\">\r\n                  {item.Name}\r\n                </p>\r\n                {priceUi}\r\n                {/* {console.log(\"itemsss\", item)} */}\r\n                <p className=\"price\">{item.itemSize * item.itemPrice}</p>\r\n                <i\r\n                  class=\"fa fa-minus-circle remove-item\"\r\n                  aria-hidden=\"true\"\r\n                  onClick={() => props.removeItem(item.id)}\r\n                ></i>\r\n              </div>\r\n            );\r\n          })}\r\n          {/* <div className=\"row item\">\r\n            <p className=\"ino\">243</p>\r\n            <input\r\n              type=\"text\"\r\n              className=\"iname\"\r\n              placeholder=\"Chicken Briyani\"\r\n            />\r\n            <input type=\"number\" className=\"quantity\" placeholder=\"0\" />\r\n            <p className=\"rate\">120</p>\r\n            <p className=\"price\">240</p>\r\n          </div> */}\r\n        </div>\r\n        {/* <button type=\"button\" className=\"add\">\r\n          +\r\n        </button> */}\r\n        <div className=\"footer row\">\r\n          <p className=\"iname\">Total</p>\r\n          <p className=\"quantity\">{props.currentOrder.noOfItems}</p>\r\n          <p className=\"rate\">=</p>\r\n          <p className=\"price\">{props.currentOrder.totalPrice}</p>\r\n        </div>\r\n      </div>\r\n      {props.currentOrder.type === \"dinein\" ? (\r\n        <>\r\n          <div className=\"billgenerate\">\r\n            <h4>Bill Status</h4>\r\n            <p className=\"bno\">\r\n              Order-Id:&ensp;<b>{props.currentOrder.orderId}</b>\r\n            </p>\r\n            <p className=\"number\">\r\n              Name:&ensp;\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={props.currentOrder.userDetails.userName}\r\n                onChange={props.onChange}\r\n              />\r\n            </p>\r\n            <p className=\"number\">\r\n              Phone:&ensp;\r\n              <input\r\n                type=\"tel\"\r\n                name=\"phone\"\r\n                size=\"15\"\r\n                value={props.currentOrder.userDetails.phone}\r\n                onChange={props.onChange}\r\n              />\r\n            </p>\r\n            <p className=\"address\">\r\n              Address:&ensp;\r\n              <textarea\r\n                name=\"address\"\r\n                size=\"15\"\r\n                value={props.currentOrder.userDetails.userAddress}\r\n                onChange={props.onChange}\r\n              />\r\n            </p>\r\n            <p className=\"tq\">\r\n              Total Quantity:&ensp;<b>{props.currentOrder.noOfItems}</b>\r\n            </p>\r\n            <p className=\"tp\">\r\n              Total Price:&ensp;<i className=\"fas fa-rupee\"></i>\r\n              <b>{props.currentOrder.totalPrice}</b>\r\n            </p>\r\n            <p className=\"tq\">\r\n              Mode Of\r\n              <br />\r\n              Payment:&ensp;\r\n              <select\r\n                name=\"paymentMode\"\r\n                value={props.currentOrder.payment.paymentMethod}\r\n                onChange={props.onChange}\r\n              >\r\n                <option value=\"cash\">Cash</option>\r\n                <option value=\"debit/credit\">Debit/Credit</option>\r\n                <option value=\"phonepe\">Phone-Pe</option>\r\n                <option value=\"gpay\">GPay</option>\r\n              </select>\r\n            </p>\r\n\r\n            {generate === \"gennbill\" ? (\r\n              <>\r\n                <button type=\"button\" value=\"paid\" onClick={paidOrders}>\r\n                  Paid\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  type=\"button\"\r\n                  name=\"gennbill\"\r\n                  value=\"gennbill\"\r\n                  onClick={generateBill}\r\n                >\r\n                  Generate Bill\r\n                </button>\r\n                <br />\r\n                <button\r\n                  type=\"button\"\r\n                  name=\"gennbill\"\r\n                  value=\"gennbill\"\r\n                  onClick={() =>\r\n                    removeOrder(props.currentOrder.orderId, props.type)\r\n                  }\r\n                >\r\n                  Remove Order\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"billgenerate\">\r\n            <h4>Adding telephone orders</h4>\r\n            <p className=\"bno\">\r\n              Order-Id:&ensp;<b>{props.currentOrder.orderId}</b>\r\n            </p>\r\n            <p className=\"number\">\r\n              Name:&ensp;\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                size=\"15\"\r\n                value={props.currentOrder.userDetails.userName}\r\n                onChange={props.onChange}\r\n              />\r\n            </p>\r\n            <p className=\"number\">\r\n              Phone:&ensp;\r\n              <input\r\n                type=\"tel\"\r\n                name=\"phone\"\r\n                size=\"15\"\r\n                value={props.currentOrder.userDetails.phone}\r\n                onChange={props.onChange}\r\n              />\r\n            </p>\r\n            <p className=\"address\">\r\n              Address:&ensp;\r\n              <textarea\r\n                name=\"address\"\r\n                size=\"15\"\r\n                value={props.currentOrder.userDetails.userAddress}\r\n                onChange={props.onChange}\r\n              />\r\n            </p>\r\n            <p className=\"tq\">\r\n              Total Quantity:&ensp;<b>{props.currentOrder.noOfItems}</b>\r\n            </p>\r\n            <p className=\"tp\">\r\n              Total Price:&ensp;<i className=\"fas fa-rupee\"></i>\r\n              <b>{props.currentOrder.totalPrice}</b>\r\n            </p>\r\n            <p className=\"tq\">\r\n              Mode Of\r\n              <br />\r\n              Payment:&ensp;\r\n              <select\r\n                name=\"paymentMode\"\r\n                value={props.currentOrder.payment.paymentMethod}\r\n                onChange={props.onChange}\r\n              >\r\n                <option value=\"cash\">Cash</option>\r\n                <option value=\"debit/credit\">Debit/Credit</option>\r\n                <option value=\"phonepe\">Phone-Pe</option>\r\n                <option value=\"gpay\">GPay</option>\r\n              </select>\r\n            </p>\r\n            <button type=\"button\" onClick={addteleorder}>\r\n              Move to preparing\r\n            </button>\r\n            <br />\r\n            <button\r\n              type=\"button\"\r\n              name=\"gennbill\"\r\n              value=\"gennbill\"\r\n              onClick={() =>\r\n                removeOrder(props.currentOrder.orderId, props.type)\r\n              }\r\n            >\r\n              Remove Order\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManualBilling;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Switch, Route, NavLink, useHistory } from \"react-router-dom\";\r\n// import Orders from \"../components/Dashboard/Orders\";\r\nimport StockMaintainance from \"../components/Dashboard/StockMaintainance\";\r\nimport OrderMaintain from \"../components/Dashboard/OrderMaintain\";\r\nimport ManualBilling from \"../components/Manual/ManualBilling\";\r\nimport {\r\n  billPaidOrder,\r\n  getTodayOrders,\r\n  removeListener,\r\n  updateOrderStatus,\r\n} from \"../api/OrderDB\";\r\nimport AuthContext from \"../context/auth-context\";\r\n// import snackbarLink from \"../ui/Snackbar/SnackbarLink\";\r\nimport OrdersContext from \"../context/orders-context\";\r\n// import { onMessageListener, messaging } from \"../services/firebase\";\r\nimport { store } from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport \"animate.css/animate.min.css\";\r\nimport { getItem, getMultiTitleItems, setItem } from \"../api/ItemDB\";\r\nimport localForage from \"localforage\";\r\nimport localforage from \"localforage\";\r\nimport { db } from \"../services/firebase\";\r\n// import GUN from \"gun\";\r\n\r\nconst Dashboard = (props) => {\r\n  // const gun = GUN();\r\n  const authCtx = useContext(AuthContext);\r\n  const ordersContext = useContext(OrdersContext);\r\n  // const history = useHistory();\r\n  const [items, setItems] = useState([]);\r\n  const [type, setType] = useState(\"food\");\r\n  const [orders, setOrders] = useState({\r\n    allOrders: [],\r\n    newOrders: [],\r\n    preparingOrders: [],\r\n    onDeliveryOrders: [],\r\n    deliveredOrders: [],\r\n  });\r\n  const [outOfStockItems, setOutOfStockItems] = useState({\r\n    food: [],\r\n    grocery: [],\r\n  });\r\n  // for manual orders\r\n  const [manualBillNo, setManualBillNo] = useState({\r\n    telephoneBillNoFood: 0,\r\n    telephoneBillNoGrocery: 0,\r\n    manualBillNoFood: 0,\r\n    manualBillNoGrocery: 0,\r\n  });\r\n  const [ongoingOrders, setOngoingOrders] = useState({\r\n    food: [],\r\n    grocery: [],\r\n  });\r\n  const [currentOrder, setCurrentOrder] = useState({\r\n    food: {\r\n      actualPrice: 0,\r\n      cancelReason: \"\",\r\n      dBoyId: \"\",\r\n      deliveryCharge: 0,\r\n      discount: 0,\r\n      id: \"\",\r\n      latitude: \"\",\r\n      longitude: \"\",\r\n      noOfItems: 0,\r\n      orderId: \"\",\r\n      items: [],\r\n      payment: {\r\n        isPaid: false,\r\n        paymentMethod: \"\",\r\n      },\r\n      status: \"\",\r\n      timestamp: \"\",\r\n      totalPrice: 0,\r\n      tax: 0,\r\n      type: \"dinein\",\r\n      userDetails: {\r\n        latitude: 0,\r\n        longitude: 0,\r\n        phone: \"\",\r\n        userAddress: \"\",\r\n        userId: \"\",\r\n        userName: \"\",\r\n      },\r\n      userid: \"\",\r\n    },\r\n    grocery: {\r\n      actualPrice: 0,\r\n      cancelReason: \"\",\r\n      dBoyId: \"\",\r\n      deliveryCharge: 0,\r\n      discount: 0,\r\n      id: \"\",\r\n      latitude: \"\",\r\n      longitude: \"\",\r\n      noOfItems: 0,\r\n      orderId: \"\",\r\n      items: [],\r\n      payment: {\r\n        isPaid: false,\r\n        paymentMethod: \"\",\r\n      },\r\n      status: \"\",\r\n      timestamp: \"\",\r\n      totalPrice: 0,\r\n      tax: 0,\r\n      type: \"dinein\",\r\n      userDetails: {\r\n        latitude: 0,\r\n        longitude: 0,\r\n        phone: \"\",\r\n        userAddress: \"\",\r\n        userId: \"\",\r\n        userName: \"\",\r\n      },\r\n      userid: \"\",\r\n    },\r\n  });\r\n\r\n  navigator.serviceWorker.onmessage = (event) => {\r\n    // console.log(\"front\", event.data, event.data.messageType);\r\n    // console.log(\"front-history\", history.location);\r\n    let notification = event.data.notification;\r\n    let data = event.data.data;\r\n    if (data.type === \"food\") {\r\n      localForage\r\n        .getItem(\"outOfStockFood\")\r\n        .then((value) => {\r\n          if (value === null || value.length === 0) {\r\n            getItem(\r\n              data.category,\r\n              data.type,\r\n              data.orderId,\r\n              authCtx.user.location,\r\n              (item) => {\r\n                if (item === null) {\r\n                  console.log(\"In Stock\");\r\n                } else {\r\n                  console.log(\"Out Of Stock\");\r\n                  // add data local db\r\n                  setOutOfStockItems((prevState) => {\r\n                    let list = [...prevState.food, item];\r\n                    localForage.setItem(\"outOfStockFood\", list);\r\n                    return {\r\n                      ...prevState,\r\n                      food: list,\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n            );\r\n          } else {\r\n            let index = value.findIndex((v) => {\r\n              return v.id === data.orderId;\r\n            });\r\n            if (index === -1) {\r\n              // if item is not there already\r\n              getItem(\r\n                data.category,\r\n                data.type,\r\n                data.orderId,\r\n                authCtx.user.location,\r\n                (item) => {\r\n                  if (item === null) {\r\n                    console.log(\"In Stock\");\r\n                  } else {\r\n                    console.log(\"Out Of Stock\");\r\n                    // add data local db\r\n                    setOutOfStockItems((prevState) => {\r\n                      let list = [...prevState.food, item];\r\n                      localForage.setItem(\"outOfStockFood\", list);\r\n                      return {\r\n                        ...prevState,\r\n                        food: list,\r\n                      };\r\n                    });\r\n                  }\r\n                }\r\n              );\r\n            }\r\n          }\r\n        })\r\n        .catch((e) => console.log(e));\r\n    } else {\r\n      localForage\r\n        .getItem(\"outOfStockGrocery\")\r\n        .then((value) => {\r\n          if (value === null) {\r\n            getItem(\r\n              data.category,\r\n              data.type,\r\n              data.orderId,\r\n              authCtx.user.location,\r\n              (item) => {\r\n                if (item === null) {\r\n                  console.log(\"In Stock\");\r\n                } else {\r\n                  console.log(\"Out Of Stock\");\r\n                  // add data local db\r\n                  setOutOfStockItems((prevState) => {\r\n                    let list = [...prevState.grocery, item];\r\n                    localForage.setItem(\"outOfStockGrocery\", list);\r\n                    return {\r\n                      ...prevState,\r\n                      grocery: list,\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n            );\r\n          } else {\r\n            let index = value.findIndex((v) => {\r\n              return v.id === data.orderId;\r\n            });\r\n            if (index === -1) {\r\n              // if item is not there already\r\n              getItem(\r\n                data.category,\r\n                data.type,\r\n                data.orderId,\r\n                authCtx.user.location,\r\n                (item) => {\r\n                  if (item === null) {\r\n                    console.log(\"In Stock\");\r\n                  } else {\r\n                    console.log(\"Out Of Stock\");\r\n                    // add data local db\r\n                    setOutOfStockItems((prevState) => {\r\n                      let list = [...prevState.grocery, item];\r\n                      localForage.setItem(\"outOfStockGrocery\", list);\r\n                      return {\r\n                        ...prevState,\r\n                        grocery: list,\r\n                      };\r\n                    });\r\n                  }\r\n                }\r\n              );\r\n            }\r\n          }\r\n        })\r\n        .catch((e) => console.log(e));\r\n    }\r\n    if (event.data.messageType !== \"notification-clicked\") {\r\n      store.addNotification({\r\n        title: notification.title,\r\n        message: notification.body,\r\n        type: \"default\",\r\n        insert: \"top\",\r\n        container: \"bottom-right\",\r\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n        dismiss: {\r\n          duration: 5000,\r\n          onScreen: true,\r\n        },\r\n      });\r\n    }\r\n  };\r\n  // messaging.onMessage((payload) => console.log(\"payload\", payload));\r\n  // messaging.onBackgroundMessage((payload) => console.log(\"bac\", payload));\r\n\r\n  // onMessageListener()\r\n  //   .then((payload) => {\r\n  //     console.log(\"notificaion msg: \", payload.notification);\r\n  //   })\r\n  //   .catch((e) => console.log(e));\r\n\r\n  // useEffect(() => {\r\n  //   let foodList = [];\r\n  //   let groceryList = [];\r\n  //   localForage\r\n  //     .getItem(\"outOfStockFood\")\r\n  //     .then((value) => {\r\n  //       // console.log(\"outOfStockFood\", value);\r\n  //       if (value !== null) {\r\n  //         foodList = value;\r\n  //       }\r\n  //       localForage\r\n  //         .getItem(\"outOfStockGrocery\")\r\n  //         .then((value) => {\r\n  //           // console.log(\"outOfStockGrocery\", value);\r\n  //           if (value !== null) {\r\n  //             groceryList = value;\r\n  //           }\r\n  //           setOutOfStockItems({\r\n  //             food: foodList,\r\n  //             grocery: groceryList,\r\n  //           });\r\n  //         })\r\n  //         .catch((e) => console.log(e));\r\n  //     })\r\n  //     .catch((e) => console.log(e));\r\n\r\n  //   // console.log(\"foodList\", foodList);\r\n  //   // console.log(\"groceryList\", groceryList);\r\n  //   // get ongoingFoodOrders & ongoingGroceryOrders\r\n  //   localforage\r\n  //     .getItem(\"ongoingFoodOrders\")\r\n  //     .then((value) => {\r\n  //       if (value !== null) {\r\n  //         setOngoingOrders((prevState) => {\r\n  //           return {\r\n  //             ...prevState,\r\n  //             food: value,\r\n  //           };\r\n  //         });\r\n  //       }\r\n  //       localforage\r\n  //         .getItem(\"ongoingGroceryOrders\")\r\n  //         .then((value) => {\r\n  //           if (value !== null) {\r\n  //             setOngoingOrders((prevState) => {\r\n  //               return {\r\n  //                 ...prevState,\r\n  //                 grocery: value,\r\n  //               };\r\n  //             });\r\n  //           }\r\n  //         })\r\n  //         .catch((e) => console.log(e));\r\n  //     })\r\n  //     .catch((e) => console.log(e));\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect [Dashboard.js] Orders\");\r\n    let user = authCtx.user;\r\n    var unsubscribe;\r\n    if (user !== null) {\r\n      let date = new Date();\r\n      let day = date.getDate();\r\n      if (day < 10) {\r\n        day = \"0\" + day;\r\n      }\r\n      let month = date.getMonth() + 1;\r\n      if (month < 10) {\r\n        month = \"0\" + month;\r\n      }\r\n      let year = date.getFullYear();\r\n      date = day + \".\" + month + \".\" + year;\r\n\r\n      // getTodayOrders(date, type, user.location, (orderss, manualBillNo) => {\r\n      let ty = \"\";\r\n      if (type === \"food\") {\r\n        ty = \"FoodOrders\";\r\n        // date = \"02.11.2021\";\r\n      } else {\r\n        ty = \"GroceryOrders\";\r\n        // date = \"03.11.2021\";\r\n      }\r\n      let list = [];\r\n      unsubscribe = db\r\n        .collection(ty)\r\n        .doc(\"todayOrders\")\r\n        .collection(user.location)\r\n        .onSnapshot(\r\n          (docs) => {\r\n            docs.forEach((doc) => {\r\n              list.push(doc.data());\r\n            });\r\n            if (list.length === 0) {\r\n              setOrders(\"No Orders\");\r\n            } else {\r\n              console.log(\"orderss\", list);\r\n              let data = {\r\n                allOrders: [],\r\n                newOrders: [],\r\n                preparingOrders: [],\r\n                onDeliveryOrders: [],\r\n                deliveredOrders: [],\r\n              };\r\n\r\n              let statData = {\r\n                online: 0,\r\n                telephone: 0,\r\n                ready: 0,\r\n                cancelled: 0,\r\n              };\r\n              // allOrders\r\n              list.sort((a, b) => {\r\n                if (a.timestamp < b.timestamp) {\r\n                  return 1;\r\n                }\r\n                if (a.timestamp > b.timestamp) {\r\n                  return -1;\r\n                }\r\n                return 0;\r\n              });\r\n              data.allOrders = [...list];\r\n              // other orders\r\n              list.forEach((o) => {\r\n                if (o.status === \"booked\") {\r\n                  data.newOrders.push(o);\r\n                  // if (orders.allOrders.length !== 0) {\r\n                  //   console.log(\"orders snap\", orders.allOrders);\r\n                  //   let index = orders.allOrders.findIndex((ord) => {\r\n                  //     return o.orderId === ord.orderId;\r\n                  //   });\r\n                  //   if (index === -1) {\r\n                  //     // console.log(\"index\", index, o);\r\n                  //     snackbarLink(o, \"New Order\");\r\n                  //   }\r\n                  // }\r\n                } else if (o.status === \"preparing\") {\r\n                  data.preparingOrders.push(o);\r\n                  // } else if (o.status === \"ondelivery\") {\r\n                } else if (\r\n                  o.status === \"assigned\" ||\r\n                  o.status === \"ondelivery\"\r\n                ) {\r\n                  data.onDeliveryOrders.push(o);\r\n                  statData.ready++;\r\n                } else if (o.status === \"delivered\") {\r\n                  data.deliveredOrders.push(o);\r\n                }\r\n                if (o.type === \"online\") {\r\n                  statData.online++;\r\n                } else if (o.type === \"telephone\") {\r\n                  statData.telephone++;\r\n                }\r\n              });\r\n              setOrders((prevState) => {\r\n                return data;\r\n              });\r\n              ordersContext.setOrderData(statData);\r\n            }\r\n            // setOrders(list);\r\n            list = [];\r\n            // console.log(\"unsub\", unsubscribe);\r\n          },\r\n          (e) => console.log(e)\r\n        );\r\n    }\r\n    return () => {\r\n      if (unsubscribe instanceof Function) {\r\n        unsubscribe();\r\n      } else {\r\n        console.log(\"Not a function\");\r\n      }\r\n      // unsubscribe();\r\n      // removeListener();\r\n      console.log(\"cleanup for listener\");\r\n    };\r\n  }, [type, authCtx]);\r\n\r\n  const removeHandler = (id) => {\r\n    // console.log(\"remove\", id);\r\n    if (type === \"food\") {\r\n      setOutOfStockItems((prevState) => {\r\n        let list = [...prevState.food];\r\n        let index = list.findIndex((v) => v.id === id);\r\n        list.splice(index, 1);\r\n        localForage\r\n          .setItem(\"outOfStockFood\", list)\r\n          .then(() => console.log(\"food successfully updated!!!\"))\r\n          .catch((e) => console.log(e));\r\n        return {\r\n          ...prevState,\r\n          food: list,\r\n        };\r\n      });\r\n    } else {\r\n      setOutOfStockItems((prevState) => {\r\n        let list = [...prevState.grocery];\r\n        let index = list.findIndex((v) => v.id === id);\r\n        list.splice(index, 1);\r\n        localForage\r\n          .setItem(\"outOfStockGrocery\", list)\r\n          .then(() => console.log(\"grocery successfully updated!!!\"))\r\n          .catch((e) => console.log(e));\r\n        return {\r\n          ...prevState,\r\n          grocery: list,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  // update outOfStock\r\n  const checkHandler = (item) => {\r\n    if (type === \"food\") {\r\n      setItem(item.category, type, item, authCtx.user.location, (isAdded) => {\r\n        if (isAdded) {\r\n          setOutOfStockItems((prevState) => {\r\n            let list = [...prevState.food];\r\n            let index = list.findIndex((v) => v.id === item.id);\r\n            list.splice(index, 1);\r\n            localForage\r\n              .setItem(\"outOfStockFood\", list)\r\n              .then(() => console.log(\"food successfully updated!!!\"))\r\n              .catch((e) => console.log(e));\r\n            return {\r\n              ...prevState,\r\n              food: list,\r\n            };\r\n          });\r\n        } else {\r\n          alert(\"Some error!!!\");\r\n        }\r\n      });\r\n    } else {\r\n      setItem(item.category, type, item, (isAdded) => {\r\n        if (isAdded) {\r\n          setOutOfStockItems((prevState) => {\r\n            let list = [...prevState.grocery];\r\n            let index = list.findIndex((v) => v.id === item.id);\r\n            list.splice(index, 1);\r\n            localForage\r\n              .setItem(\"outOfStockGrocery\", list)\r\n              .then(() => console.log(\"grocery successfully updated!!!\"))\r\n              .catch((e) => console.log(e));\r\n            return {\r\n              ...prevState,\r\n              grocery: list,\r\n            };\r\n          });\r\n        } else {\r\n          alert(\"Some error!!!\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const createOrder = (manual) => {\r\n    // setManualBillNo((prevState) => {\r\n    //   if (type === \"food\") {\r\n    //     if (manual === \"dineIn\") {\r\n    //       return {\r\n    //         ...prevState,\r\n    //         // manualBillNoFood: prevState.manualBillNoFood + 1,\r\n    //         manualBillNoFood: new Date().getTime(),\r\n    //       };\r\n    //     } else {\r\n    //       return {\r\n    //         ...prevState,\r\n    //         // telephoneBillNoFood: prevState.telephoneBillNoFood + 1,\r\n    //         telephoneBillNoFood: new Date().getTime(),\r\n    //       };\r\n    //     }\r\n    //   } else {\r\n    //     if (manual === \"dineIn\") {\r\n    //       return {\r\n    //         ...prevState,\r\n    //         // manualBillNoGrocery: prevState.manualBillNoGrocery + 1,\r\n    //         manualBillNoGrocery: new Date().getTime(),\r\n    //       };\r\n    //     } else {\r\n    //       return {\r\n    //         ...prevState,\r\n    //         // telephoneBillNoGrocery: prevState.telephoneBillNoGrocery + 1,\r\n    //         telephoneBillNoGrocery: new Date().getTime(),\r\n    //       };\r\n    //     }\r\n    //   }\r\n    // });\r\n\r\n    let time = new Date().getTime();\r\n    if (type === \"food\") {\r\n      setOngoingOrders((prevState) => {\r\n        let list = [...prevState.food];\r\n        let newData = {\r\n          // orderId: \"FD\" + (manualBillNo.manualBillNoFood + 1);\r\n          actualPrice: 0,\r\n          cancelReason: \"\",\r\n          dBoyId: \"\",\r\n          deliveryCharge: 0,\r\n          discount: 0,\r\n          id: \"FD\" + time,\r\n          latitude: \"\",\r\n          longitude: \"\",\r\n          noOfItems: 0,\r\n          orderId: \"FD\" + time,\r\n          items: [],\r\n          payment: {\r\n            isPaid: true,\r\n            paymentMethod: \"cash\",\r\n          },\r\n          status: \"\",\r\n          timestamp: \"\",\r\n          totalPrice: 0,\r\n          tax: 0,\r\n          type: \"dinein\",\r\n          userDetails: {\r\n            latitude: 0,\r\n            longitude: 0,\r\n            phone: \"\",\r\n            userAddress: \"\",\r\n            userId: \"\",\r\n            userName: \"\",\r\n          },\r\n          userid: \"\",\r\n        };\r\n\r\n        if (manual === \"telephone\") {\r\n          newData = {\r\n            // orderId: \"FT\" + (manualBillNo.telephoneBillNoFood + 1),\r\n            actualPrice: 0,\r\n            cancelReason: \"\",\r\n            dBoyId: \"\",\r\n            deliveryCharge: 0,\r\n            discount: 0,\r\n            id: \"FT\" + time,\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            noOfItems: 0,\r\n            orderId: \"FT\" + time,\r\n            items: [],\r\n            payment: {\r\n              isPaid: false,\r\n              paymentMethod: \"cash\",\r\n            },\r\n            status: \"\",\r\n            timestamp: \"\",\r\n            totalPrice: 0,\r\n            tax: 0,\r\n            type: \"telephone\",\r\n            userDetails: {\r\n              latitude: 0,\r\n              longitude: 0,\r\n              phone: \"\",\r\n              userAddress: \"\",\r\n              userId: \"\",\r\n              userName: \"\",\r\n            },\r\n            userid: \"\",\r\n          };\r\n        }\r\n        localforage.setItem(\"ongoingFoodOrders\", [...list, newData]);\r\n        return {\r\n          ...prevState,\r\n          food: [...list, newData],\r\n        };\r\n      });\r\n    } else {\r\n      setOngoingOrders((prevState) => {\r\n        let list = [...prevState.grocery];\r\n        let newData = {\r\n          // orderId: \"GD\" + (manualBillNo.manualBillNoGrocery + 1),\r\n          actualPrice: 0,\r\n          cancelReason: \"\",\r\n          dBoyId: \"\",\r\n          deliveryCharge: 0,\r\n          discount: 0,\r\n          id: \"GD\" + time,\r\n          latitude: \"\",\r\n          longitude: \"\",\r\n          noOfItems: 0,\r\n          orderId: \"GD\" + time,\r\n          items: [],\r\n          payment: {\r\n            isPaid: true,\r\n            paymentMethod: \"cash\",\r\n          },\r\n          status: \"\",\r\n          timestamp: \"\",\r\n          totalPrice: 0,\r\n          tax: 0,\r\n          type: \"dinein\",\r\n          userDetails: {\r\n            latitude: 0,\r\n            longitude: 0,\r\n            phone: \"\",\r\n            userAddress: \"\",\r\n            userId: \"\",\r\n            userName: \"\",\r\n          },\r\n          userid: \"\",\r\n        };\r\n        if (manual === \"telephone\") {\r\n          newData = {\r\n            // orderId: \"GT\" + (manualBillNo.telephoneBillNoGrocery + 1),\r\n            actualPrice: 0,\r\n            cancelReason: \"\",\r\n            dBoyId: \"\",\r\n            deliveryCharge: 0,\r\n            discount: 0,\r\n            id: \"GT\" + time,\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            noOfItems: 0,\r\n            orderId: \"GT\" + time,\r\n            items: [],\r\n            payment: {\r\n              isPaid: false,\r\n              paymentMethod: \"cash\",\r\n            },\r\n            status: \"\",\r\n            timestamp: \"\",\r\n            totalPrice: 0,\r\n            tax: 0,\r\n            type: \"telephone\",\r\n            userDetails: {\r\n              latitude: 0,\r\n              longitude: 0,\r\n              phone: \"\",\r\n              userAddress: \"\",\r\n              userId: \"\",\r\n              userName: \"\",\r\n            },\r\n            userid: \"\",\r\n          };\r\n        }\r\n        localforage.setItem(\"ongoingGroceryOrders\", [...list, newData]);\r\n        return {\r\n          ...prevState,\r\n          grocery: [...list, newData],\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const removeOrder = (orderId, type) => {\r\n    // console.log(\"order\", orderId, type);\r\n    setOngoingOrders((prevState) => {\r\n      if (type === \"food\") {\r\n        let listFood = [...prevState.food];\r\n        let index = listFood.findIndex((val) => val.orderId === orderId);\r\n        listFood.splice(index, 1);\r\n        localforage.setItem(\"ongoingFoodOrders\", [...listFood]);\r\n        return {\r\n          ...prevState,\r\n          food: [...listFood],\r\n        };\r\n      } else {\r\n        let listGrocery = [...prevState.grocery];\r\n        let index = listGrocery.findIndex((val) => val.orderId === orderId);\r\n        listGrocery.splice(index, 1);\r\n        localforage.setItem(\"ongoingGroceryOrders\", [...listGrocery]);\r\n        return {\r\n          ...prevState,\r\n          grocery: [...listGrocery],\r\n        };\r\n      }\r\n    });\r\n    setCurrentOrder({\r\n      food: {\r\n        actualPrice: 0,\r\n        cancelReason: \"\",\r\n        dBoyId: \"\",\r\n        deliveryCharge: 0,\r\n        discount: 0,\r\n        id: \"\",\r\n        latitude: \"\",\r\n        longitude: \"\",\r\n        noOfItems: 0,\r\n        orderId: \"\",\r\n        items: [],\r\n        payment: {\r\n          isPaid: false,\r\n          paymentMethod: \"\",\r\n        },\r\n        status: \"\",\r\n        timestamp: \"\",\r\n        totalPrice: 0,\r\n        tax: 0,\r\n        type: \"dinein\",\r\n        userDetails: {\r\n          latitude: 0,\r\n          longitude: 0,\r\n          phone: \"\",\r\n          userAddress: \"\",\r\n          userId: \"\",\r\n          userName: \"\",\r\n        },\r\n        userid: \"\",\r\n      },\r\n      grocery: {\r\n        actualPrice: 0,\r\n        cancelReason: \"\",\r\n        dBoyId: \"\",\r\n        deliveryCharge: 0,\r\n        discount: 0,\r\n        id: \"\",\r\n        latitude: \"\",\r\n        longitude: \"\",\r\n        noOfItems: 0,\r\n        orderId: \"\",\r\n        items: [],\r\n        payment: {\r\n          isPaid: false,\r\n          paymentMethod: \"\",\r\n        },\r\n        status: \"\",\r\n        timestamp: \"\",\r\n        totalPrice: 0,\r\n        tax: 0,\r\n        type: \"dinein\",\r\n        userDetails: {\r\n          latitude: 0,\r\n          longitude: 0,\r\n          phone: \"\",\r\n          userAddress: \"\",\r\n          userId: \"\",\r\n          userName: \"\",\r\n        },\r\n        userid: \"\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const onChangeHandler = (e, item) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    let index = items.findIndex((i) => i.Name === value);\r\n    if (index !== -1) {\r\n      let item = items[index];\r\n      if (name === \"searchItems\") {\r\n        if (type === \"food\") {\r\n          setCurrentOrder((prevState) => {\r\n            let list = [...prevState.food.items];\r\n            console.log(\"change-food\", prevState);\r\n            let food = prevState.food;\r\n            // below two lines is to ensure that we only add unique items\r\n            let i = food.items.findIndex((i) => i.id === item.id);\r\n            // console.log(\"change\", item, props.location);\r\n            if (i === -1) {\r\n              let newItem = {\r\n                ...item,\r\n                // itemId: item.id,\r\n                // itemName: item.Name,\r\n                itemPrice: item.branch[authCtx.user.location].current_price,\r\n                itemSize: 1,\r\n                itemQuantity: 1,\r\n              };\r\n              // if (\r\n              //   item.branch[authCtx.user.location].actualPrice === -1 &&\r\n              //   item.branch[authCtx.user.location].currentPrice\r\n              // ) {\r\n              //   newItem = {\r\n              //     ...item,\r\n              //     itemPrice: item.branch[authCtx.user.location].cquarterPrice,\r\n              //     itemSize: 1,\r\n              //     itemQuantity: \"quarter\",\r\n              //   };\r\n              // }\r\n              food.totalPrice += newItem.itemPrice;\r\n              food.noOfItems = food.noOfItems + 1;\r\n              food.items = [...list, newItem];\r\n              localforage\r\n                .getItem(\"ongoingFoodOrders\")\r\n                .then((value) => {\r\n                  if (value === null) {\r\n                    let list = [];\r\n                    list.push(food);\r\n                    localforage.setItem(\"ongoingFoodOrders\", list);\r\n                  } else {\r\n                    // let list = [...value];\r\n                    let list = [];\r\n                    list.push(food);\r\n                    localforage.setItem(\"ongoingFoodOrders\", list);\r\n                  }\r\n                })\r\n                .catch((e) => console.log(e));\r\n              return {\r\n                ...prevState,\r\n                food: food,\r\n              };\r\n            } else {\r\n              alert(\"Already added that item!!!\");\r\n              food.items = [...list];\r\n              return {\r\n                ...prevState,\r\n                food: food,\r\n              };\r\n            }\r\n          });\r\n        } else {\r\n          // console.log(\"change-grocery\");\r\n          if (item.branch[authCtx.user.location] === undefined) {\r\n            alert(\"Not available in your location!!!\");\r\n          }\r\n          setCurrentOrder((prevState) => {\r\n            let list = [...prevState.grocery.items];\r\n            let grocery = prevState.grocery;\r\n            let i = grocery.items.findIndex((i) => i.id === item.id);\r\n            if (i === -1) {\r\n              let newItem = {\r\n                ...item,\r\n                // itemId: item.id,\r\n                // itemName: item.Name,\r\n                itemPrice: item.branch[authCtx.user.location].current_price,\r\n                itemSize: 1,\r\n                itemQuantity: 1,\r\n              };\r\n              // if (item[authCtx.user.location].price.length <= 0) {\r\n              //   newItem = {\r\n              //     ...item,\r\n              //     itemPrice: item[authCtx.user.location].price.cquarterPrice,\r\n              //     itemSize: 1,\r\n              //     itemQuantity: \"quarter\",\r\n              //   };\r\n              // }\r\n              grocery.totalPrice += newItem.itemPrice;\r\n              grocery.noOfItems = grocery.noOfItems + 1;\r\n              grocery.items = [...list, newItem];\r\n              return {\r\n                ...prevState,\r\n                grocery: grocery,\r\n              };\r\n            } else {\r\n              alert(\"Already added that item!!!\");\r\n              grocery.items = [...list];\r\n              return {\r\n                ...prevState,\r\n                grocery: grocery,\r\n              };\r\n            }\r\n          });\r\n        }\r\n        document.getElementById(\"searchItems\").value = \"\";\r\n      }\r\n    } else if (name === \"phone\" || name === \"username\" || name === \"address\") {\r\n      if (type === \"food\") {\r\n        setCurrentOrder((prevState) => {\r\n          let food = prevState.food;\r\n          if (name === \"phone\") {\r\n            food.userDetails.phone = value;\r\n          } else if (name === \"username\") {\r\n            food.userDetails.userName = value;\r\n          } else if (name === \"address\") {\r\n            food.userDetails.userAddress = value;\r\n          }\r\n          return {\r\n            ...prevState,\r\n            food: food,\r\n          };\r\n        });\r\n      } else {\r\n        setCurrentOrder((prevState) => {\r\n          let grocery = prevState.grocery;\r\n          if (name === \"phone\") {\r\n            grocery.userDetails.phone = value;\r\n          } else if (name === \"username\") {\r\n            grocery.userDetails.userName = value;\r\n          } else if (name === \"address\") {\r\n            grocery.userDetails.userAddress = value;\r\n          }\r\n          return {\r\n            ...prevState,\r\n            food: grocery,\r\n          };\r\n        });\r\n      }\r\n    } else if (name === \"paymentMode\") {\r\n      if (type === \"food\") {\r\n        setCurrentOrder((prevState) => {\r\n          let food = prevState.food;\r\n          food.payment.paymentMethod = value;\r\n          return {\r\n            ...prevState,\r\n            food: food,\r\n          };\r\n        });\r\n      } else {\r\n        setCurrentOrder((prevState) => {\r\n          let grocery = prevState.grocery;\r\n          grocery.payment.paymentMethod = value;\r\n          return {\r\n            ...prevState,\r\n            grocery: grocery,\r\n          };\r\n        });\r\n      }\r\n    } else if (name === \"itemSize\") {\r\n      // console.log(\"change-itemSize--\", currentOrder, item);\r\n      if (type === \"food\") {\r\n        setCurrentOrder((prevState) => {\r\n          let list = [...prevState.food.items];\r\n          let index = list.findIndex((l) => l.id === item.id);\r\n          let updatedItem = {\r\n            ...list[index],\r\n            itemSize: value,\r\n          };\r\n          list[index] = updatedItem;\r\n          let food = prevState.food;\r\n          food.items = [...list];\r\n          let sumPrice = 0;\r\n          let size = 0;\r\n          food.items.forEach((item) => {\r\n            sumPrice += item.itemPrice * item.itemSize;\r\n            size += parseInt(item.itemSize);\r\n          });\r\n          food.totalPrice = sumPrice;\r\n          food.noOfItems = size;\r\n          return {\r\n            ...prevState,\r\n            food: food,\r\n          };\r\n        });\r\n      } else {\r\n        setCurrentOrder((prevState) => {\r\n          let list = [...prevState.grocery.items];\r\n          let index = list.findIndex((l) => l.id === item.id);\r\n          let updatedItem = {\r\n            ...list[index],\r\n            itemSize: value,\r\n          };\r\n          list[index] = updatedItem;\r\n          let grocery = prevState.grocery;\r\n          grocery.items = [...list];\r\n          let sumPrice = 0;\r\n          let size = 0;\r\n          grocery.items.forEach((item) => {\r\n            sumPrice += item.itemPrice * item.itemSize;\r\n            size += parseInt(item.itemSize);\r\n          });\r\n          grocery.totalPrice = sumPrice;\r\n          grocery.noOfItems = size;\r\n          return {\r\n            ...prevState,\r\n            grocery: grocery,\r\n          };\r\n        });\r\n      }\r\n    } else if (name === \"itemQuantity\") {\r\n      // console.log(\"change-itemQuantity\", currentOrder, item);\r\n      if (type === \"food\") {\r\n        setCurrentOrder((prevState) => {\r\n          let list = [...prevState.food.items];\r\n          let index = list.findIndex((l) => l.id === item.id);\r\n          let price = item[authCtx.user.location].price.cquarterPrice;\r\n          if (value === \"half\") {\r\n            price = item[authCtx.user.location].price.chalfPrice;\r\n          } else if (value === \"full\") {\r\n            price = item[authCtx.user.location].price.cfullPrice;\r\n          }\r\n          let updatedItem = {\r\n            ...list[index],\r\n            itemQuantity: value,\r\n            itemPrice: price,\r\n          };\r\n          list[index] = updatedItem;\r\n          let food = prevState.food;\r\n          food.items = [...list];\r\n          let sumPrice = 0;\r\n          food.items.forEach((item) => {\r\n            sumPrice += item.itemPrice * item.itemSize;\r\n          });\r\n          food.totalPrice = sumPrice;\r\n          return {\r\n            ...prevState,\r\n            food: food,\r\n          };\r\n        });\r\n      } else {\r\n        console.log(\"No code yet for grocery, bcs it is different\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeItem = (id) => {\r\n    // console.log(\"removeItem\", id);\r\n    if (type === \"food\") {\r\n      setCurrentOrder((prevState) => {\r\n        let list = [...prevState.food.items];\r\n        let index = list.findIndex((l) => l.id === id);\r\n        list.splice(index, 1);\r\n        let food = prevState.food;\r\n        food.noOfItems = food.noOfItems - 1;\r\n        food.items = [...list];\r\n        let sumPrice = 0;\r\n        let size = 0;\r\n        list.forEach((item) => {\r\n          sumPrice += item.itemPrice * item.itemSize;\r\n          size += parseInt(item.itemSize);\r\n        });\r\n        food.totalPrice = sumPrice;\r\n        food.noOfItems = size;\r\n        return {\r\n          ...prevState,\r\n          food: food,\r\n        };\r\n      });\r\n    } else {\r\n      // console.log(\"change-grocery\");\r\n      setCurrentOrder((prevState) => {\r\n        let list = [...prevState.grocery.items];\r\n        let index = list.findIndex((l) => l.id === id);\r\n        list.splice(index, 1);\r\n        let grocery = prevState.grocery;\r\n        grocery.noOfItems = grocery.noOfItems + 1;\r\n        grocery.items = [...list];\r\n        let sumPrice = 0;\r\n        let size = 0;\r\n        grocery.items.forEach((item) => {\r\n          sumPrice += item.itemPrice * item.itemSize;\r\n          size += parseInt(item.itemSize);\r\n        });\r\n        grocery.totalPrice = sumPrice;\r\n        grocery.noOfItems = size;\r\n        return {\r\n          ...prevState,\r\n          grocery: grocery,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const generateBill = () => {\r\n    if (type === \"food\") {\r\n      console.log(\"currentOrder\", currentOrder.food);\r\n      if (\r\n        currentOrder.food.totalPrice === 0 ||\r\n        currentOrder.food.noOfItems === 0\r\n      ) {\r\n        alert(\"Price or Item should not be 0(Zero)!!!\");\r\n      } else {\r\n        billPaidOrder(\r\n          currentOrder.food,\r\n          type,\r\n          authCtx.user.location,\r\n          (isAdded) => {\r\n            if (isAdded) {\r\n              // window.alert(\"Successfully Added to local store!!!\");\r\n              // for thermal printer && data added to backend\r\n              alert(\"Food Bill Generated for - \" + currentOrder.food.orderId);\r\n              removeOrder(currentOrder.food.orderId, type);\r\n            } else {\r\n              // error not adding\r\n              window.alert(\"Not Added... Try Again!!!\");\r\n            }\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      console.log(\"currentOrder-grocery\", currentOrder.grocery);\r\n      if (\r\n        currentOrder.food.totalPrice === 0 ||\r\n        currentOrder.food.noOfItems === 0\r\n      ) {\r\n        alert(\"Price or Item should not be 0(Zero)!!!\");\r\n      } else {\r\n        billPaidOrder(\r\n          currentOrder.grocery,\r\n          type,\r\n          authCtx.user.location,\r\n          (isAdded) => {\r\n            if (isAdded) {\r\n              // window.alert(\"Successfully Added to local store!!!\");\r\n              // for thermal printer && data added to backend\r\n              alert(\r\n                \"Grocery Bill Generated for - \" + currentOrder.grocery.orderId\r\n              );\r\n              removeOrder(currentOrder.grocery.orderId, type);\r\n            } else {\r\n              // error not adding\r\n              window.alert(\"Not Added... Try Again!!!\");\r\n            }\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const sendNotificationToDeliveryUser = async (order, dGuy, status) => {\r\n    console.log(\"order\", order);\r\n    const FIREBASE_API_KEY =\r\n      \"AAAA_JouL7I:APA91bHU1dqei_StIKqJVED6WsQRD4JKUhauk2VvPy3KUtGOQ715PTmmE8yTK5cFfJvcs0EXsrVAO2YBEdIPYYzktL4FdNXTkf3TV8V6_keOr842VNuDiGfw3Ulv-rkDXzYeNo-_8Wul\";\r\n    const address =\r\n      \"TO: \" + order.userDetails?.userName ||\r\n      order.order_address.userName +\r\n        \", Address: \" +\r\n        order.userDetails?.userAddress ||\r\n      order.order_address.userAddress;\r\n    const message = {\r\n      registration_ids: [],\r\n      notification: {\r\n        title: \"New Order - \" + order.orderId,\r\n        body: address,\r\n        vibrate: 1,\r\n        sound: 1,\r\n        show_in_foreground: true,\r\n        priority: \"high\",\r\n        content_available: true,\r\n      },\r\n      data: {\r\n        title: \"New Order - \" + order.orderId,\r\n        body: address,\r\n        id: order.id,\r\n      },\r\n    };\r\n    message.registration_ids.push(dGuy.user_token);\r\n\r\n    let headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"key=\" + FIREBASE_API_KEY,\r\n    });\r\n\r\n    let response = await fetch(\"https://fcm.googleapis.com/fcm/send\", {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify(message),\r\n    });\r\n    response = await response.json();\r\n    console.log(\"response\", response);\r\n    store.addNotification({\r\n      title: \"Notification Sent!!!\",\r\n      message: \"To Delivery User: \" + dGuy.user_username,\r\n      type: \"default\",\r\n      insert: \"top\",\r\n      container: \"bottom-right\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 5000,\r\n        onScreen: true,\r\n      },\r\n    });\r\n  };\r\n\r\n  // status change - preparing, assigned\r\n  const updateOrder = (order, status, dGuy) => {\r\n    updateOrderStatus(\r\n      type,\r\n      authCtx.user.location,\r\n      order,\r\n      status,\r\n      (isUpdated) => {\r\n        if (isUpdated) {\r\n          setOrders((prevState) => {\r\n            if (status === \"preparing\") {\r\n              let updatedOrder = {\r\n                ...order,\r\n                status: \"preparing\",\r\n              };\r\n              // all orders array\r\n              let allOrders = [...prevState.allOrders];\r\n              let allIndex = allOrders.findIndex((o) => o.id === order.id);\r\n              allOrders[allIndex] = updatedOrder;\r\n              // new Orders array\r\n              let newOrders = [...prevState.newOrders];\r\n              let newIndex = newOrders.findIndex((o) => o.id === order.id);\r\n              // delete from newOrders and push into preparingOrders\r\n              newOrders.splice(newIndex, 1);\r\n              let preparingOrders = [...prevState.preparingOrders];\r\n              preparingOrders.push(updatedOrder);\r\n              return {\r\n                ...prevState,\r\n                allOrders: allOrders,\r\n                newOrders: newOrders,\r\n                preparingOrders: preparingOrders,\r\n              };\r\n            } else if (status === \"assigned\") {\r\n              // send notification to delivery boy\r\n              sendNotificationToDeliveryUser(order, dGuy, \"assigned\");\r\n              // change delivery boy status to \"assigned\"\r\n              let updatedOrder = {\r\n                ...order,\r\n                status: \"assigned\",\r\n              };\r\n              // all orders array\r\n              let allOrders = [...prevState.allOrders];\r\n              let allIndex = allOrders.findIndex((o) => o.id === order.id);\r\n              allOrders[allIndex] = updatedOrder;\r\n\r\n              // new Orders array\r\n              let preparingOrders = [...prevState.preparingOrders];\r\n              let prepareIndex = preparingOrders.findIndex(\r\n                (o) => o.id === order.id\r\n              );\r\n              // delete from newOrders and push into preparingOrders\r\n              preparingOrders.splice(prepareIndex, 1);\r\n              let onDeliveryOrders = [...prevState.onDeliveryOrders];\r\n              onDeliveryOrders.push(updatedOrder);\r\n              return {\r\n                ...prevState,\r\n                allOrders: allOrders,\r\n                preparingOrders: preparingOrders,\r\n                onDeliveryOrders: onDeliveryOrders,\r\n              };\r\n            }\r\n          });\r\n        } else {\r\n          alert(\"Order Not Updated, Try Again!!!\");\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const assignDeliveryUser = (order, user) => {\r\n    let data = {\r\n      ...order,\r\n      dBoyId: user.user_id,\r\n    };\r\n    // console.log(\"assignDeliveryUser\", data);\r\n    updateOrder(data, \"assigned\", user);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row headnav\">\r\n        <div className=\"toggle\">\r\n          <NavLink to=\"/home/dashboard/allorder\">All Orders</NavLink>\r\n        </div>\r\n        <div className=\"toggle\">\r\n          <NavLink to=\"/home/dashboard/neworder\">New Arrivals</NavLink>\r\n        </div>\r\n        <div className=\"toggle\">\r\n          <NavLink to=\"/home/dashboard/preparing\">Preparing</NavLink>\r\n        </div>\r\n        <div className=\"toggle\">\r\n          <NavLink to=\"/home/dashboard/ondeliver\">On Delivery</NavLink>\r\n        </div>\r\n        <div className=\"toggle\">\r\n          <NavLink to=\"/home/dashboard/delivered\">Delivered</NavLink>\r\n        </div>\r\n        <div className=\"toggle\">\r\n          <NavLink to=\"/home/dashboard/manual\">Manual</NavLink>\r\n        </div>\r\n        <div className=\"dropdown\">\r\n          <select\r\n            onChange={(e) => {\r\n              // console.log(e.target.value);\r\n              setType(e.target.value);\r\n            }}\r\n          >\r\n            <option value=\"food\">Food</option>\r\n            <option value=\"grocery\">Grocery</option>\r\n          </select>\r\n        </div>\r\n        {/* {authCtx.user !== null && (\r\n          <StockMaintainance\r\n            items={\r\n              type === \"food\" ? outOfStockItems.food : outOfStockItems.grocery\r\n            }\r\n            location={authCtx.user.location}\r\n            type={type}\r\n            removeHandler={removeHandler}\r\n            checkHandler={checkHandler}\r\n          />\r\n        )} */}\r\n      </div>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/home/dashboard/allorder\">\r\n            <OrderMaintain\r\n              orders={orders.allOrders}\r\n              updateOrderStatus={(order, status) => updateOrder(order, status)}\r\n              assignDeliveryUser={assignDeliveryUser}\r\n            />\r\n          </Route>\r\n          <Route path=\"/home/dashboard/neworder\">\r\n            <OrderMaintain\r\n              orders={orders.newOrders}\r\n              updateOrderStatus={(order, status) => {\r\n                updateOrderStatus(order, status);\r\n              }}\r\n            />\r\n          </Route>\r\n          <Route path=\"/home/dashboard/preparing\">\r\n            <OrderMaintain\r\n              orders={orders.preparingOrders}\r\n              assignDeliveryUser={assignDeliveryUser}\r\n            />\r\n          </Route>\r\n          <Route path=\"/home/dashboard/ondeliver\">\r\n            <OrderMaintain orders={orders.onDeliveryOrders} />\r\n          </Route>\r\n          <Route path=\"/home/dashboard/delivered\">\r\n            <OrderMaintain\r\n              orders={orders.deliveredOrders}\r\n              type={type}\r\n              location={authCtx.user !== null && authCtx.user.location}\r\n            />\r\n          </Route>\r\n          <Route path=\"/home/dashboard/manual\">\r\n            {authCtx.user !== null && (\r\n              <ManualBilling\r\n                removeOrder={removeOrder}\r\n                onChange={onChangeHandler}\r\n                items={items}\r\n                type={type}\r\n                setItems={(res) => setItems(res)}\r\n                ongoingOrders={\r\n                  type === \"food\" ? ongoingOrders.food : ongoingOrders.grocery\r\n                }\r\n                currentOrder={\r\n                  type === \"food\" ? currentOrder.food : currentOrder.grocery\r\n                }\r\n                generateBill={generateBill}\r\n                removeItem={removeItem}\r\n                location={authCtx.user.location}\r\n                setCurrentOrder={(order) => {\r\n                  // console.log(\"order\", ongoingOrders.food);\r\n                  if (type === \"food\") {\r\n                    setCurrentOrder((prevState) => {\r\n                      return {\r\n                        ...prevState,\r\n                        food: order,\r\n                      };\r\n                    });\r\n                  } else {\r\n                    setCurrentOrder((prevState) => {\r\n                      return {\r\n                        ...prevState,\r\n                        grocery: order,\r\n                      };\r\n                    });\r\n                  }\r\n                }}\r\n                createOrder={createOrder}\r\n              />\r\n            )}\r\n          </Route>\r\n        </Switch>\r\n        {/* <Switch>\r\n          <Route path=\"/home/dashboard/foodorder\">\r\n            <Orders type=\"food\" />\r\n          </Route>\r\n          <Route path=\"/home/dashboard/groceryorder\">\r\n            <Orders type=\"grocery\" />\r\n          </Route>\r\n        </Switch> */}\r\n        {/* <StockMaintainance /> */}\r\n      </div>\r\n      <div id=\"snackbar-container\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Food = () => {\r\n  return (\r\n    <section>\r\n      <div className=\"row fooditem\">\r\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img className=\"img-fluid\" src=\"/images/menu.png\" alt=\"addnew\" />\r\n            <p className=\"title\">Add New</p>\r\n            <Link to=\"/home/fooditems/addnew\" className=\"stretched-link\"></Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              src=\"/images/dish1.png\"\r\n              alt=\"breakfast\"\r\n            />\r\n            <p className=\"title\">Breakfast</p>\r\n            <Link\r\n              to=\"/home/fooditems/breakfast\"\r\n              className=\"stretched-link\"\r\n            ></Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img className=\"img-fluid\" src=\"/images/dish.png\" alt=\"lunch\" />\r\n            <p className=\"title\">Lunch</p>\r\n            <Link to=\"/home/fooditems/lunch\" className=\"stretched-link\"></Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img className=\"img-fluid\" src=\"/images/hot.png\" alt=\"dinner\" />\r\n            <p className=\"title\">Dinner</p>\r\n            <Link to=\"/home/fooditems/dinner\" className=\"stretched-link\"></Link>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              src=\"/images/roasted-chicken.png\"\r\n              alt=\"starters\"\r\n              width=\"200px\"\r\n            />\r\n            <p className=\"title\">Starters</p>\r\n            <Link\r\n              to=\"/home/fooditems/starters\"\r\n              className=\"stretched-link\"\r\n            ></Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              src=\"/images/canapes.png\"\r\n              alt=\"desserts\"\r\n            />\r\n            <p className=\"title\">Desserts</p>\r\n            <Link\r\n              to=\"/home/fooditems/desserts\"\r\n              className=\"stretched-link\"\r\n            ></Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              src=\"/images/fast-food1.png\"\r\n              // src=\"/loaders/24064-food-squeeze-with-burger-and-hot-dog.gif\"\r\n              alt=\"bigdeal\"\r\n            />\r\n            <p className=\"title\">Big Deal Offers</p>\r\n            <Link\r\n              to=\"/home/fooditems/bigdeal\"\r\n              className=\"stretched-link\"\r\n            ></Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              src=\"/images/drink.png\"\r\n              alt=\"freshjuice\"\r\n            />\r\n            <p className=\"title\">Fresh Juice</p>\r\n            <Link to=\"/home/fooditems/juice\" className=\"stretched-link\"></Link>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Food;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\n\r\nconst LineChart = (props) => {\r\n  // const [labels, setLabels] = useState(null);\r\n  // const [data, setData] = useState(null);\r\n  // const [config, setConfig] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let labels = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\"\r\n    ];\r\n    let stat = props.stat;\r\n    if (props.filter.type === \"month\") {\r\n      // labels = [\"week1\", \"week2\", \"week3\", \"week4\"];\r\n      labels = [];\r\n      for (let i = 0; i < stat.onlineStat.length; i++) {\r\n        if (i < 9) {\r\n          labels.push(\"0\" + (i + 1));\r\n        } else {\r\n          labels.push(i + 1);\r\n        }\r\n      }\r\n    } else if (props.filter.type === \"day\") {\r\n      labels = [\r\n        \"6-8am\",\r\n        \"8-10am\",\r\n        \"10-11.50am\",\r\n        \"12-2pm\",\r\n        \"2-4pm\",\r\n        \"4-6pm\",\r\n        \"6-8pm\",\r\n        \"8-10pm\",\r\n        \"10-11.59pm\",\r\n        \"12-6am\"\r\n      ];\r\n    }\r\n    let data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: \"Online\",\r\n          data: stat.onlineStat,\r\n          fill: false,\r\n          borderColor: \"rgb(75, 192, 192)\",\r\n          tension: 0.1\r\n        },\r\n        {\r\n          label: \"DineIn\",\r\n          data: stat.dineInStat,\r\n          fill: false,\r\n          borderColor: \"tomato\",\r\n          tension: 0.1\r\n        }\r\n      ]\r\n    };\r\n    // setConfig();\r\n    let config = {\r\n      type: \"line\",\r\n      data: data,\r\n      options: {}\r\n    };\r\n\r\n    const chart = new Chart(document.getElementById(\"lineChart\"), config);\r\n    // when component unmounts\r\n    return () => {\r\n      chart.destroy();\r\n    };\r\n  }, [props.stat]);\r\n\r\n  // useEffect(() => {\r\n  //   const chart = new Chart(document.getElementById(\"lineChart\"), config);\r\n  //   // when component unmounts\r\n  //   return () => {\r\n  //     chart.destroy();\r\n  //   };\r\n  // }, []);\r\n\r\n  return (\r\n    <div className=\"lineChart\">\r\n      <h1>Orders - {props.filter.value}</h1>\r\n\r\n      <br />\r\n\r\n      <canvas id=\"lineChart\"></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useEffect } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\n\r\nconst PieChart = (props) => {\r\n  useEffect(() => {\r\n    const labels = [\"Online\", \"Dine-In\"];\r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: \"Revenue\",\r\n          data: [props.stat.onlineRevenue, props.stat.dineInRevenue],\r\n          backgroundColor: [\r\n            \"rgb(255, 99, 132)\",\r\n            \"rgb(54, 162, 235)\",\r\n            \"rgb(255, 205, 86)\"\r\n          ],\r\n          hoverOffset: 4\r\n        }\r\n      ]\r\n    };\r\n\r\n    const config = {\r\n      type: \"pie\",\r\n      data: data,\r\n      options: {}\r\n    };\r\n    const chart = new Chart(document.getElementById(\"pieChart\"), config);\r\n    // when component unmounts\r\n    return () => {\r\n      chart.destroy();\r\n    };\r\n  }, [props.stat]);\r\n\r\n  return (\r\n    <div className=\"piechart\">\r\n      <h1>Total Revenue</h1>\r\n      <br />\r\n      <canvas id=\"pieChart\"></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./Tables.css\";\r\n\r\nconst Tables = (props) => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setOrders(props.orders);\r\n  }, [props.orders]);\r\n\r\n  let ui = null;\r\n  if (orders.length === 0 || orders === \"empty\") {\r\n    ui = (\r\n      <tr>\r\n        <td style={{ textAlign: \"center\" }}>No Orders</td>\r\n      </tr>\r\n    );\r\n  } else {\r\n    ui = orders.map((order) => {\r\n      return (\r\n        <tr key={order.orderId}>\r\n          <td>{order.orderId}</td>\r\n          <td>\r\n            <p style={{ textTransform: \"capitalize\" }}>\r\n              {order.userDetails.userName}\r\n            </p>\r\n            <p>{order.userDetails.phone}</p>\r\n          </td>\r\n          <td>{order.userDetails.userAddress}</td>\r\n          <td>\r\n            {order.order_items.map((item) => {\r\n              return (\r\n                <p key={item.itemId}>\r\n                  {item.itemName} - {item.itemSize} - ₹{item.itemPrice}\r\n                </p>\r\n              );\r\n            })}\r\n          </td>\r\n          <td>₹{order.totalPrice}</td>\r\n          <td style={{ textTransform: \"capitalize\" }}>{order.status}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table table-bordered table-hover center\">\r\n        <thead>\r\n          <tr>\r\n            <th>Order Id</th>\r\n            <th>User</th>\r\n            <th>Address</th>\r\n            <th>Items Purchased</th>\r\n            <th>Amount</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{ui}</tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n","import React from \"react\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nexport const ExportToExcel = ({ apiData, fileName }) => {\r\n  const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n\r\n  const exportToCSV = (apiData, fileName) => {\r\n    const ws = XLSX.utils.json_to_sheet(apiData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary\"\r\n      onClick={(e) => exportToCSV(apiData, fileName)}\r\n    >\r\n      Export for {fileName}\r\n    </button>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { getMonthOrders, getOrders, getYearOrders } from \"../../api/OrderDB\";\r\nimport LineChart from \"../../ui/Charts/LineChart\";\r\nimport PieChart from \"../../ui/Charts/PieChart\";\r\nimport Tables from \"../../ui/Tables/Tables\";\r\nimport AuthContext from \"../../context/auth-context\";\r\nimport { ExportToExcel } from \"../../helpers/ExportToExcel\";\r\n\r\nconst Orders = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const [filter, setFilter] = useState({\r\n    type: \"\",\r\n    value: \"\",\r\n    itemType: \"food\",\r\n  });\r\n  const [orders, setOrders] = useState(null);\r\n  const [stat, setStat] = useState(null);\r\n  const [showTable, setShowTable] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authCtx.user !== null) {\r\n      let date = new Date();\r\n      setFilter({\r\n        type: \"day\",\r\n        value: date.toISOString().split(\"T\")[0],\r\n      });\r\n      let day = date.getDate();\r\n      if (day < 10) {\r\n        day = \"0\" + day;\r\n      }\r\n      let month = date.getMonth() + 1;\r\n      if (month < 10) {\r\n        month = \"0\" + month;\r\n      }\r\n      let year = date.getFullYear();\r\n      date = day + \".\" + month + \".\" + year;\r\n      // document.getElementById(\"date\").valueAsDate = date;\r\n      getOrders(date, \"food\", authCtx.user.location, (orders, stat) => {\r\n        setShowTable(true);\r\n        setOrders(orders);\r\n        setStat(stat);\r\n      });\r\n    }\r\n  }, [authCtx.user]);\r\n\r\n  const onChangeHandler = (e) => {\r\n    // console.log(\"value\", e.target.value);\r\n    if (e.target.name === \"filter\") {\r\n      setFilter((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          type: e.target.value,\r\n        };\r\n      });\r\n    } else if (e.target.name === \"itemType\") {\r\n      setFilter((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          itemType: e.target.value,\r\n        };\r\n      });\r\n    } else {\r\n      setFilter((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          value: e.target.value,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const onCheckHandler = () => {\r\n    console.log(\"check\", filter);\r\n    let type = filter.itemType;\r\n    let location = authCtx.user.location;\r\n    let emptyData = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    if (filter.type === \"month\") {\r\n      getMonthOrders(type, location, filter, (orders, stat) => {\r\n        // console.log(\"orders-stat-month\", orders, stat);\r\n        setShowTable(false);\r\n        setOrders(orders);\r\n        setStat(stat);\r\n      });\r\n    } else if (filter.type === \"year\") {\r\n      getYearOrders(type, location, filter, (orders, stat) => {\r\n        // console.log(\"orders-stat-year\", orders, stat);\r\n        setShowTable(false);\r\n        setOrders(orders);\r\n        if (stat === undefined) {\r\n          setStat(emptyData);\r\n        } else {\r\n          setStat(stat);\r\n        }\r\n      });\r\n    } else if (filter.type === \"day\") {\r\n      let date = filter.value.split(\"-\");\r\n      let year = date[0];\r\n      let month = date[1];\r\n      let day = date[2];\r\n      date = day + \".\" + month + \".\" + year;\r\n      // console.log(date);\r\n      // console.log(\"date\", date);\r\n      getOrders(date, type, authCtx.user.location, (orders, stat) => {\r\n        setShowTable(true);\r\n        setOrders(orders);\r\n        setStat(stat);\r\n      });\r\n    }\r\n  };\r\n\r\n  // const generateExcel = () => {};\r\n\r\n  let ui = null;\r\n  if (filter.type === \"year\") {\r\n    ui = (\r\n      <input\r\n        type=\"number\"\r\n        min=\"2018\"\r\n        max=\"\"\r\n        id=\"year\"\r\n        name=\"year\"\r\n        onChange={onChangeHandler}\r\n        value={filter.value}\r\n        autoComplete=\"off\"\r\n      />\r\n    );\r\n  } else if (filter.type === \"month\") {\r\n    ui = (\r\n      <input\r\n        type=\"month\"\r\n        id=\"month\"\r\n        name=\"month\"\r\n        onChange={onChangeHandler}\r\n        value={filter.value}\r\n      />\r\n    );\r\n  } else {\r\n    ui = (\r\n      <input\r\n        type=\"date\"\r\n        id=\"date\"\r\n        name=\"date\"\r\n        onChange={onChangeHandler}\r\n        value={filter.value}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row stats\">\r\n        <div className=\"col-6 line\">\r\n          {stat !== null && (\r\n            <LineChart labelName=\"test\" filter={filter} stat={stat} />\r\n          )}\r\n        </div>\r\n        <div className=\"col-4 pie\">\r\n          {stat !== null && <PieChart filter={filter} stat={stat} />}\r\n        </div>\r\n        <div className=\"col-2 calender\">\r\n          <div className=\"dropdown\">\r\n            <select\r\n              name=\"itemType\"\r\n              onChange={onChangeHandler}\r\n              value={filter.itemType}\r\n            >\r\n              <option value=\"food\">Food</option>\r\n              <option value=\"grocery\">Grocery</option>\r\n            </select>\r\n          </div>\r\n          <form>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"filter\"\r\n              id=\"day\"\r\n              value=\"day\"\r\n              checked={filter.type === \"day\" ? true : false}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <label htmlFor=\"day\">Day</label>\r\n            <br />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"filter\"\r\n              id=\"month\"\r\n              value=\"month\"\r\n              checked={filter.type === \"month\" ? true : false}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <label htmlFor=\"month\">Month</label>\r\n            <br />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"filter\"\r\n              id=\"year\"\r\n              value=\"year\"\r\n              checked={filter.type === \"year\" ? true : false}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <label htmlFor=\"year\">Year</label>\r\n            <br />\r\n            {ui}\r\n            <br />\r\n            <br />\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={onCheckHandler}\r\n            >\r\n              Check\r\n            </button>\r\n            {/* <button type=\"button\" className=\"btn btn-primary\">\r\n              Clear\r\n            </button> */}\r\n          </form>\r\n        </div>\r\n        <div className=\"col-12 export\">\r\n          {showTable ? (\r\n            orders !== null && (\r\n              <>\r\n                {orders.length === 0 || orders === \"empty\" ? (\r\n                  <h1>No Orders To Export</h1>\r\n                ) : (\r\n                  <div className=\"export-\">\r\n                    <ExportToExcel apiData={orders} fileName={filter.value} />\r\n                    <Tables orders={orders} />\r\n                  </div>\r\n                )}\r\n                {/* <ExportToExcel apiData={orders} fileName={filter.value} /> */}\r\n              </>\r\n            )\r\n          ) : (\r\n            <div>\r\n              {/* <button\r\n                className=\"btn btn-primary\"\r\n                type=\"button\"\r\n                onClick={generateExcel}\r\n              >\r\n                Generate Excel : {filter.value}\r\n              </button> */}\r\n              {orders !== null &&\r\n              (orders.length === 0 || orders === \"empty\") ? (\r\n                <h1>No Orders To Export</h1>\r\n              ) : (\r\n                <ExportToExcel apiData={orders} fileName={filter.value} />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n\r\n// useEffect(() => {\r\n// $(\"#yearPicker\").datetimepicker({\r\n//   format: \"YYYY\",\r\n//   viewMode: \"years\"\r\n// });\r\n// $(\".date-picker-year\").datepicker({\r\n//   changeYear: true,\r\n//   showButtonPanel: true,\r\n//   dateFormat: \"yy\",\r\n//   onClose: function (dateText, inst) {\r\n//     var year = $(\"#ui-datepicker-div .ui-datepicker-year :selected\").val();\r\n//     $(this).datepicker(\"setDate\", new Date(year, 1));\r\n//   }\r\n// });\r\n// $(\".date-picker-year\").focus(function () {\r\n//   $(\".ui-datepicker-month\").hide();\r\n// });\r\n// }, []);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./card.css\";\r\n\r\nconst Card = (props) => {\r\n  useEffect(() => {\r\n    let item = props.item;\r\n    let branch = item.branch[props.location];\r\n    console.log(\"item\", item, branch, props.location);\r\n  }, []);\r\n  let ui = null;\r\n  // console.log(\r\n  //   \"item-undefined\",\r\n  //   props.item[props.location][\"price\"][\"currentPrice\"]\r\n  // );\r\n  if (props.item.branch[props.location][\"current_price\"] !== undefined) {\r\n    ui = props.item.branch[props.location][\"current_price\"];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div class=\"col-lg-3 col-md-4 col-sm-3\">\r\n        <div class=\"card\">\r\n          <div class=\"overlay\">{props.item.Type}</div>\r\n          <img src={props.item.image} alt={props.item.Name} />\r\n          <div class=\"card-body\">\r\n            <h3 class=\"card-title\">\r\n              {props.item.Name}\r\n              {/* {props.item.Name}<span>({props.item.Name})</span> */}\r\n            </h3>\r\n            <div\r\n              class=\"edit-option\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => props.updateItem(props.item)}\r\n            >\r\n              <i class=\"fa fa-pencil-square-o\"></i>\r\n            </div>\r\n            {/* <div\r\n              class=\"trash-option\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => props.deleteItem(props.item)}\r\n            >\r\n              <i class=\"fa fa-trash\"></i>\r\n            </div> */}\r\n            <p>Desc: {props.item.description}</p>\r\n            <p>\r\n              Style:&ensp;\r\n              <b style={{ fontSize: \"18px\", textTransform: \"uppercase\" }}>\r\n                {props.item.style}\r\n              </b>\r\n            </p>\r\n            <p class=\"time\" style={{ textTransform: \"capitalize\" }}>\r\n              {/* {props.item.category} */}\r\n              {props.item.Type}\r\n            </p>\r\n            {/* <p class=\"time\">Dinner</p> */}\r\n            <div class=\"row quantity\">\r\n              {/* <p class=\"quantity\">Qty Per Unit:&ensp;</p>\r\n              <b>{props.item[props.location][\"quantityPerUnit\"]}</b>&ensp;&emsp; */}\r\n              <p class=\"quantity\">Min Unit:&ensp;</p>\r\n              <b>{props.item.branch[props.location][\"unit\"]}</b>\r\n            </div>\r\n            {/* <form></form> */}\r\n\r\n            <hr />\r\n            {/* <p class=\"food-rating\">\r\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\r\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\r\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\r\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\r\n              <span class=\"fa fa-star\" aria-hidden=\"true\"></span>\r\n            </p> */}\r\n\r\n            <p class=\"price \">\r\n              <i class=\" fa fa-inr\" aria-hidden=\"true\"></i>\r\n              {/* {props.item[props.location][\"price\"][\"currentPrice\"] === -1\r\n                ? props.item[props.location][\"price\"][\"cquarterPrice\"] !== -1\r\n                : props.item[props.location][\"price\"][\"currentPrice\"]} */}\r\n              {ui}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../../reusable/Card/Card\";\r\n\r\nconst Food = () => {\r\n  return (\r\n    <section>\r\n      <div className=\"row fooditem\">\r\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              src=\"/images/supermarket.png\"\r\n              alt=\"addnew\"\r\n            />\r\n            <p className=\"title\">Add New Item</p>\r\n            <Link\r\n              to=\"/home/grocery/addnewitem\"\r\n              className=\"stretched-link\"\r\n            ></Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img className=\"img-fluid\" src=\"/images/rice1.png\" alt=\"addnew\" />\r\n            <p className=\"title\">Rice</p>\r\n            <Link to=\"/home/grocery/rice\" className=\"stretched-link\"></Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img className=\"img-fluid\" src=\"/images/harvest.png\" alt=\"addnew\" />\r\n            <p className=\"title\">Fruits/Vegetables</p>\r\n            <Link\r\n              to=\"/home/grocery/fruitsvegs\"\r\n              className=\"stretched-link\"\r\n            ></Link>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              src=\"/images/cannedfood.png\"\r\n              alt=\"addnew\"\r\n            />\r\n            <p className=\"title\">Canned goods</p>\r\n            <Link\r\n              to=\"/home/grocery/cannedgoods\"\r\n              className=\"stretched-link\"\r\n            ></Link>\r\n          </div>\r\n        </div> */}\r\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              src=\"/images/personalcare.png\"\r\n              alt=\"addnew\"\r\n            />\r\n            <p className=\"title\">Soap's</p>\r\n            <Link to=\"/home/grocery/soaps\" className=\"stretched-link\"></Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              src=\"/images/softdrink.png\"\r\n              alt=\"addnew\"\r\n            />\r\n            <p className=\"title\">\r\n              SummerDrinks/\r\n              <br />\r\n              Beverages\r\n            </p>\r\n            <Link\r\n              to=\"/home/grocery/summer-drinks-beverages\"\r\n              className=\"stretched-link\"\r\n            ></Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              src=\"/images/personalcare.png\"\r\n              alt=\"addnew\"\r\n            />\r\n            <p className=\"title\">Pharmacy</p>\r\n            <Link to=\"/home/grocery/pharmacy\" className=\"stretched-link\"></Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img className=\"img-fluid\" src=\"/images/rice1.png\" alt=\"addnew\" />\r\n            <p className=\"title\">Organics</p>\r\n            <Link to=\"/home/grocery/organics\" className=\"stretched-link\"></Link>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              src=\"/images/basket.png\"\r\n              alt=\"breakfast\"\r\n            />\r\n            <p className=\"title\">Cleaners</p>\r\n            <Link to=\"/home/grocery/cleaners\" className=\"stretched-link\"></Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-md-3 col-lg-3\">\r\n          <div className=\"cards\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              src=\"/images/grocerycart.png\"\r\n              alt=\"lunch\"\r\n            />\r\n            <p className=\"title\">Others</p>\r\n            <Link to=\"/home/grocery/others\" className=\"stretched-link\"></Link>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Food;\r\n","const PreviewCard = (props) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"overlay\">\r\n        {props.item.foodType === \"\" ? null : props.item.foodType}\r\n      </div>\r\n      <div className=\"preview\">preview</div>\r\n      <img\r\n        className={props.item.img.url !== \"\" ? \"\" : \"card-img\"}\r\n        id=\"cardImg\"\r\n        src={\r\n          props.item.img.url === \"\" ? \"/images/tray.png\" : props.item.img.url\r\n        }\r\n        alt=\"item name\"\r\n      />\r\n      {/* <img\r\n        className=\"card-img\"\r\n        id=\"cardImg\"\r\n        src=\"/images/tray.png\"\r\n        alt=\"item name\"\r\n      /> */}\r\n      <div className=\"card-body\">\r\n        <p className=\"item-name\">\r\n          {props.item.name === \"\" ? \"Item Name\" : props.item.name}&nbsp;\r\n          <span>\r\n            ({props.item.altName === \"\" ? \"alternative\" : props.item.altName})\r\n          </span>\r\n        </p>\r\n        <p className=\"item-desc\">\r\n          &ensp;\r\n          {props.item.desc === \"\"\r\n            ? \"Contains a small description of the item\"\r\n            : props.item.desc}\r\n        </p>\r\n        <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\r\n          {props.item.category === \"\" ? null : props.item.category}\r\n        </p>\r\n        {/* <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\r\n          {props.item.foodType === \"\" ? null : props.item.foodType}\r\n        </p> */}\r\n        <p className=\"item-style\">\r\n          Style:&nbsp;\r\n          <b style={{ textTransform: \"uppercase\" }}>\r\n            {props.item.style === \"\" ? \"\" : props.item.style}\r\n          </b>\r\n        </p>\r\n        <p className=\"item-quantity\">\r\n          Quantity:&nbsp;\r\n          <b>{props.item.minimumUnit}</b>\r\n        </p>\r\n      </div>\r\n      <div className=\"card-footer\">\r\n        {/* <p className=\"ratings\">\r\n          <span className=\"fas fa-star\"></span>\r\n          <span className=\"fas fa-star\"></span>\r\n          <span className=\"fas fa-star\"></span>\r\n          <span className=\"fas fa-star\"></span>\r\n          <span className=\"fas fa-star\"></span>\r\n        </p> */}\r\n        <p className=\"price\">\r\n          <i className=\"fas fa-rupee\"></i>&nbsp;\r\n          {props.price === \"normalPrice\"\r\n            ? props.item.currentPrice\r\n            : props.item.cfullPrice}\r\n        </p>\r\n        <p>\r\n          Discount Percentage:{\" \"}\r\n          {props.price === \"normalPrice\"\r\n            ? 100 -\r\n              (props.item.currentPrice / props.item.actualPrice) * 100 +\r\n              \"%\"\r\n            : 100 - (props.item.cfullPrice / props.item.fullPrice) * 100 + \"%\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewCard;\r\n","import React from \"react\";\r\nimport PreviewCard from \"./PreviewCard\";\r\n\r\nconst AddNewForm = (props) => {\r\n  let ui = null;\r\n  if (props.price !== null) {\r\n    if (props.price === \"quantityPrice\") {\r\n      ui = (\r\n        <div className=\"col-12 optional\">\r\n          <p>\r\n            Pick the Quantity\r\n            {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\r\n          </p>\r\n          <div className=\"single-row\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"quarter\"\r\n              name=\"quantity\"\r\n              value=\"quarter\"\r\n              onChange={props.onChangeHandler}\r\n            />\r\n            <label htmlFor=\"quarter\" className=\"label\">\r\n              Quarter\r\n            </label>\r\n            <label htmlFor=\"quarterPrice\" className=\"price\">\r\n              Actual Price\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"quarterPrice\"\r\n              name=\"quarterPrice\"\r\n              min=\"0\"\r\n              onChange={props.onChangeHandler}\r\n              value={props.item.quarterPrice}\r\n            />\r\n            <label htmlFor=\"cquaterPrice\" className=\"price\">\r\n              Current Price\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"cquarterPrice\"\r\n              name=\"cquarterPrice\"\r\n              min=\"0\"\r\n              onChange={props.onChangeHandler}\r\n              value={props.item.cquarterPrice}\r\n            />\r\n          </div>\r\n          <div className=\"single-row\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"half\"\r\n              name=\"quantity\"\r\n              value=\"half\"\r\n              onChange={props.onChangeHandler}\r\n            />\r\n            <label htmlFor=\"half\" className=\"label\">\r\n              Half\r\n            </label>\r\n            <label htmlFor=\"halfPrice\" className=\"price\">\r\n              Actual Price\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              id=\"halfPrice\"\r\n              name=\"halfPrice\"\r\n              min=\"0\"\r\n              onChange={props.onChangeHandler}\r\n              value={props.item.halfPrice}\r\n            />\r\n            <label htmlFor=\"chalfPrice\" className=\"price\">\r\n              Current Price\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              id=\"chalfPrice\"\r\n              name=\"chalfPrice\"\r\n              min=\"0\"\r\n              onChange={props.onChangeHandler}\r\n              value={props.item.chalfPrice}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"single-row\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"full\"\r\n              name=\"quantity\"\r\n              value=\"full\"\r\n              onChange={props.onChangeHandler}\r\n            />\r\n            <label htmlFor=\"full\" className=\"label\">\r\n              Full\r\n            </label>\r\n            <label htmlFor=\"fullPrice\" className=\"price\">\r\n              Actual Price\r\n            </label>\r\n\r\n            <input\r\n              type=\"number\"\r\n              id=\"fullPrice\"\r\n              name=\"fullPrice\"\r\n              min=\"0\"\r\n              onChange={props.onChangeHandler}\r\n              value={props.item.fullPrice}\r\n            />\r\n            <label htmlFor=\"cfullPrice\" className=\"price\">\r\n              Current Price\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"cfullPrice\"\r\n              name=\"cfullPrice\"\r\n              min=\"0\"\r\n              onChange={props.onChangeHandler}\r\n              value={props.item.cfullPrice}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (props.price === \"normalPrice\") {\r\n      ui = (\r\n        <div className=\"col-12 price\">\r\n          {/* <p>Actual Price</p>\r\n          <i className=\"fas fa-rupee\"></i>\r\n          <input\r\n            type=\"number\"\r\n            id=\"actualPrice\"\r\n            name=\"actualPrice\"\r\n            style={{ marginRight: \"15px\" }}\r\n            min=\"0\"\r\n            onChange={props.onChangeHandler}\r\n            value={props.item.actualPrice}\r\n          /> */}\r\n          <p>Current Price</p>\r\n          <i className=\"fas fa-rupee\"></i>\r\n          <input\r\n            type=\"number\"\r\n            id=\"currentPrice\"\r\n            name=\"currentPrice\"\r\n            min=\"0\"\r\n            onChange={props.onChangeHandler}\r\n            value={props.item.currentPrice}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={props.draftHandler}>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card-data\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-5\">\r\n                <div className=\"inner-row\">\r\n                  <label htmlFor=\"name\">Enter Product Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    onChange={props.onChangeHandler}\r\n                    value={props.item.name}\r\n                    required\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"inner-row\">\r\n                  <label htmlFor=\"productId\">\r\n                    Enter Product Id\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"productId\"\r\n                    name=\"productId\"\r\n                    onChange={props.onChangeHandler}\r\n                    value={props.item.productId}\r\n                    required\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"inner-row\">\r\n                  <label htmlFor=\"desc\">Description</label>\r\n                  <textarea\r\n                    id=\"desc\"\r\n                    name=\"desc\"\r\n                    onChange={props.onChangeHandler}\r\n                    value={props.item.desc}\r\n                    required\r\n                    autoComplete=\"off\"\r\n                  ></textarea>\r\n                </div>\r\n\r\n                <div className=\"inner-row\">\r\n                  <label htmlFor=\"img\">Upload the image</label>\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"img\"\r\n                    name=\"img\"\r\n                    onChange={props.onChangeHandler}\r\n                    required\r\n                  />\r\n                  <small>\r\n                    The preview of the image can be seen in the card\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-7\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-4 check\">\r\n                    <p>Pick Category</p>\r\n                    <div className=\"single\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        id=\"BreakFast\"\r\n                        value=\"BreakFast\"\r\n                        name=\"category\"\r\n                        onClick={props.onChangeHandler}\r\n                      />\r\n                      <label htmlFor=\"BreakFast\">BreakFast</label>\r\n                    </div>\r\n                    <div className=\"single\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        id=\"Lunch\"\r\n                        value=\"Lunch\"\r\n                        name=\"category\"\r\n                        onClick={props.onChangeHandler}\r\n                      />\r\n                      <label htmlFor=\"Lunch\">Lunch</label>\r\n                    </div>\r\n                    <div className=\"single\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        id=\"Dinner\"\r\n                        value=\"Dinner\"\r\n                        name=\"category\"\r\n                        onClick={props.onChangeHandler}\r\n                      />\r\n                      <label htmlFor=\"dinner\">Dinner</label>\r\n                    </div>\r\n                  </div>\r\n                  {/* <div className=\"col-md-4 veg\">\r\n                    <p>Food Type</p>\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"nonveg\"\r\n                      name=\"foodType\"\r\n                      value=\"non-veg\"\r\n                      onChange={props.onChangeHandler}\r\n                    />\r\n                    <label htmlFor=\"nonveg\">Non-Veg</label>\r\n\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"veg\"\r\n                      name=\"foodType\"\r\n                      value=\"veg\"\r\n                      onChange={props.onChangeHandler}\r\n                    />\r\n                    <label htmlFor=\"veg\">Veg</label>\r\n                  </div> */}\r\n                  {/* <div className=\"col-md-4 style\">\r\n                    <p>Pick Style</p>\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"southindian\"\r\n                      name=\"style\"\r\n                      value=\"southindian\"\r\n                      onChange={props.onChangeHandler}\r\n                    />\r\n                    <label htmlFor=\"southindian\">South Indian</label>\r\n\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"chinese\"\r\n                      name=\"style\"\r\n                      value=\"chinese\"\r\n                      onChange={props.onChangeHandler}\r\n                    />\r\n                    <label htmlFor=\"chinese\">Chinese</label>\r\n                  </div> */}\r\n                  <div className=\"col-md-7\">\r\n                    <div className=\"unit\">\r\n                      <label htmlFor=\"actualUnit\">\r\n                        Total Unit:\r\n                        <br />\r\n                        {/* <small>(Optional)</small> */}\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        id=\"actualUnit\"\r\n                        name=\"actualUnit\"\r\n                        min=\"1\"\r\n                        onChange={props.onChangeHandler}\r\n                        value={props.item.actualUnit}\r\n                      />\r\n                    </div>\r\n                    {/* <div className=\"quantity\">\r\n                      <label htmlFor=\"unit\">Enter Minimum Unit:</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        id=\"unit\"\r\n                        name=\"minimumUnit\"\r\n                        min=\"0\"\r\n                        onChange={props.onChangeHandler}\r\n                        value={props.item.minimumUnit}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"unit\">\r\n                      <label htmlFor=\"quantity\">\r\n                        Quantity Per Unit:\r\n                        <br />\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        id=\"quantity\"\r\n                        name=\"quantityPerUnit\"\r\n                        min=\"1\"\r\n                        onChange={props.onChangeHandler}\r\n                        value={props.item.quantityPerUnit}\r\n                        required\r\n                      />\r\n                    </div> */}\r\n                  </div>\r\n                  <div className=\"col-md-5 others\">\r\n                    <div className=\"single\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"dealOfTheDay\"\r\n                        name=\"dealOfTheDay\"\r\n                        onChange={props.onChangeHandler}\r\n                      />\r\n                      <label htmlFor=\"dealOfTheDay\">Deal of the day</label>\r\n                    </div>\r\n                    {/* <div className=\"single\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"onSale\"\r\n                        name=\"onSale\"\r\n                        onChange={props.onChangeHandler}\r\n                      />\r\n                      <label htmlFor=\"onSale\">On Sale</label>\r\n                    </div> */}\r\n                    <div className=\"single\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"isProductAvailable\"\r\n                        name=\"isProductAvailable\"\r\n                        onChange={props.onChangeHandler}\r\n                      />\r\n                      <label htmlFor=\"isProductAvailable\">\r\n                        Product Available\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"single\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"bestSeller\"\r\n                        name=\"bestSeller\"\r\n                        onChange={props.onChangeHandler}\r\n                      />\r\n                      <label htmlFor=\"bestSeller\">Best Seller</label>\r\n                      {/* <label htmlFor=\"top\">Top Product</label> */}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"normalPrice\"\r\n                      name=\"price\"\r\n                      value=\"normalPrice\"\r\n                      onChange={props.onChangeHandler}\r\n                    />\r\n                    <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\r\n                  </div>\r\n                  {/* <div className=\"col-6\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"quantityPrice\"\r\n                      name=\"price\"\r\n                      value=\"quantityPrice\"\r\n                      onChange={props.onChangeHandler}\r\n                    />\r\n                    <label htmlFor=\"quantityPrice\">\r\n                      &nbsp;Quantity Based Price\r\n                    </label>\r\n                  </div> */}\r\n                  {ui}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <PreviewCard item={props.item} price={props.price} />\r\n          <div className=\"button\">\r\n            <button type=\"submit\" className=\"submit-btn\">\r\n              Save\r\n            </button>\r\n            <button type=\"button\" className=\"submit-btn\">\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"reset\"\r\n              className=\"submit-btn\"\r\n              onClick={props.clearHandler}\r\n              // onClick={this.form.reset()}\r\n            >\r\n              Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddNewForm;\r\n","import React from \"react\";\r\n// import { propTypes } from \"react-bootstrap/esm/Image\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst DeleteConfirmModal = (props) => {\r\n  return (\r\n    <Modal show={props.showModal} onHide={props.handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{props.title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{props.body}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" onClick={props.handleClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DeleteConfirmModal;\r\n","import React, { useState, useContext } from \"react\";\r\nimport AddNewForm from \"./AddNewForm\";\r\nimport $ from \"jquery\";\r\nimport { addItem } from \"../../../api/ItemDB\";\r\nimport AlertModal from \"../../../reusable/Modals/AlertModal\";\r\nimport AuthContext from \"../../../context/auth-context\";\r\nconst AddNew = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const [item, setItem] = useState({\r\n    id: \"\",\r\n    productId: \"\", // we generate it\r\n    name: \"\",\r\n    img: {\r\n      file: null,\r\n      url: \"\",\r\n    },\r\n    altName: \"\",\r\n    desc: \"\",\r\n    category: \"\", // breakfase, lunch, dinner\r\n    style: \"\", // southindian, northindian\r\n    foodType: \"\", // nonveg, veg\r\n    offer: 0, // actual price - offer price = current price\r\n    bestSeller: false,\r\n    currencyCode: 356, // 356 - INR\r\n    dealOfTheDay: false,\r\n    onSale: false,\r\n    minimumUnit: 0,\r\n    actualUnit: 0,\r\n    quantityPerUnit: 1,\r\n    isProductAvailable: false,\r\n    quaterPrice: 0,\r\n    halfPrice: 0,\r\n    fullPrice: 0,\r\n    cquaterPrice: 0,\r\n    chalfPrice: 0,\r\n    cfullPrice: 0,\r\n    actualPrice: 0,\r\n    currentPrice: 0, // doubt\r\n    // categories: [\"dhosa\"]\r\n    // foodAvailable: [\r\n    //   {\r\n    //     branch: \"vellore\",\r\n    //     minimumUnit: 0,\r\n    //     quantityPerUnit: 0,\r\n    //     isProductAvailable: false\r\n    //   }\r\n    // ],\r\n  });\r\n  const [price, setPrice] = useState(null);\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const onChangeHandler = (event) => {\r\n    console.log(\"event.name\", event.target.name, event.target.value);\r\n\r\n    // setChecked((prevState) => !prevState);\r\n\r\n    let value = event.target.value;\r\n    let ename = event.target.name;\r\n\r\n    if (ename === \"img\") {\r\n      value = event.target.files[0];\r\n      // console.log(\"url\", URL.createObjectURL(value));\r\n      setItem((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          img: {\r\n            file: value,\r\n            url: URL.createObjectURL(value),\r\n          },\r\n        };\r\n      });\r\n    } else if (\r\n      ename === \"dealOfTheDay\" ||\r\n      ename === \"onSale\" ||\r\n      ename === \"isProductAvailable\" ||\r\n      ename === \"bestSeller\"\r\n    ) {\r\n      setItem((prevState) => {\r\n        value = !prevState[event.target.name];\r\n        // console.log(event.target.name, value);\r\n        return {\r\n          ...prevState,\r\n          [event.target.name]: value,\r\n        };\r\n      });\r\n    } else if (ename === \"price\") {\r\n      setPrice(value);\r\n    } else {\r\n      setItem((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          [event.target.name]: value,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const clearHandler = () => {\r\n    document.getElementById(\"img\").value = \"\";\r\n    $(\":checkbox\").prop(\"checked\", false);\r\n    $('input[name=\"category\"]').prop(\"checked\", false);\r\n    $('input[name=\"foodType\"]').prop(\"checked\", false);\r\n    $('input[name=\"style\"]').prop(\"checked\", false);\r\n    $('input[name=\"price\"]').prop(\"checked\", false);\r\n    setPrice(null);\r\n    setItem({\r\n      id: \"\",\r\n      productId: \"\", // we generate it\r\n      name: \"\",\r\n      img: {\r\n        file: null,\r\n        url: \"\",\r\n      },\r\n      altName: \"\",\r\n      desc: \"\",\r\n      category: \"\", // breakfase, lunch, dinner\r\n      style: \"\", // southindian, northindian\r\n      foodType: \"\", // nonveg, veg\r\n      offer: 0, // actual price - offer price = current price\r\n      bestSeller: false,\r\n      currencyCode: 356, // 356 - INR\r\n      dealOfTheDay: false,\r\n      onSale: false,\r\n      minimumUnit: 0,\r\n      actualUnit: 0,\r\n      quantityPerUnit: 1,\r\n      isProductAvailable: false,\r\n      quaterPrice: 0,\r\n      halfPrice: 0,\r\n      fullPrice: 0,\r\n      cquaterPrice: 0,\r\n      chalfPrice: 0,\r\n      cfullPrice: 0,\r\n      actualPrice: 0,\r\n      currentPrice: 0, // doubt\r\n      // categories: [\"dhosa\"]\r\n      // foodAvailable: [\r\n      //   {\r\n      //     branch: \"vellore\",\r\n      //     minimumUnit: 0,\r\n      //     quantityPerUnit: 0,\r\n      //     isProductAvailable: false\r\n      //   }\r\n      // ],\r\n    });\r\n  };\r\n\r\n  const draftHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"item\", item, price);\r\n    if (item.category === \"\") {\r\n      setAlert({\r\n        title: \"Missing Mandatory Fields\",\r\n        body: \"Select Category!!!\",\r\n        status: true,\r\n      });\r\n    }\r\n    // else if (item.foodType === \"\") {\r\n    //   setAlert({\r\n    //     title: \"Missing Mandatory Fields\",\r\n    //     body: \"Select FoodType!!!\",\r\n    //     status: true\r\n    //   });\r\n    // } else if (item.style === \"\") {\r\n    //   setAlert({\r\n    //     title: \"Missing Mandatory Fields\",\r\n    //     body: \"Select Style!!!\",\r\n    //     status: true\r\n    //   });\r\n    // }\r\n    else if (price === null) {\r\n      setAlert({\r\n        title: \"Missing Mandatory Fields\",\r\n        body: \"select normal price or quantity to proceed!!!\",\r\n        status: true,\r\n      });\r\n    } else {\r\n      addItem(item, price, props.type, authCtx, (isAdded) => {\r\n        if (isAdded) {\r\n          // db added\r\n          window.alert(\"Successfully Added!!!\");\r\n          clearHandler();\r\n        } else {\r\n          // error not adding\r\n          window.alert(\"Not Added... Try Again!!!\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div class=\"add-new\">\r\n      {alert !== null && alert.status === true && (\r\n        <AlertModal\r\n          title={alert.title}\r\n          body={alert.body}\r\n          showModal={alert.status}\r\n          handleClose={() => setAlert(null)}\r\n        />\r\n      )}\r\n      <h2>Add one or more items</h2>\r\n      <div class=\"add-form\">\r\n        <AddNewForm\r\n          item={item}\r\n          onChangeHandler={onChangeHandler}\r\n          draftHandler={draftHandler}\r\n          clearHandler={clearHandler}\r\n          price={price}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNew;\r\n","const PreviewCard = (props) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {/* <div className=\"overlay\">v</div> */}\r\n      <div className=\"overlay\">\r\n        {props.item.foodType === \"\" ? null : props.item.foodType}\r\n      </div>\r\n      <div className=\"preview\">preview</div>\r\n      <img\r\n        className={\r\n          props.item.img !== undefined && props.item.img.url !== \"\"\r\n            ? \"\"\r\n            : \"card-img\"\r\n        }\r\n        id=\"cardImg\"\r\n        src={\r\n          props.item.img !== undefined && props.item.img.url === \"\"\r\n            ? \"/images/tray.png\"\r\n            : props.item.img.url\r\n        }\r\n        alt=\"item name\"\r\n      />\r\n      {/* <img\r\n        className=\"card-img\"\r\n        id=\"cardImg\"\r\n        src=\"/images/tray.png\"\r\n        alt=\"item name\"\r\n      /> */}\r\n      <div className=\"card-body\">\r\n        <p className=\"item-name\">\r\n          {props.item.name === \"\" ? \"Item Name\" : props.item.name}&nbsp;\r\n          <span>\r\n            ({props.item.altName === \"\" ? \"alternative\" : props.item.altName})\r\n          </span>\r\n        </p>\r\n        <p className=\"item-desc\">\r\n          &ensp;\r\n          {props.item.desc === \"\"\r\n            ? \"Contains a small description of the item\"\r\n            : props.item.desc}\r\n        </p>\r\n        <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\r\n          {props.item.category === \"\" ? null : props.item.category}\r\n        </p>\r\n        {/* <p className=\"pills\" style={{ textTransform: \"capitalize\" }}>\r\n          {props.item.foodType === \"\" ? null : props.item.foodType}\r\n        </p> */}\r\n        {/* <p className=\"item-style\">\r\n          Style:&nbsp;\r\n          <b style={{ textTransform: \"uppercase\" }}>\r\n            {props.item.style === \"\" ? \"\" : props.item.style}\r\n          </b>\r\n        </p> */}\r\n        <p className=\"item-quantity\">\r\n          Quantity:&nbsp;\r\n          <b>{props.item.minimumUnit}</b>\r\n        </p>\r\n      </div>\r\n      <div className=\"card-footer\">\r\n        {/* <p className=\"ratings\">\r\n          <span className=\"fas fa-star\"></span>\r\n          <span className=\"fas fa-star\"></span>\r\n          <span className=\"fas fa-star\"></span>\r\n          <span className=\"fas fa-star\"></span>\r\n          <span className=\"fas fa-star\"></span>\r\n        </p> */}\r\n        <p className=\"price\">\r\n          <i className=\"fas fa-rupee\"></i>&nbsp;\r\n          {props.price === \"normalPrice\"\r\n            ? props.item.currentPrice\r\n            : props.item.cfullPrice}\r\n        </p>\r\n        <p>\r\n          Discount Percentage:{\" \"}\r\n          {props.price === \"normalPrice\"\r\n            ? 100 -\r\n              (props.item.currentPrice / props.item.actualPrice) * 100 +\r\n              \"%\"\r\n            : 100 - (props.item.cfullPrice / props.item.fullPrice) * 100 + \"%\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewCard;\r\n","import React, { useState } from \"react\";\r\nimport PreviewCard from \"./PreviewCard\";\r\n\r\nconst AddNewForm = (props) => {\r\n  // const [priceItem, setPriceItem] = useState([\r\n  //   {\r\n  //     id: 0,\r\n  //     quantity: 0,\r\n  //     units: \"\",\r\n  //     actualPrice: 0,\r\n  //     currentPrice: 0\r\n  //   }\r\n  // ]);\r\n\r\n  const addMoreQuantity = () => {\r\n    let prevState = props.item.priceItem;\r\n    let lastdata = prevState[prevState.length - 1];\r\n    let newId = lastdata.id + 1;\r\n    let data = {\r\n      id: newId,\r\n      quantity: 0,\r\n      units: \"\",\r\n      actualPrice: 0,\r\n      currentPrice: 0,\r\n    };\r\n    prevState = [...prevState, data];\r\n    // console.log(\"prevState\", prevState);\r\n    props.priceItemChangeHandler(prevState);\r\n  };\r\n\r\n  const reduceQuantity = () => {\r\n    let prevState = props.item.priceItem;\r\n    if (prevState.length > 1) {\r\n      prevState.pop();\r\n    }\r\n    // let lastdata = prevState[prevState.length - 1];\r\n    // let newId = lastdata.id + 1;\r\n    // let data = {\r\n    //   id: newId,\r\n    //   quantity: 0,\r\n    //   units: \"\",\r\n    //   actualPrice: 0,\r\n    //   currentPrice: 0\r\n    // };\r\n    prevState = [...prevState];\r\n    props.priceItemChangeHandler(prevState);\r\n  };\r\n\r\n  const onChangeHandler = (e, id) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    let list = [...props.item.priceItem];\r\n    let index = list.findIndex((item) => {\r\n      return item.id === id;\r\n    });\r\n    let data = \"\";\r\n    if (name === \"units\") {\r\n      data = {\r\n        ...list[index],\r\n        [name]: value,\r\n      };\r\n    } else {\r\n      data = {\r\n        ...list[index],\r\n        [name]: parseFloat(value),\r\n      };\r\n    }\r\n    list[index] = data;\r\n    // console.log(\"updated List\", list);\r\n    // props.setPriceItem(list);\r\n    props.priceItemChangeHandler(list);\r\n  };\r\n\r\n  let ui = null;\r\n  if (props.price !== null) {\r\n    if (props.price === \"quantityPrice\") {\r\n      ui = (\r\n        <div className=\"col-12 optional\">\r\n          <p>\r\n            Pick the Quantity\r\n            {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\r\n          </p>\r\n          {props.item.priceItem.map((price) => {\r\n            return (\r\n              <div key={price.id} className=\"single-row\">\r\n                <div className=\"pic\">\r\n                  <input\r\n                    className=\"pics\"\r\n                    type=\"number\"\r\n                    id=\"quantity\"\r\n                    name=\"quantity\"\r\n                    min=\"0\"\r\n                    max=\"1000\"\r\n                    value={price.quantity}\r\n                    onChange={(e) => {\r\n                      onChangeHandler(e, price.id);\r\n                    }}\r\n                  />\r\n\r\n                  <select\r\n                    className=\"amo\"\r\n                    name=\"units\"\r\n                    id=\"units\"\r\n                    onChange={(e) => {\r\n                      onChangeHandler(e, price.id);\r\n                    }}\r\n                    value={price.units}\r\n                  >\r\n                    <option value=\"\">--Select--</option>\r\n                    <option value=\"grams\">grams</option>\r\n                    <option value=\"kilograms\">kilograms</option>\r\n                    <option value=\"millilitres\">millilitres</option>\r\n                    <option value=\"litres\">litres</option>\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"actualPrice\" className=\"price\">\r\n                    Actual Price&nbsp;\r\n                  </label>\r\n                  <i className=\"fas fa-rupee\"></i>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"actualPrice\"\r\n                    name=\"actualPrice\"\r\n                    min=\"0\"\r\n                    onChange={(e) => {\r\n                      onChangeHandler(e, price.id);\r\n                    }}\r\n                    value={price.actualPrice}\r\n                  />\r\n                  <label htmlFor=\"currentPrice\" className=\"price\">\r\n                    Current Price&nbsp;\r\n                  </label>\r\n                  <i className=\"fas fa-rupee\"></i>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"currentPrice\"\r\n                    name=\"currentPrice\"\r\n                    min=\"0\"\r\n                    onChange={(e) => {\r\n                      onChangeHandler(e, price.id);\r\n                    }}\r\n                    value={price.currentPrice}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          <button type=\"button\" onClick={addMoreQuantity}>\r\n            <i class=\"fas fa-plus-circle\"></i>\r\n          </button>\r\n          <button type=\"button\" onClick={reduceQuantity}>\r\n            <i class=\"fas fa-minus-circle\"></i>\r\n          </button>\r\n          {/* <div className=\"single-row\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"half\"\r\n              name=\"quantity\"\r\n              value=\"half\"\r\n              onChange={props.onChangeHandler}\r\n            />\r\n            <label htmlFor=\"half\" className=\"label\">\r\n              Half\r\n            </label>\r\n            <label htmlFor=\"halfPrice\" className=\"price\">\r\n              Actual Price\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"halfPrice\"\r\n              name=\"halfPrice\"\r\n              min=\"0\"\r\n              onChange={props.onChangeHandler}\r\n              value={props.item.halfPrice}\r\n            />\r\n            <label htmlFor=\"chalfPrice\" className=\"price\">\r\n              Current Price\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"chalfPrice\"\r\n              name=\"chalfPrice\"\r\n              min=\"0\"\r\n              onChange={props.onChangeHandler}\r\n              value={props.item.chalfPrice}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"single-row\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"full\"\r\n              name=\"quantity\"\r\n              value=\"full\"\r\n              onChange={props.onChangeHandler}\r\n            />\r\n            <label htmlFor=\"full\" className=\"label\">\r\n              Full\r\n            </label>\r\n            <label htmlFor=\"fullPrice\" className=\"price\">\r\n              Actual Price\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"fullPrice\"\r\n              name=\"fullPrice\"\r\n              min=\"0\"\r\n              onChange={props.onChangeHandler}\r\n              value={props.item.fullPrice}\r\n            />\r\n            <label htmlFor=\"cfullPrice\" className=\"price\">\r\n              Current Price\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"cfullPrice\"\r\n              name=\"cfullPrice\"\r\n              min=\"0\"\r\n              onChange={props.onChangeHandler}\r\n              value={props.item.cfullPrice}\r\n            />\r\n          </div> */}\r\n        </div>\r\n      );\r\n    } else if (props.price === \"normalPrice\") {\r\n      ui = (\r\n        <div className=\"col-12 price\">\r\n          {/* <p>Actual Price</p>\r\n          <i className=\"fas fa-rupee\"></i>\r\n          <input\r\n            type=\"number\"\r\n            id=\"actualPrice\"\r\n            name=\"actualPrice\"\r\n            style={{ marginRight: \"15px\" }}\r\n            min=\"0\"\r\n            onChange={props.onChangeHandler}\r\n            value={props.item.priceItem.actualPrice}\r\n          /> */}\r\n          <p>Current Price</p>\r\n          <i className=\"fas fa-rupee\"></i>\r\n          <input\r\n            type=\"number\"\r\n            id=\"currentPrice\"\r\n            name=\"currentPrice\"\r\n            min=\"0\"\r\n            onChange={props.onChangeHandler}\r\n            value={props.item.currentPrice}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={props.draftHandler}>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card-data\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-5\">\r\n                <div className=\"inner-row\">\r\n                  <label htmlFor=\"name\">Enter Product Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    onChange={props.onChangeHandler}\r\n                    value={props.item.name}\r\n                    required\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </div>\r\n\r\n                {/* <div className=\"inner-row\">\r\n                  <label htmlFor=\"altName\">\r\n                    Enter Brand Name<small>&nbsp;(optional)</small>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"altName\"\r\n                    name=\"altName\"\r\n                    onChange={props.onChangeHandler}\r\n                    value={props.item.altName}\r\n                    required\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </div> */}\r\n                <div className=\"inner-row\">\r\n                  <label htmlFor=\"altName\">Enter Product Id</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"productId\"\r\n                    name=\"productId\"\r\n                    onChange={props.onChangeHandler}\r\n                    value={props.item.productId}\r\n                    required\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"inner-row\">\r\n                  <label htmlFor=\"desc\">Description</label>\r\n                  <textarea\r\n                    id=\"desc\"\r\n                    name=\"desc\"\r\n                    onChange={props.onChangeHandler}\r\n                    value={props.item.desc}\r\n                    required\r\n                    autoComplete=\"off\"\r\n                  ></textarea>\r\n                </div>\r\n\r\n                <div className=\"inner-row\">\r\n                  <label htmlFor=\"img\">Upload the image</label>\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"img\"\r\n                    name=\"img\"\r\n                    onChange={props.onChangeHandler}\r\n                    required\r\n                  />\r\n                  <small>\r\n                    The preview of the image can be seen in the card\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-7\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-8 check\">\r\n                    <p>Pick Category</p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"single\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            id=\"Fruits_Vegetables\"\r\n                            value=\"Fruits_Vegetables\"\r\n                            name=\"category\"\r\n                            onChange={props.onChangeHandler}\r\n                          />\r\n                          <label htmlFor=\"Fruits_Vegetables\">\r\n                            Fruits_Vegetables\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"single\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            id=\"Rice\"\r\n                            value=\"Rice\"\r\n                            name=\"category\"\r\n                            onChange={props.onChangeHandler}\r\n                          />\r\n                          <label htmlFor=\"Rice\">Rice</label>\r\n                        </div>\r\n                        <div className=\"single\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            id=\"Summer_Drinks_Beverages\"\r\n                            value=\"Summer_Drinks_Beverages\"\r\n                            name=\"category\"\r\n                            onChange={props.onChangeHandler}\r\n                          />\r\n                          <label htmlFor=\"Summer_Drinks_Beverages\">\r\n                            Summer_Drinks_Beverages\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"single\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            id=\"soaps\"\r\n                            value=\"soaps\"\r\n                            name=\"category\"\r\n                            onChange={props.onChangeHandler}\r\n                          />\r\n                          <label htmlFor=\"soaps\">Soaps</label>\r\n                        </div>\r\n                        <div className=\"single\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            id=\"Pharmacy\"\r\n                            value=\"Pharmacy\"\r\n                            name=\"category\"\r\n                            onChange={props.onChangeHandler}\r\n                          />\r\n                          <label htmlFor=\"Pharmacy\">Pharmacy</label>\r\n                        </div>\r\n                        <div className=\"single\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            id=\"Organics\"\r\n                            value=\"Organics\"\r\n                            name=\"category\"\r\n                            onChange={props.onChangeHandler}\r\n                          />\r\n                          <label htmlFor=\"Organics\">Organics</label>\r\n                        </div>\r\n                      </div>\r\n                      {/* <div className=\"col-md-6\">\r\n                        <div className=\"single\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            id=\"personalCare\"\r\n                            value=\"personalCare\"\r\n                            name=\"category\"\r\n                            onChange={props.onChangeHandler}\r\n                          />\r\n                          <label htmlFor=\"personalCare\">Personal Care</label>\r\n                        </div>\r\n                        <div className=\"single\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            id=\"cleaners\"\r\n                            value=\"cleaners\"\r\n                            name=\"category\"\r\n                            onChange={props.onChangeHandler}\r\n                          />\r\n                          <label htmlFor=\"cleaners\">Cleaners</label>\r\n                        </div>\r\n                        <div className=\"single\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            id=\"others\"\r\n                            value=\"others\"\r\n                            name=\"category\"\r\n                            onChange={props.onChangeHandler}\r\n                          />\r\n                          <label htmlFor=\"others\">Others</label>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                  {/* <div className=\"col-md-4 veg\">\r\n                    <p>Food Type</p>\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"nonveg\"\r\n                      name=\"foodType\"\r\n                      value=\"non-veg\"\r\n                      onChange={props.onChangeHandler}\r\n                    />\r\n                    <label htmlFor=\"nonveg\">Non-Veg</label>\r\n\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"veg\"\r\n                      name=\"foodType\"\r\n                      value=\"veg\"\r\n                      onChange={props.onChangeHandler}\r\n                    />\r\n                    <label htmlFor=\"veg\">Veg</label>\r\n                  </div> */}\r\n                  <div className=\"col-md-7\">\r\n                    <div className=\"unit\">\r\n                      <label htmlFor=\"actualUnit\">Total Unit:</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        id=\"actualUnit\"\r\n                        name=\"actualUnit\"\r\n                        min=\"0\"\r\n                        onChange={props.onChangeHandler}\r\n                        value={props.item.actualUnit}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    {/* <div className=\"quantity\">\r\n                      <label htmlFor=\"unit\">Enter Minimum Unit:</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        id=\"unit\"\r\n                        name=\"minimumUnit\"\r\n                        min=\"0\"\r\n                        onChange={props.onChangeHandler}\r\n                        value={props.item.minimumUnit}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"unit\">\r\n                      <label htmlFor=\"quantity\">\r\n                        Quantity Per Unit:\r\n                        <br />\r\n                        <small>(Optional)</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        id=\"quantity\"\r\n                        name=\"quantityPerUnit\"\r\n                        min=\"1\"\r\n                        onChange={props.onChangeHandler}\r\n                        value={props.item.quantityPerUnit}\r\n                      />\r\n                    </div> */}\r\n                  </div>\r\n                  <div className=\"col-md-5 others\">\r\n                    <div className=\"single\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"dealOfTheDay\"\r\n                        name=\"dealOfTheDay\"\r\n                        onChange={props.onChangeHandler}\r\n                      />\r\n                      <label htmlFor=\"dealOfTheDay\">Deal of the day</label>\r\n                    </div>\r\n                    {/* <div className=\"single\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"onSale\"\r\n                        name=\"onSale\"\r\n                        onChange={props.onChangeHandler}\r\n                      />\r\n                      <label htmlFor=\"onSale\">On Sale</label>\r\n                    </div> */}\r\n                    <div className=\"single\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"isProductAvailable\"\r\n                        name=\"isProductAvailable\"\r\n                        onChange={props.onChangeHandler}\r\n                      />\r\n                      <label htmlFor=\"isProductAvailable\">\r\n                        Product Available\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"single\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"bestSeller\"\r\n                        name=\"bestSeller\"\r\n                        onChange={props.onChangeHandler}\r\n                      />\r\n                      <label htmlFor=\"bestSeller\">Best Seller</label>\r\n                      {/* <label htmlFor=\"top\">Top Product</label> */}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"normalPrice\"\r\n                      name=\"price\"\r\n                      value=\"normalPrice\"\r\n                      onChange={props.onChangeHandler}\r\n                    />\r\n                    <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\r\n                  </div>\r\n                  {/* <div className=\"col-6\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"quantityPrice\"\r\n                      name=\"price\"\r\n                      value=\"quantityPrice\"\r\n                      onChange={props.onChangeHandler}\r\n                    />\r\n                    <label htmlFor=\"quantityPrice\">\r\n                      &nbsp;Quantity Based Price\r\n                    </label>\r\n                  </div> */}\r\n                  {/* <div className=\"col-12 price\">\r\n                    <p>Actual Price</p>\r\n                    <i className=\"fas fa-rupee\"></i>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"actualPrice\"\r\n                      name=\"actualPrice\"\r\n                      style={{ marginRight: \"15px\" }}\r\n                      min=\"0\"\r\n                      onChange={props.onChangeHandler}\r\n                      value={props.item.actualPrice}\r\n                    />\r\n                    <p>Current Price</p>\r\n                    <i className=\"fas fa-rupee\"></i>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"currentPrice\"\r\n                      name=\"currentPrice\"\r\n                      min=\"0\"\r\n                      onChange={props.onChangeHandler}\r\n                      value={props.item.currentPrice}\r\n                    />\r\n                  </div> */}\r\n                  {ui}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <PreviewCard item={props.item} price={props.price} />\r\n          <div className=\"button\">\r\n            <button type=\"submit\" className=\"submit-btn\">\r\n              Save\r\n            </button>\r\n            <button type=\"button\" className=\"submit-btn\">\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"reset\"\r\n              className=\"submit-btn\"\r\n              onClick={props.clearHandler}\r\n              // onClick={this.form.reset()}\r\n            >\r\n              Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddNewForm;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport AddNewForm from \"./AddNewForm\";\r\nimport $ from \"jquery\";\r\nimport { addItem } from \"../../../api/ItemDB\";\r\nimport AlertModal from \"../../../reusable/Modals/AlertModal\";\r\nimport AuthContext from \"../../../context/auth-context\";\r\n\r\nconst AddNewItem = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const [item, setItem] = useState({\r\n    id: \"\",\r\n    productId: \"\", // we generate it\r\n    name: \"\",\r\n    img: {\r\n      file: null,\r\n      url: \"\",\r\n    },\r\n    // altName: \"\", // brand name\r\n    desc: \"\",\r\n    category: \"\", // breakfase, lunch, dinner\r\n    // style: \"\",\r\n    foodType: \"\", // nonveg, veg\r\n    offer: 0, // actual price - offer price = current price\r\n    bestSeller: false,\r\n    currencyCode: 356, // 356 - INR\r\n    dealOfTheDay: false,\r\n    onSale: false,\r\n    minimumUnit: 0,\r\n    actualUnit: 0,\r\n    quantityPerUnit: 1,\r\n    isProductAvailable: false,\r\n    priceItem: [\r\n      {\r\n        id: 0,\r\n        quantity: 0,\r\n        units: \"\",\r\n        actualPrice: 0,\r\n        currentPrice: 0,\r\n      },\r\n    ],\r\n    actualPrice: 0,\r\n    currentPrice: 0, // doubt\r\n    // categories: [\"dhosa\"]\r\n    // foodAvailable: [\r\n    //   {\r\n    //     branch: \"vellore\",\r\n    //     minimumUnit: 0,\r\n    //     quantityPerUnit: 0,\r\n    //     isProductAvailable: false\r\n    //   }\r\n    // ],\r\n  });\r\n  const [price, setPrice] = useState(null);\r\n  const [alert, setAlert] = useState(null);\r\n  // const [priceChoice, setPriceChoice] = useState();\r\n  // useEffect(() => {\r\n  //   if (price === \"normalPrice\") {\r\n  //     // console.log(\"normalpyy\");\r\n\r\n  //     setItem((prevState) => {\r\n  //       return {\r\n  //         ...prevState,\r\n  //         priceItem: {\r\n  //           actualPrice: 0,\r\n  //           currentPrice: 0\r\n  //         }\r\n  //       };\r\n  //     });\r\n  //   } else {\r\n  //     // console.log(\"dvgfdihbkvdjk\");\r\n\r\n  //     setItem((prevState) => {\r\n  //       return {\r\n  //         ...prevState,\r\n  //         priceItem: [\r\n  //           {\r\n  //             id: 0,\r\n  //             quantity: 0,\r\n  //             units: \"\",\r\n  //             actualPrice: 0,\r\n  //             currentPrice: 0\r\n  //           }\r\n  //         ]\r\n  //       };\r\n  //     });\r\n  //   }\r\n  // }, [price]);\r\n\r\n  const onChangeHandler = (event) => {\r\n    console.log(\"event.name\", event.target.name, event.target.value);\r\n\r\n    // setChecked((prevState) => !prevState);\r\n\r\n    let value = event.target.value;\r\n    let ename = event.target.name;\r\n\r\n    if (ename === \"img\") {\r\n      value = event.target.files[0];\r\n      // console.log(\"url\", URL.createObjectURL(value));\r\n      setItem((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          img: {\r\n            file: value,\r\n            url: URL.createObjectURL(value),\r\n          },\r\n        };\r\n      });\r\n    } else if (\r\n      ename === \"dealOfTheDay\" ||\r\n      ename === \"onSale\" ||\r\n      ename === \"isProductAvailable\" ||\r\n      ename === \"bestSeller\"\r\n    ) {\r\n      setItem((prevState) => {\r\n        value = !prevState[event.target.name];\r\n        // console.log(event.target.name, value);\r\n        return {\r\n          ...prevState,\r\n          [event.target.name]: value,\r\n        };\r\n      });\r\n    } else if (ename === \"price\") {\r\n      setPrice(value);\r\n      if (value === \"normalPrice\") {\r\n        setItem((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            priceItem: {\r\n              actualPrice: 0,\r\n              currentPrice: 0,\r\n            },\r\n          };\r\n        });\r\n      } else {\r\n        setItem((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            priceItem: [\r\n              {\r\n                id: 0,\r\n                quantity: 0,\r\n                units: \"\",\r\n                actualPrice: 0,\r\n                currentPrice: 0,\r\n              },\r\n            ],\r\n          };\r\n        });\r\n      }\r\n    } else if (ename === \"actualPrice\") {\r\n      setItem((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          priceItem: {\r\n            ...prevState.priceItem,\r\n            actualPrice: value,\r\n          },\r\n        };\r\n      });\r\n    } else if (ename === \"currentPrice\") {\r\n      setItem((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          // priceItem: {\r\n          //   ...prevState.priceItem,\r\n          //   currentPrice: value,\r\n          // },\r\n          [event.target.name]: value,\r\n        };\r\n      });\r\n    } else {\r\n      setItem((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          [event.target.name]: value,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const clearHandler = () => {\r\n    document.getElementById(\"img\").value = \"\";\r\n    $(\":checkbox\").prop(\"checked\", false);\r\n    $('input[name=\"category\"]').prop(\"checked\", false);\r\n    $('input[name=\"foodType\"]').prop(\"checked\", false);\r\n    $('input[name=\"style\"]').prop(\"checked\", false);\r\n    $('input[name=\"price\"]').prop(\"checked\", false);\r\n    setPrice(null);\r\n    setItem({\r\n      id: \"\",\r\n      productId: \"\", // we generate it\r\n      name: \"\",\r\n      img: {\r\n        file: null,\r\n        url: \"\",\r\n      },\r\n      // altName: \"\", // brand name\r\n      desc: \"\",\r\n      category: \"\", // breakfase, lunch, dinner\r\n      // style: \"\",\r\n      foodType: \"\", // nonveg, veg\r\n      offer: 0, // actual price - offer price = current price\r\n      bestSeller: false,\r\n      currencyCode: 356, // 356 - INR\r\n      dealOfTheDay: false,\r\n      onSale: false,\r\n      minimumUnit: 0,\r\n      actualUnit: 0,\r\n      quantityPerUnit: 1,\r\n      isProductAvailable: false,\r\n      priceItem: [\r\n        {\r\n          id: 0,\r\n          quantity: 0,\r\n          units: \"\",\r\n          actualPrice: 0,\r\n          currentPrice: 0,\r\n        },\r\n      ],\r\n      actualPrice: 0,\r\n      currentPrice: 0, // doubt\r\n      // categories: [\"dhosa\"]\r\n      // foodAvailable: [\r\n      //   {\r\n      //     branch: \"vellore\",\r\n      //     minimumUnit: 0,\r\n      //     quantityPerUnit: 0,\r\n      //     isProductAvailable: false\r\n      //   }\r\n      // ],\r\n    });\r\n  };\r\n\r\n  const draftHandler = (e) => {\r\n    console.log(\"drafthandler\");\r\n    e.preventDefault();\r\n    console.log(\"item\", item, price);\r\n    if (item.category === \"\") {\r\n      setAlert({\r\n        title: \"Missing Mandatory Fields\",\r\n        body: \"Select Category!!!\",\r\n        status: true,\r\n      });\r\n    }\r\n    // else if (item.foodType === \"\") {\r\n    //   setAlert({\r\n    //     title: \"Missing Mandatory Fields\",\r\n    //     body: \"Select FoodType!!!\",\r\n    //     status: true,\r\n    //   });\r\n    // }\r\n    // else if (item.style === \"\") {\r\n    //   setAlert({\r\n    //     title: \"Missing Mandatory Fields\",\r\n    //     body: \"Select Style!!!\",\r\n    //     status: true,\r\n    //   });\r\n    // }\r\n    else if (price === null) {\r\n      setAlert({\r\n        title: \"Missing Mandatory Fields\",\r\n        body: \"select normal price!!!\",\r\n        // body: \"select normal price or quantity to proceed!!!\",\r\n        status: true,\r\n      });\r\n    } else {\r\n      let isAddItem = true;\r\n\r\n      let pricee = item;  \r\n      if (pricee.length === undefined || pricee.length === null) {\r\n        // priceItem is map\r\n        // if (pricee.actualPrice === 0 || pricee.currentPrice === 0) {\r\n        if (pricee.currentPrice === 0) {\r\n          setAlert({\r\n            title: \"Missing Mandatory Fields\",\r\n            body: \"Value should be greater than 0!!!\",\r\n            status: true,\r\n          });\r\n          isAddItem = false;\r\n        }\r\n      } else {\r\n        // priceItem is array\r\n        for (let i = 0; i < pricee.length; i++) {\r\n          if (pricee[i].units === \"\") {\r\n            setAlert({\r\n              title: \"Missing Mandatory Fields\",\r\n              body: \"select units for all quantity like kilogram, liters etc!!!\",\r\n              status: true,\r\n            });\r\n            isAddItem = false;\r\n            break;\r\n          } else if (\r\n            // pricee[i].quantity <= 0 ||\r\n            // pricee[i].actualPrice <= 0 ||\r\n            pricee[i].currentPrice <= 0\r\n          ) {\r\n            setAlert({\r\n              title: \"Missing Mandatory Fields\",\r\n              body: \"Price should not be 0!!!\",\r\n              // body: \"Quantity or Price should not be 0!!!\",\r\n              status: true,\r\n            });\r\n            isAddItem = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      console.log(\"isaddItem\", isAddItem, props.type, authCtx);\r\n      if (isAddItem) {\r\n        addItem(item, price, props.type, authCtx, (isAdded) => {\r\n          if (isAdded) {\r\n            // db added\r\n            window.alert(\"Successfully Added!!!\");\r\n            clearHandler();\r\n          } else {\r\n            // error not adding\r\n            window.alert(\"Not Added... Try Again!!!\");\r\n          }\r\n        });\r\n      }\r\n      // console.log(\"new Data\", item);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div class=\"add-new\">\r\n      {alert !== null && alert.status === true && (\r\n        <AlertModal\r\n          title={alert.title}\r\n          body={alert.body}\r\n          showModal={alert.status}\r\n          handleClose={() => setAlert(null)}\r\n        />\r\n      )}\r\n      <h2>Add one or more items</h2>\r\n      <div class=\"add-form\">\r\n        <AddNewForm\r\n          item={item}\r\n          onChangeHandler={onChangeHandler}\r\n          priceItemChangeHandler={(list) =>\r\n            setItem((prevState) => {\r\n              // console.log(\"list\", list);\r\n              return {\r\n                ...prevState,\r\n                priceItem: list,\r\n              };\r\n            })\r\n          }\r\n          draftHandler={draftHandler}\r\n          clearHandler={clearHandler}\r\n          price={price}\r\n        />\r\n        ;\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styles from \"./EditModal.module.css\";\r\nimport \"./EditModal.css\";\r\nimport Card from \"../Card/Card\";\r\nimport Backdrop from \"../Backdrop\";\r\nimport $ from \"jquery\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const [item, setItem] = useState(null);\r\n  const [price, setPrice] = useState(null);\r\n  const [quantity, setQuantity] = useState({\r\n    quarter: false,\r\n    half: false,\r\n    full: false,\r\n  });\r\n  // const [imgView, setImgView] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let item = props.item;\r\n    if (item !== null) {\r\n      console.log(\"item\", item);\r\n      setItem(item);\r\n      setPrice(\"normalPrice\");\r\n      // if (\r\n      //   item.branch[props.location][\"current_price\"] === -1\r\n      //   // &&\r\n      //   // item.branch[props.location][\"actualPrice\"] === -1\r\n      // ) {\r\n      //   let data = {\r\n      //     quarter: false,\r\n      //     half: false,\r\n      //     full: false\r\n      //   };\r\n      //   // if (\r\n      //   //   item.branch[props.location][\"quarterPrice\"] > 0 &&\r\n      //   //   item.branch[props.location][\"cquarterPrice\"] > 0\r\n      //   // ) {\r\n      //   //   data.quarter = true;\r\n      //   // }\r\n      //   // if (\r\n      //   //   item.branch[props.location][\"halfPrice\"] > 0 &&\r\n      //   //   item.branch[props.location][\"chalfPrice\"] > 0\r\n      //   // ) {\r\n      //   //   data.half = true;\r\n      //   // }\r\n      //   // if (\r\n      //   //   item.branch[props.location][\"fullPrice\"] > 0 &&\r\n      //   //   item.branch[props.location][\"cfullPrice\"] > 0\r\n      //   // ) {\r\n      //   //   data.full = true;\r\n      //   // }\r\n      //   // setPrice(\"quantityPrice\");\r\n      //   setQuantity(data);\r\n      // } else {\r\n      //   setPrice(\"normalPrice\");\r\n      // }\r\n    }\r\n  }, [props.item, props.location]);\r\n\r\n  const onChangeHandler = (event) => {\r\n    // console.log(\"event.name\", event.target.name, event.target.value, item);\r\n    // setChecked((prevState) => !prevState);\r\n    let value = event.target.value;\r\n    let ename = event.target.name;\r\n    // console.log(\"ename\", ename, value);\r\n\r\n    if (ename === \"img\") {\r\n      value = event.target.files[0];\r\n      // console.log(\"url\", URL.createObjectURL(value));\r\n      setItem((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          [ename]: value,\r\n        };\r\n      });\r\n    } else if (\r\n      ename === \"dealoftheday\" ||\r\n      ename === \"onsale\" ||\r\n      ename === \"Bestseller\" ||\r\n      ename === \"isproductavailable\"\r\n    ) {\r\n      if (ename === \"isproductavailable\") {\r\n        setItem((prevState) => {\r\n          value = !prevState[event.target.name];\r\n          return {\r\n            ...prevState,\r\n            [ename]: value,\r\n          };\r\n        });\r\n      } else {\r\n        setItem((prevState) => {\r\n          value = !prevState.branch[props.location][event.target.name];\r\n          // console.log(event.target.name, value);\r\n          let data = {\r\n            ...prevState,\r\n          };\r\n          data.branch[props.location] = {\r\n            ...prevState.branch[props.location],\r\n            [event.target.name]: value,\r\n          };\r\n          return data;\r\n        });\r\n      }\r\n    } else if (ename === \"price\") {\r\n      setPrice(value);\r\n    } else if (ename === \"actualPrice\") {\r\n      setItem((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          [props.location]: {\r\n            ...prevState[props.location],\r\n            price: {\r\n              ...prevState[props.location][\"price\"],\r\n              actualPrice: value,\r\n            },\r\n          },\r\n        };\r\n      });\r\n    } else if (ename === \"current_price\") {\r\n      setItem((prevState) => {\r\n        let data = {\r\n          ...prevState,\r\n        };\r\n        data.branch[props.location] = {\r\n          ...prevState.branch[props.location],\r\n          [event.target.name]: value,\r\n        };\r\n        return data;\r\n      });\r\n    } else if (ename === \"quantity\") {\r\n      console.log(\"quantity\", value);\r\n      if (value === \"quarter\") {\r\n        setQuantity((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            quarter: !prevState.quarter,\r\n          };\r\n        });\r\n      } else if (value === \"half\") {\r\n        setQuantity((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            half: !prevState.half,\r\n          };\r\n        });\r\n      } else if (value === \"full\") {\r\n        setQuantity((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            full: !prevState.full,\r\n          };\r\n        });\r\n      }\r\n    } else if (ename === \"quarterPrice\" || ename === \"cquarterPrice\") {\r\n      let data = {\r\n        ...item[props.location][\"price\"],\r\n        quarterPrice: value,\r\n      };\r\n      if (ename === \"cquarterPrice\") {\r\n        data = {\r\n          ...item[props.location][\"price\"],\r\n          cquarterPrice: value,\r\n        };\r\n      }\r\n      setItem((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          [props.location]: {\r\n            ...prevState[props.location],\r\n            price: data,\r\n          },\r\n        };\r\n      });\r\n    } else if (ename === \"halfPrice\" || ename === \"chalfPrice\") {\r\n      let data = {\r\n        ...item[props.location][\"price\"],\r\n        halfPrice: value,\r\n      };\r\n      if (ename === \"chalfPrice\") {\r\n        data = {\r\n          ...item[props.location][\"price\"],\r\n          chalfPrice: value,\r\n        };\r\n      }\r\n      setItem((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          [props.location]: {\r\n            ...prevState[props.location],\r\n            price: data,\r\n          },\r\n        };\r\n      });\r\n    } else if (ename === \"fullPrice\" || ename === \"cfullPrice\") {\r\n      let data = {\r\n        ...item[props.location][\"price\"],\r\n        fullPrice: value,\r\n      };\r\n      if (ename === \"cfullPrice\") {\r\n        data = {\r\n          ...item[props.location][\"price\"],\r\n          cfullPrice: value,\r\n        };\r\n      }\r\n      setItem((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          [props.location]: {\r\n            ...prevState[props.location],\r\n            price: data,\r\n          },\r\n        };\r\n      });\r\n    } else if (\r\n      ename === \"unit\" ||\r\n      ename === \"quantityPerUnit\" ||\r\n      ename === \"minimumUnit\"\r\n    ) {\r\n      setItem((prevState) => {\r\n        let data = {\r\n          ...prevState,\r\n        };\r\n        data.branch[props.location] = {\r\n          ...prevState.branch[props.location],\r\n          [event.target.name]: value,\r\n        };\r\n        return data;\r\n        // return {\r\n        //   ...prevState,\r\n        //   [props.location]: {\r\n        //     ...prevState[props.location],\r\n        //     [ename]: value,\r\n        //   },\r\n        // };\r\n      });\r\n    } else {\r\n      setItem((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          [event.target.name]: value,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const getFile1 = () => {\r\n    $(\"#uploadButton1\").on(\"click\", function () {\r\n      $(\"#img\").click();\r\n    });\r\n\r\n    $(\"#img\").change(function () {\r\n      var file = this.files[0];\r\n      console.log(file);\r\n      var reader = new FileReader();\r\n      reader.onloadend = function () {\r\n        $(\"#uploadButton1\").css(\r\n          \"background-image\",\r\n          'url(\"' + reader.result + '\")'\r\n        );\r\n      };\r\n      if (file) {\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    // console.log(\"UpdatedItem\", item);\r\n    // when mandatory fields are applied then proceed\r\n    if (price === \"quantityPrice\") {\r\n      if (\r\n        quantity.quarter === false &&\r\n        quantity.half === false &&\r\n        quantity.full === false\r\n      ) {\r\n        alert(\"Pick Quantity or Choose Normal Price!!!\");\r\n      } else {\r\n        // let count = 0;\r\n        // let trueCount = 0;\r\n        let isUpdate = true;\r\n        if (quantity.quarter === true) {\r\n          // trueCount++;\r\n          if (\r\n            item[props.location][\"price\"][\"quarterPrice\"] <= 0 &&\r\n            item[props.location][\"price\"][\"cquarterPrice\"] <= 0\r\n          ) {\r\n            alert(\"Update Prices, If Quarter Quantity is Picked!!!\");\r\n            // props.updateItem(item, price, quantity);\r\n            isUpdate = false;\r\n            // count--;\r\n          } else {\r\n            // count++;\r\n          }\r\n        }\r\n        if (quantity.half === true) {\r\n          // trueCount++;\r\n          if (\r\n            item[props.location][\"price\"][\"halfPrice\"] <= 0 &&\r\n            item[props.location][\"price\"][\"chalfPrice\"] <= 0\r\n          ) {\r\n            alert(\"Update Prices, If Half Quantity is Picked!!!\");\r\n            // props.updateItem(item, price, quantity);\r\n            isUpdate = false;\r\n            // count--;\r\n          } else {\r\n            // count++;\r\n          }\r\n        }\r\n        if (quantity.full === true) {\r\n          // trueCount++;\r\n          if (\r\n            item[props.location][\"price\"][\"fullPrice\"] <= 0 &&\r\n            item[props.location][\"price\"][\"cfullPrice\"] <= 0\r\n          ) {\r\n            alert(\"Update Prices, If Full Quantity is Picked!!!\");\r\n            // props.updateItem(item, price, quantity);\r\n            isUpdate = false;\r\n            // count--;\r\n          } else {\r\n            // count++;\r\n          }\r\n        }\r\n        if (isUpdate) {\r\n          props.updateItem(item, price, quantity);\r\n          // console.log(\"isUpdate-if\", isUpdate);\r\n        }\r\n        // else {\r\n        //   console.log(\"isUpdate-else\", isUpdate);\r\n        // }\r\n      }\r\n    } else {\r\n      if (\r\n        // item[props.location][\"price\"][\"actualPrice\"] > 0 &&\r\n        item.branch[props.location][\"current_price\"] > 0\r\n      ) {\r\n        props.updateItem(item, price, quantity, \"Food\");\r\n      } else {\r\n        alert(\"Update Actual/Current Prices!!!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  let ui = null;\r\n  if (price !== null) {\r\n    // if (price === \"quantityPrice\") {\r\n    //   ui = (\r\n    //     <div className=\"col-12\">\r\n    //       <p>\r\n    //         Pick the Quantity\r\n    //         {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\r\n    //       </p>\r\n    //       <div className={styles.singlerow}>\r\n    //         <input\r\n    //           type=\"checkbox\"\r\n    //           id=\"quarter\"\r\n    //           name=\"quantity\"\r\n    //           value=\"quarter\"\r\n    //           onChange={onChangeHandler}\r\n    //           checked={quantity.quarter}\r\n    //         />\r\n    //         <label htmlFor=\"quarter\" className=\"label\">\r\n    //           Quarter\r\n    //         </label>\r\n    //         <label htmlFor=\"quaterPrice\" className={styles.price}>\r\n    //           Actual Price\r\n    //         </label>\r\n    //         <input\r\n    //           type=\"number\"\r\n    //           className={styles.singlenum}\r\n    //           id=\"quarterPrice\"\r\n    //           name=\"quarterPrice\"\r\n    //           min=\"0\"\r\n    //           value={item[props.location][\"price\"][\"quarterPrice\"]}\r\n    //           onChange={onChangeHandler}\r\n    //         />\r\n    //         <label htmlFor=\"cquaterPrice\" className={styles.price}>\r\n    //           Current Price\r\n    //         </label>\r\n    //         <input\r\n    //           type=\"number\"\r\n    //           id=\"cquarterPrice\"\r\n    //           name=\"cquarterPrice\"\r\n    //           min=\"0\"\r\n    //           className={styles.singlenum}\r\n    //           value={item[props.location][\"price\"][\"cquarterPrice\"]}\r\n    //           onChange={onChangeHandler}\r\n    //         />\r\n    //       </div>\r\n    //       <div className={styles.singlerow}>\r\n    //         <input\r\n    //           type=\"checkbox\"\r\n    //           id=\"half\"\r\n    //           name=\"quantity\"\r\n    //           value=\"half\"\r\n    //           checked={quantity.half}\r\n    //           onChange={onChangeHandler}\r\n    //         />\r\n    //         <label htmlFor=\"half\" className=\"label\">\r\n    //           Half\r\n    //         </label>\r\n    //         <label htmlFor=\"halfPrice\" className={styles.price}>\r\n    //           Actual Price\r\n    //         </label>\r\n    //         <input\r\n    //           type=\"number\"\r\n    //           id=\"halfPrice\"\r\n    //           className={styles.singlenum}\r\n    //           name=\"halfPrice\"\r\n    //           min=\"0\"\r\n    //           value={item[props.location][\"price\"][\"halfPrice\"]}\r\n    //           onChange={onChangeHandler}\r\n    //         />\r\n    //         <label htmlFor=\"chalfPrice\" className={styles.price}>\r\n    //           Current Price\r\n    //         </label>\r\n    //         <input\r\n    //           type=\"number\"\r\n    //           id=\"chalfPrice\"\r\n    //           name=\"chalfPrice\"\r\n    //           min=\"0\"\r\n    //           className={styles.singlenum}\r\n    //           value={item[props.location][\"price\"][\"chalfPrice\"]}\r\n    //           onChange={onChangeHandler}\r\n    //         />\r\n    //       </div>\r\n\r\n    //       <div className={styles.singlerow}>\r\n    //         <input\r\n    //           type=\"checkbox\"\r\n    //           id=\"full\"\r\n    //           name=\"quantity\"\r\n    //           value=\"full\"\r\n    //           checked={quantity.full}\r\n    //           onChange={onChangeHandler}\r\n    //         />\r\n    //         <label htmlFor=\"full\" className=\"label\">\r\n    //           Full\r\n    //         </label>\r\n    //         <label htmlFor=\"fullPrice\" className={styles.price}>\r\n    //           Actual Price\r\n    //         </label>\r\n    //         <input\r\n    //           type=\"number\"\r\n    //           id=\"fullPrice\"\r\n    //           name=\"fullPrice\"\r\n    //           min=\"0\"\r\n    //           className={styles.singlenum}\r\n    //           value={item[props.location][\"price\"][\"fullPrice\"]}\r\n    //           onChange={onChangeHandler}\r\n    //         />\r\n    //         <label htmlFor=\"cfullPrice\" className={styles.price}>\r\n    //           Current Price\r\n    //         </label>\r\n    //         <input\r\n    //           type=\"number\"\r\n    //           id=\"cfullPrice\"\r\n    //           name=\"cfullPrice\"\r\n    //           min=\"0\"\r\n    //           className={styles.singlenum}\r\n    //           value={item[props.location][\"price\"][\"cfullPrice\"]}\r\n    //           onChange={onChangeHandler}\r\n    //         />\r\n    //       </div>\r\n    //     </div>\r\n    //   );\r\n    // } else if (price === \"normalPrice\") {\r\n    // }\r\n    if (price === \"normalPrice\") {\r\n      ui = (\r\n        <div className=\"col-12 price\">\r\n          {/* <label htmlFor=\"actualPrice\" className={styles.price}>\r\n            Actual Price&ensp;\r\n          </label>\r\n          <i className=\"fas fa-rupee\"></i>\r\n          <input\r\n            min=\"0\"\r\n            type=\"number\"\r\n            id=\"actualPrice\"\r\n            name=\"actualPrice\"\r\n            style={{ marginRight: \"15px\" }}\r\n            className={styles.singlenum}\r\n            value={\r\n              item[props.location][\"price\"][\"actualPrice\"] > -1 &&\r\n              item[props.location][\"price\"][\"actualPrice\"]\r\n            }\r\n            onChange={onChangeHandler}\r\n          /> */}\r\n          <label htmlFor=\"currentPrice\" className={styles.price}>\r\n            Current Price&ensp;\r\n          </label>\r\n          <i className=\"fas fa-rupee\"></i>\r\n          <input\r\n            min=\"0\"\r\n            type=\"number\"\r\n            id=\"currentPrice\"\r\n            className={styles.singlenum}\r\n            name=\"current_price\"\r\n            value={\r\n              item.branch[props.location][\"current_price\"] > -1 &&\r\n              item.branch[props.location][\"current_price\"]\r\n            }\r\n            onChange={onChangeHandler}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div class={styles.modal}>\r\n      {item !== null && (\r\n        <Card>\r\n          <div class={styles.row}>\r\n            <div class={styles.left}>\r\n              <div class=\"upload-img\">\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"img\"\r\n                  name=\"img\"\r\n                  accept=\".gif, .jpg, .png\"\r\n                  onChange={onChangeHandler}\r\n                />\r\n                <label\r\n                  onClick={() => {\r\n                    getFile1();\r\n                    // setImgView(true);\r\n                  }}\r\n                  htmlFor=\"img\"\r\n                  id=\"uploadButton1\"\r\n                  style={{\r\n                    backgroundImage: `url('${item.img}')`,\r\n                  }}\r\n                >\r\n                  <span>+</span>\r\n                </label>\r\n              </div>\r\n              <div\r\n                class=\"row\"\r\n                style={{ justifyContent: \"end\", paddingTop: \"15px\" }}\r\n              >\r\n                <button\r\n                  type=\"button\"\r\n                  class={styles.btn}\r\n                  style={{ marginRight: \"10px\" }}\r\n                  onClick={submitHandler}\r\n                >\r\n                  Save\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  class={styles.btn}\r\n                  onClick={props.onClose}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class={styles.right}>\r\n              <div class=\"row\">\r\n                <div\r\n                  class={styles.col}\r\n                  style={{ width: \"30%\", paddingRight: \"10px\" }}\r\n                >\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"Name\"\r\n                    name=\"Name\"\r\n                    class={styles.input}\r\n                    alt=\"productname\"\r\n                    value={item.Name}\r\n                    onChange={onChangeHandler}\r\n                  />\r\n                </div>\r\n                <div class={styles.col} style={{ width: \"70%\" }}>\r\n                  <label htmlFor=\"desc\">Description</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    class={styles.input}\r\n                    alt=\"productdescrb\"\r\n                    value={item.description}\r\n                    onChange={onChangeHandler}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div\r\n                class=\"row\"\r\n                style={{ justifyContent: \"space-between\", padding: \"15px 0\" }}\r\n              >\r\n                {/* <select\r\n                  class={styles.select}\r\n                  name=\"style\"\r\n                  id=\"style\"\r\n                  onChange={onChangeHandler}\r\n                  value={item.style}\r\n                >\r\n                  <option\r\n                    value=\"southindian\"\r\n                    // selected={item.style === \"southindian\" ? true : false}\r\n                  >\r\n                    SouthIndian\r\n                  </option>\r\n                  <option\r\n                    value=\"chinese\"\r\n                    // selected={item.style === \"chinese\" ? true : false}\r\n                  >\r\n                    Chinese\r\n                  </option>\r\n                </select> */}\r\n                {/* <select class={styles.select} name=\"category\" id=\"category\">\r\n                <option value=\"breakfast\">Breakfast</option>\r\n                <option value=\"lunch\">Lunch</option>\r\n                <option value=\"dinner\">Dinner</option>\r\n              </select> */}\r\n                <select\r\n                  class={styles.select}\r\n                  name=\"Type\"\r\n                  id=\"Type\"\r\n                  onChange={onChangeHandler}\r\n                  value={item.Type}\r\n                >\r\n                  {/* <option\r\n                    value=\"veg\"\r\n                    // selected={item.Type === \"veg\" ? true : false}\r\n                  >\r\n                    Veg\r\n                  </option>\r\n                  <option\r\n                    value=\"nonveg\"\r\n                    // selected={item.Type === \"non-veg\" ? true : false}\r\n                  >\r\n                    Non-Veg\r\n                  </option> */}\r\n                  <option value=\"BreakFast\">BreakFast</option>\r\n                  <option value=\"Lunch\">Lunch</option>\r\n                  <option value=\"Dinner\">Dinner</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"row\" style={{ justifyContent: \"space-between\" }}>\r\n                <div class={styles.col} style={{ width: \"48%\" }}>\r\n                  <div\r\n                    class=\"row\"\r\n                    style={{\r\n                      justifyContent: \"space-between\",\r\n                      padding: \"5px 0\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <label htmlFor=\"actualUnit\">Actual Unit:</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      class={styles.number}\r\n                      id=\"unit\"\r\n                      name=\"unit\"\r\n                      min=\"0\"\r\n                      onChange={onChangeHandler}\r\n                      value={item.branch[props.location][\"unit\"]}\r\n                    />\r\n\r\n                    {/* <label htmlFor=\"quantityPerUnit\" style={{ margin: \"0\" }}>\r\n                      Quantity Per Unit\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      class={styles.number}\r\n                      id=\"quantityPerUnit\"\r\n                      name=\"quantityPerUnit\"\r\n                      min=\"1\"\r\n                      value={item[props.location][\"quantityPerUnit\"]}\r\n                      onChange={onChangeHandler}\r\n                    /> */}\r\n                  </div>\r\n                  {/* <div\r\n                    class=\"row\"\r\n                    style={{\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <label htmlFor=\"unit\" style={{ margin: \"0\" }}>\r\n                      Minimal Unit\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      class={styles.number}\r\n                      id=\"minimumUnit\"\r\n                      name=\"minimumUnit\"\r\n                      min=\"0\"\r\n                      value={item[props.location][\"minimumUnit\"]}\r\n                      onChange={onChangeHandler}\r\n                    />\r\n                  </div> */}\r\n                </div>\r\n                <div class={styles.col} style={{ width: \"48%\" }}>\r\n                  <div className={styles.single}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"dealoftheday\"\r\n                      name=\"dealoftheday\"\r\n                      className={styles.check}\r\n                      checked={item.branch[props.location][\"dealoftheday\"]}\r\n                      onChange={onChangeHandler}\r\n                    />\r\n                    <label htmlFor=\"dealoftheday\" className={styles.label}>\r\n                      Deal of the day\r\n                    </label>\r\n                  </div>\r\n                  {/* <div className={styles.single}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"onSale\"\r\n                      name=\"onSale\"\r\n                      className={styles.check}\r\n                      // checked={item.dealoftheday}\r\n                    />\r\n                    <label htmlFor=\"onSale\" className={styles.label}>\r\n                      On Sale\r\n                    </label>\r\n                  </div> */}\r\n                  <div className={styles.single}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"isproductavailable\"\r\n                      name=\"isproductavailable\"\r\n                      className={styles.check}\r\n                      checked={item.isproductavailable}\r\n                      // checked={item[props.location][\"isproductavailable\"]}\r\n                      onChange={onChangeHandler}\r\n                    />\r\n                    <label\r\n                      htmlFor=\"isproductavailable\"\r\n                      className={styles.label}\r\n                    >\r\n                      Product Available\r\n                    </label>\r\n                  </div>\r\n                  <div className={styles.single}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"Bestseller\"\r\n                      name=\"Bestseller\"\r\n                      className={styles.check}\r\n                      checked={item.branch[props.location][\"Bestseller\"]}\r\n                      onChange={onChangeHandler}\r\n                    />\r\n                    <label htmlFor=\"Bestseller\" className={styles.label}>\r\n                      Best Seller\r\n                    </label>\r\n                    {/* <label htmlFor=\"top\">Top Product</label> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row pricecol\">\r\n                <div className=\"col-4\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"normalPrice\"\r\n                    name=\"price\"\r\n                    value=\"normalPrice\"\r\n                    checked={price !== null && price === \"normalPrice\"}\r\n                    onChange={onChangeHandler}\r\n                  />\r\n                  <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\r\n                </div>\r\n                {/* <div className=\"col-6\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"quantityPrice\"\r\n                    name=\"price\"\r\n                    value=\"quantityPrice\"\r\n                    checked={price !== null && price === \"quantityPrice\"}\r\n                    onChange={onChangeHandler}\r\n                  />\r\n                  <label htmlFor=\"quantityPrice\">\r\n                    &nbsp;Quantity Based Price\r\n                  </label>\r\n                </div> */}\r\n                {ui}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditModal = (props) => {\r\n  // console.log(\"edit\", props.item);\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClose={props.closeModal} />,\r\n        document.getElementById(\"backdrop-root\")\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay\r\n          onClose={props.closeModal}\r\n          // title={props.title}\r\n          updateItem={props.updateItem}\r\n          item={props.item}\r\n          location={props.location}\r\n        />,\r\n        document.getElementById(\"overlay-root\")\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styles from \"./EditModal.module.css\";\r\nimport \"./EditModal.css\";\r\nimport Card from \"../Card/Card\";\r\nimport Backdrop from \"../Backdrop\";\r\nimport $ from \"jquery\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const [item, setItem] = useState(null);\r\n  const [price, setPrice] = useState(null);\r\n  const [quantity, setQuantity] = useState([]);\r\n  // const [imgView, setImgView] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let item = props.item;\r\n    if (item !== null) {\r\n      console.log(\"item\", item);\r\n      setItem(item);\r\n      setPrice(\"normalPrice\");\r\n      // if (item.branch[props.location][\"current_price\"] === undefined) {\r\n      //   setPrice(\"quantityPrice\");\r\n      //   setQuantity(item[props.location][\"price\"]);\r\n      // } else {\r\n      //   setPrice(\"normalPrice\");\r\n      // }\r\n    }\r\n  }, [props.item, props.location]);\r\n\r\n  const onChangeHandler = (event, id) => {\r\n    // console.log(\"event.name\", event.target.name, event.target.value, item);\r\n    // setChecked((prevState) => !prevState);\r\n    let value = event.target.value;\r\n    let ename = event.target.name;\r\n    // console.log(\"ename\", ename, value);\r\n\r\n    if (ename === \"img\") {\r\n      value = event.target.files[0];\r\n      // console.log(\"url\", URL.createObjectURL(value));\r\n      setItem((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          [ename]: value,\r\n        };\r\n      });\r\n    } else if (\r\n      ename === \"dealoftheday\" ||\r\n      ename === \"onsale\" ||\r\n      ename === \"isproductavailable\" ||\r\n      ename === \"Bestseller\"\r\n    ) {\r\n      if (ename === \"isproductavailable\") {\r\n        setItem((prevState) => {\r\n          value = !prevState[event.target.name];\r\n          return {\r\n            ...prevState,\r\n            [ename]: value,\r\n          };\r\n        });\r\n      } else {\r\n        setItem((prevState) => {\r\n          value = !prevState.branch[props.location][event.target.name];\r\n          // console.log(event.target.name, value);\r\n          let data = {\r\n            ...prevState,\r\n          };\r\n          data.branch[props.location] = {\r\n            ...prevState.branch[props.location],\r\n            [event.target.name]: value,\r\n          };\r\n          return data;\r\n        });\r\n      }\r\n    } else if (ename === \"price\") {\r\n      setPrice(value);\r\n    } else if (ename === \"actualPrice\") {\r\n      if (price === \"normalPrice\") {\r\n        // console.log(\"actualPrice-normal\", value);\r\n        setItem((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            [props.location]: {\r\n              ...prevState[props.location],\r\n              price: {\r\n                ...prevState[props.location][\"price\"],\r\n                actualPrice: parseFloat(value),\r\n              },\r\n            },\r\n          };\r\n        });\r\n      } else {\r\n        setQuantity((prevState) => {\r\n          // console.log(\"actualPrice-quan\", prevState);\r\n          let list = [...prevState];\r\n          let index = list.findIndex((item) => {\r\n            return item.id === id;\r\n          });\r\n          let data = {\r\n            ...list[index],\r\n            [ename]: parseFloat(value),\r\n          };\r\n          list[index] = data;\r\n          return [...list];\r\n        });\r\n      }\r\n    } else if (ename === \"current_price\") {\r\n      if (price === \"normalPrice\") {\r\n        // console.log(\"currPrice-normal\", value);\r\n        setItem((prevState) => {\r\n          let data = {\r\n            ...prevState,\r\n          };\r\n          data.branch[props.location] = {\r\n            ...prevState.branch[props.location],\r\n            [ename]: value,\r\n          };\r\n          return data;\r\n        });\r\n      } else {\r\n        // console.log(\"currPrice-quant\", value);\r\n        setQuantity((prevState) => {\r\n          let list = [...prevState];\r\n          let index = list.findIndex((item) => {\r\n            return item.id === id;\r\n          });\r\n          let data = {\r\n            ...list[index],\r\n            [ename]: parseFloat(value),\r\n          };\r\n          list[index] = data;\r\n          return [...list];\r\n        });\r\n      }\r\n    } else if (ename === \"quantity\") {\r\n      // console.log(\"quantity\", value);\r\n      setQuantity((prevState) => {\r\n        let list = [...prevState];\r\n        let index = list.findIndex((item) => {\r\n          return item.id === id;\r\n        });\r\n        let data = \"\";\r\n        data = {\r\n          ...list[index],\r\n          [ename]: parseFloat(value),\r\n        };\r\n        list[index] = data;\r\n        return [...list];\r\n      });\r\n    } else if (ename === \"units\") {\r\n      // console.log(\"units\", value);\r\n      setQuantity((prevState) => {\r\n        let list = [...prevState];\r\n        let index = list.findIndex((item) => {\r\n          return item.id === id;\r\n        });\r\n        let data = {\r\n          ...list[index],\r\n          [ename]: value,\r\n        };\r\n        list[index] = data;\r\n        return [...list];\r\n      });\r\n    } else if (\r\n      ename === \"unit\" ||\r\n      ename === \"quantityPerUnit\" ||\r\n      ename === \"minimumUnit\"\r\n    ) {\r\n      setItem((prevState) => {\r\n        let data = {\r\n          ...prevState,\r\n        };\r\n        data.branch[props.location] = {\r\n          ...prevState.branch[props.location],\r\n          [ename]: value,\r\n        };\r\n        return data;\r\n        // return {\r\n        //   ...prevState,\r\n        //   [props.location]: {\r\n        //     ...prevState[props.location],\r\n        //     [ename]: value,\r\n        //   },\r\n        // };\r\n      });\r\n    } else {\r\n      setItem((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          [event.target.name]: value,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const getFile1 = () => {\r\n    $(\"#uploadButton1\").on(\"click\", function () {\r\n      $(\"#img\").click();\r\n    });\r\n\r\n    $(\"#img\").change(function () {\r\n      var file = this.files[0];\r\n      console.log(file);\r\n      var reader = new FileReader();\r\n      reader.onloadend = function () {\r\n        $(\"#uploadButton1\").css(\r\n          \"background-image\",\r\n          'url(\"' + reader.result + '\")'\r\n        );\r\n      };\r\n      if (file) {\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    // console.log(\"UpdatedItem\", item, quantity, price);\r\n    let isAddItem = true;\r\n    if (price === \"normalPrice\") {\r\n      if (\r\n        // item[props.location].price.actualPrice <= 0 ||\r\n        item.branch[props.location].current_price <= 0 ||\r\n        // item[props.location].price.actualPrice === undefined ||\r\n        item.branch[props.location].current_price === undefined\r\n      ) {\r\n        alert(\"Price should be greater than 0 to proceed further!!!\");\r\n        isAddItem = false;\r\n      }\r\n    } else {\r\n      for (let i = 0; i < quantity.length; i++) {\r\n        if (quantity[i].units === \"\") {\r\n          alert(\"Select units for all quantity like kilogram, liters etc!!!\");\r\n          isAddItem = false;\r\n          break;\r\n        } else if (\r\n          quantity[i].quantity <= 0 ||\r\n          quantity[i].actualPrice <= 0 ||\r\n          quantity[i].currentPrice <= 0\r\n        ) {\r\n          alert(\"Quantity or Price should not be 0!!!\");\r\n          isAddItem = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (isAddItem) {\r\n      props.updateItem(item, price, quantity, \"Grocery\");\r\n    }\r\n  };\r\n\r\n  const addMoreQuantity = () => {\r\n    setQuantity((prevState) => {\r\n      let price = prevState;\r\n      let newId = price.length; // if already two elements[0, 1] then next element id will be [0, 1, 2]\r\n      let data = {\r\n        id: newId,\r\n        quantity: 0,\r\n        units: \"\",\r\n        actualPrice: 0,\r\n        currentPrice: 0,\r\n      };\r\n      // price = [...price, data];\r\n      return [...price, data];\r\n    });\r\n  };\r\n\r\n  const reduceQuantity = () => {\r\n    setQuantity((prevState) => {\r\n      let price = prevState;\r\n      // let prevState = props.item.priceItem;\r\n      if (price.length > 1) {\r\n        price.pop();\r\n      }\r\n      return [...price];\r\n    });\r\n  };\r\n\r\n  let ui = null;\r\n  if (price !== null) {\r\n    if (price === \"quantityPrice\") {\r\n      ui = (\r\n        <div className=\"col-12\">\r\n          <p>\r\n            Pick the Quantity\r\n            {/* Pick the Quantity<small>&nbsp;(Optional)</small> */}\r\n          </p>\r\n          {quantity.map((price) => {\r\n            return (\r\n              <div className={styles.singlerow} key={price.id}>\r\n                <div className=\"pic\">\r\n                  <input\r\n                    className=\"pics\"\r\n                    type=\"number\"\r\n                    id=\"quantity\"\r\n                    name=\"quantity\"\r\n                    min=\"0\"\r\n                    max=\"1000\"\r\n                    value={price.quantity}\r\n                    onChange={(e) => {\r\n                      onChangeHandler(e, price.id);\r\n                    }}\r\n                  />\r\n\r\n                  <select\r\n                    className=\"amo\"\r\n                    name=\"units\"\r\n                    id=\"units\"\r\n                    onChange={(e) => {\r\n                      onChangeHandler(e, price.id);\r\n                    }}\r\n                    value={price.units}\r\n                  >\r\n                    <option value=\"\">--Select--</option>\r\n                    <option value=\"grams\">grams</option>\r\n                    <option value=\"kilograms\">kilograms</option>\r\n                    <option value=\"millilitres\">millilitres</option>\r\n                    <option value=\"litres\">litres</option>\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"quarterPrice\" className={styles.price}>\r\n                    Actual Price&ensp;\r\n                  </label>\r\n                  <i className=\"fas fa-rupee\"></i>\r\n                  <input\r\n                    type=\"number\"\r\n                    className={styles.singlenum}\r\n                    id=\"actualPrice\"\r\n                    name=\"actualPrice\"\r\n                    min=\"0\"\r\n                    value={price.actualPrice}\r\n                    onChange={(e) => onChangeHandler(e, price.id)}\r\n                  />\r\n                  <label htmlFor=\"cquaterPrice\" className={styles.price}>\r\n                    Current Price&ensp;\r\n                  </label>\r\n                  <i className=\"fas fa-rupee\"></i>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"currentPrice\"\r\n                    name=\"currentPrice\"\r\n                    min=\"0\"\r\n                    className={styles.singlenum}\r\n                    value={price.currentPrice}\r\n                    onChange={(e) => onChangeHandler(e, price.id)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          <button className=\"plus\" type=\"button\" onClick={addMoreQuantity}>\r\n            <i class=\"fas fa-plus-circle\"></i>\r\n          </button>\r\n          <button className=\"neg\" type=\"button\" onClick={reduceQuantity}>\r\n            <i class=\"fas fa-minus-circle\"></i>\r\n          </button>\r\n        </div>\r\n      );\r\n    } else if (price === \"normalPrice\") {\r\n      ui = (\r\n        <div className=\"col-12 price\">\r\n          {/* <label htmlFor=\"actualPrice\" className={styles.price}>\r\n            Actual Price&ensp;\r\n          </label>\r\n          <i className=\"fas fa-rupee\"></i>\r\n          <input\r\n            min=\"0\"\r\n            type=\"number\"\r\n            id=\"actualPrice\"\r\n            name=\"actualPrice\"\r\n            style={{ marginRight: \"15px\" }}\r\n            className={styles.singlenum}\r\n            value={item[props.location].price.actualPrice}\r\n            onChange={onChangeHandler}\r\n          /> */}\r\n          <label htmlFor=\"current_price\" className={styles.price}>\r\n            Current Price&ensp;\r\n          </label>\r\n          <i className=\"fas fa-rupee\"></i>\r\n          <input\r\n            min=\"0\"\r\n            type=\"number\"\r\n            id=\"current_price\"\r\n            className={styles.singlenum}\r\n            name=\"current_price\"\r\n            value={item.branch[props.location].current_price}\r\n            onChange={onChangeHandler}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div class={styles.modal}>\r\n      {item !== null && (\r\n        <Card>\r\n          <div class={styles.row}>\r\n            <div class={styles.left}>\r\n              <div class=\"upload-img\">\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"img\"\r\n                  name=\"img\"\r\n                  accept=\".gif, .jpg, .png\"\r\n                  onChange={onChangeHandler}\r\n                />\r\n                <label\r\n                  onClick={() => {\r\n                    getFile1();\r\n                    // setImgView(true);\r\n                  }}\r\n                  htmlFor=\"img\"\r\n                  id=\"uploadButton1\"\r\n                  style={{\r\n                    backgroundImage: `url('${props.img}')`,\r\n                  }}\r\n                >\r\n                  <span>+</span>\r\n                </label>\r\n              </div>\r\n              <div\r\n                class=\"row\"\r\n                style={{ justifyContent: \"end\", paddingTop: \"15px\" }}\r\n              >\r\n                <button\r\n                  type=\"button\"\r\n                  class={styles.btn}\r\n                  style={{ marginRight: \"10px\" }}\r\n                  onClick={submitHandler}\r\n                >\r\n                  Save\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  class={styles.btn}\r\n                  onClick={props.onClose}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class={styles.right}>\r\n              <div class=\"row\">\r\n                <div\r\n                  class={styles.col}\r\n                  style={{ width: \"30%\", paddingRight: \"10px\" }}\r\n                >\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"Name\"\r\n                    name=\"Name\"\r\n                    class={styles.input}\r\n                    alt=\"productname\"\r\n                    value={item.Name}\r\n                    onChange={onChangeHandler}\r\n                  />\r\n                </div>\r\n                <div class={styles.col} style={{ width: \"70%\" }}>\r\n                  <label htmlFor=\"desc\">Description</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    class={styles.input}\r\n                    alt=\"productdescrb\"\r\n                    value={item.description}\r\n                    onChange={onChangeHandler}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div\r\n                class=\"row\"\r\n                style={{ justifyContent: \"space-between\", padding: \"15px 0\" }}\r\n              >\r\n                {/* <select\r\n                  class={styles.select}\r\n                  name=\"style\"\r\n                  id=\"style\"\r\n                  onChange={onChangeHandler}\r\n                  value={item.style}\r\n                >\r\n                  <option\r\n                    value=\"southindian\"\r\n                    // selected={item.style === \"southindian\" ? true : false}\r\n                  >\r\n                    SouthIndian\r\n                  </option>\r\n                  <option\r\n                    value=\"chinese\"\r\n                    // selected={item.style === \"chinese\" ? true : false}\r\n                  >\r\n                    Chinese\r\n                  </option>\r\n                </select> */}\r\n                {/* <select class={styles.select} name=\"category\" id=\"category\">\r\n                <option value=\"breakfast\">Breakfast</option>\r\n                <option value=\"lunch\">Lunch</option>\r\n                <option value=\"dinner\">Dinner</option>\r\n              </select> */}\r\n                <select\r\n                  class={styles.select}\r\n                  name=\"Type\"\r\n                  id=\"Type\"\r\n                  onChange={onChangeHandler}\r\n                  value={item.Type}\r\n                >\r\n                  <option value=\"Fruits_Vegetables\">Fruits_Vegetables</option>\r\n                  <option value=\"Rice\">Rice</option>\r\n                  <option value=\"Summer_Drinks_Beverages\">\r\n                    Summer_Drinks_Beverages\r\n                  </option>\r\n                  <option value=\"soaps\">Soaps</option>\r\n                  <option value=\"Rice\">Rice</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"row\" style={{ justifyContent: \"space-between\" }}>\r\n                <div class={styles.col} style={{ width: \"48%\" }}>\r\n                  <div\r\n                    class=\"row\"\r\n                    style={{\r\n                      justifyContent: \"space-between\",\r\n                      padding: \"5px 0\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <label htmlFor=\"actualUnit\">Actual Unit:</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      class={styles.number}\r\n                      id=\"unit\"\r\n                      name=\"unit\"\r\n                      min=\"0\"\r\n                      onChange={onChangeHandler}\r\n                      value={item.branch[props.location].unit}\r\n                    />\r\n                    {/* <label htmlFor=\"quantityPerUnit\" style={{ margin: \"0\" }}>\r\n                      Quantity Per Unit\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      class={styles.number}\r\n                      id=\"quantityPerUnit\"\r\n                      name=\"quantityPerUnit\"\r\n                      min=\"1\"\r\n                      value={item[props.location].quantityPerUnit}\r\n                      onChange={onChangeHandler}\r\n                    /> */}\r\n                  </div>\r\n                  {/* <div\r\n                    class=\"row\"\r\n                    style={{\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <label htmlFor=\"unit\" style={{ margin: \"0\" }}>\r\n                      Minimal Unit\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      class={styles.number}\r\n                      id=\"minimumUnit\"\r\n                      name=\"minimumUnit\"\r\n                      min=\"0\"\r\n                      value={item[props.location].minimumUnit}\r\n                      onChange={onChangeHandler}\r\n                    />\r\n                  </div> */}\r\n                </div>\r\n                <div class={styles.col} style={{ width: \"48%\" }}>\r\n                  <div className={styles.single}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"dealoftheday\"\r\n                      name=\"dealoftheday\"\r\n                      className={styles.check}\r\n                      checked={item.branch[props.location].dealoftheday}\r\n                      onChange={onChangeHandler}\r\n                    />\r\n                    <label htmlFor=\"dealoftheday\" className={styles.label}>\r\n                      Deal of the day\r\n                    </label>\r\n                  </div>\r\n                  {/* <div className={styles.single}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"onSale\"\r\n                      name=\"onSale\"\r\n                      className={styles.check}\r\n                      // checked={item.dealoftheday}\r\n                    />\r\n                    <label htmlFor=\"onSale\" className={styles.label}>\r\n                      On Sale\r\n                    </label>\r\n                  </div> */}\r\n                  <div className={styles.single}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"isproductavailable\"\r\n                      name=\"isproductavailable\"\r\n                      className={styles.check}\r\n                      // checked={item[props.location].isproductavailable}\r\n                      checked={item.isproductavailable}\r\n                      onChange={onChangeHandler}\r\n                    />\r\n                    <label\r\n                      htmlFor=\"isproductavailable\"\r\n                      className={styles.label}\r\n                    >\r\n                      Product Available\r\n                    </label>\r\n                  </div>\r\n                  <div className={styles.single}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"Bestseller\"\r\n                      name=\"Bestseller\"\r\n                      className={styles.check}\r\n                      checked={item.branch[props.location].Bestseller}\r\n                      onChange={onChangeHandler}\r\n                    />\r\n                    <label htmlFor=\"Bestseller\" className={styles.label}>\r\n                      Best Seller\r\n                    </label>\r\n                    {/* <label htmlFor=\"top\">Top Product</label> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row pricecol\">\r\n                <div className=\"col-4\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"normalPrice\"\r\n                    name=\"price\"\r\n                    value=\"normalPrice\"\r\n                    checked={price !== null && price === \"normalPrice\"}\r\n                    onChange={onChangeHandler}\r\n                  />\r\n                  <label htmlFor=\"normalPrice\">&nbsp;Normal Price</label>\r\n                </div>\r\n                {/* <div className=\"col-6\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"quantityPrice\"\r\n                    name=\"price\"\r\n                    value=\"quantityPrice\"\r\n                    checked={price !== null && price === \"quantityPrice\"}\r\n                    onChange={onChangeHandler}\r\n                  />\r\n                  <label htmlFor=\"quantityPrice\">\r\n                    &nbsp;Quantity Based Price\r\n                  </label>\r\n                </div> */}\r\n                {ui}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GroceryEditModal = (props) => {\r\n  // console.log(\"edit\", props.item);\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClose={props.closeModal} />,\r\n        document.getElementById(\"backdrop-root\")\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay\r\n          onClose={props.closeModal}\r\n          // title={props.title}\r\n          updateItem={props.updateItem}\r\n          item={props.item}\r\n          location={props.location}\r\n        />,\r\n        document.getElementById(\"overlay-root\")\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroceryEditModal;\r\n","import \"./Snackbar.css\";\r\n\r\nfunction snackbar(item, status) {\r\n  var el = document.createElement(\"div\");\r\n  el.className = \"snackbar\";\r\n  var y = document.getElementById(\"snackbar-container\");\r\n  el.innerHTML = item.Name + \" - \" + status;\r\n  y.append(el);\r\n  el.className = \"snackbar show\";\r\n  setTimeout(function () {\r\n    el.className = el.className.replace(\"snackbar show\", \"snackbar\");\r\n  }, 3000);\r\n}\r\n\r\n// function snackbar1(item, status) {\r\n//   var el = document.createElement(\"div\");\r\n//   el.className = \"snackbar\";\r\n//   var y = document.getElementById(\"snackbar-container\");\r\n//   el.innerHTML = \"Some Text1 Message\";\r\n//   y.append(el);\r\n//   el.className = \"snackbar show\";\r\n//   setTimeout(function () {\r\n//     el.className = el.className.replace(\"snackbar show\", \"snackbar\");\r\n//   }, 3000);\r\n// }\r\n\r\nexport default snackbar;\r\n","import React from \"react\";\r\n// import { propTypes } from \"react-bootstrap/esm/Image\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst DeleteConfirmModal = (props) => {\r\n  return (\r\n    <Modal show={props.showModal} onHide={props.handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Delete Confirmation!!!</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure want to delete it?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          variant=\"danger\"\r\n          onClick={() => props.confirmDelete(props.item)}\r\n        >\r\n          Delete\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={props.handleClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DeleteConfirmModal;\r\n","import React, { useEffect, useState } from \"react\";\r\n// import { Toast, ToastContainer } from \"react-bootstrap\";\r\n// import { getFood } from \"../../api/FoodDB\";\r\nimport { getItems, deleteItem, updateItem } from \"../../api/ItemDB\";\r\nimport EditModal from \"../../ui/EditModal/EditModal\";\r\nimport GroceryEditModal from \"../../ui/EditModal/GroceryEditModal\";\r\nimport snackbar from \"../../ui/Snackbar/Snackbar\";\r\nimport Card from \"../Card/Card\";\r\nimport DeleteConfirmModal from \"../Modals/DeleteConfirmModal\";\r\n\r\nconst Items = (props) => {\r\n  const [item, setItem] = useState(null);\r\n  const [items, setItems] = useState(null);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [updateModal, setUpdateModel] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getItems(props.title, props.type, (res) => {\r\n      console.log(\"res\", res);\r\n      let list = [];\r\n      let item;\r\n      res.forEach((it) => {\r\n        if (it.branch[props.authCtx.user.location] === undefined) {\r\n          if (props.type === \"Food\") {\r\n            item = {\r\n              ...it,\r\n            };\r\n            item.branch[props.authCtx.user.location] = {\r\n              Bestseller: false,\r\n              BranchName: props.authCtx.user.location,\r\n              current_price: 0,\r\n              dealoftheday: false,\r\n              unit: 0,\r\n            };\r\n          } else {\r\n            item = {\r\n              ...it,\r\n            };\r\n            item.branch[props.authCtx.user.location] = {\r\n              Bestseller: false,\r\n              BranchName: props.authCtx.user.location,\r\n              current_price: 0,\r\n              dealoftheday: false,\r\n              unit: 0,\r\n            };\r\n          }\r\n          list.push(item);\r\n        } else {\r\n          list.push(it);\r\n        }\r\n      });\r\n      // console.log(\"list\", list);\r\n      setItems(list);\r\n    });\r\n  }, [props.title, props.type]);\r\n\r\n  const updateItemHandler = (updatedItem, price, quantity, type) => {\r\n    // if data not updated\r\n    // console.log(\"upitem\", updatedItem, price, quantity, type);\r\n    // console.log(\"updatedItem\", item);\r\n    let isUpdate = true;\r\n    if (item === updatedItem) {\r\n      if (type === \"Food\") {\r\n        alert(\"You didn't update anything!!!\");\r\n        isUpdate = false;\r\n      } else {\r\n        if (price === \"normalPrice\") {\r\n          // console.log(item[props.authCtx.user.location].price);\r\n          if (\r\n            item.branch[props.authCtx.user.location].current_price ===\r\n            updatedItem.branch[props.authCtx.user.location].current_price\r\n          ) {\r\n            alert(\"You didn't update anything!!!\");\r\n            isUpdate = false;\r\n          }\r\n        } else {\r\n          if (item.branch[props.authCtx.user.location].price === quantity) {\r\n            alert(\"You didn't update anything!!!\");\r\n            isUpdate = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (isUpdate) {\r\n      // updated\r\n      updateItem(\r\n        updatedItem,\r\n        price,\r\n        quantity,\r\n        props.title,\r\n        props.type,\r\n        props.authCtx.user.location,\r\n        (isUpdated) => {\r\n          if (isUpdated === false) {\r\n            snackbar(item, \"Sorry Not Updated\");\r\n          } else {\r\n            console.log(\"isUpdated\", isUpdated);\r\n            let list = [...items];\r\n            let index = list.findIndex((i) => {\r\n              return i.id === updatedItem.id;\r\n            });\r\n            list[index] = isUpdated;\r\n            setItems(list);\r\n            snackbar(item, \"Successfully Updated\");\r\n            setUpdateModel(false);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const deleteItems = (item) => {\r\n    // console.log(\"items\", item);\r\n    deleteItem(item, props.title, props.type, (isDeleted) => {\r\n      if (isDeleted) {\r\n        let itemsList = [...items];\r\n        let list = itemsList.filter((it) => {\r\n          return it.id !== item.id;\r\n        });\r\n        setItems(list);\r\n        snackbar(item, \"Successfully Deleted\");\r\n      } else {\r\n        snackbar(item, \"Failed To Delete, Try Again!!!\");\r\n      }\r\n    });\r\n    setDeleteModal(false);\r\n  };\r\n\r\n  let ui = null;\r\n  if (items === null) {\r\n    ui = <p>Loading!!!</p>;\r\n  } else {\r\n    if (items.length <= 0) {\r\n      ui = <p>No Items!!!</p>;\r\n    } else {\r\n      ui = items.map((item, i) => (\r\n        <Card\r\n          key={i}\r\n          item={item}\r\n          deleteItem={(it) => {\r\n            setDeleteModal(true);\r\n            setItem(it);\r\n          }}\r\n          type={props.type}\r\n          location={props.authCtx.user.location}\r\n          updateItem={(it) => {\r\n            setItem(it);\r\n            setUpdateModel(props.type);\r\n          }}\r\n        />\r\n      ));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {updateModal === \"Food\" ? (\r\n        <EditModal\r\n          item={item}\r\n          showModal={updateModal}\r\n          closeModal={() => setUpdateModel(false)}\r\n          updateItem={updateItemHandler}\r\n          location={props.authCtx.user.location}\r\n        />\r\n      ) : (\r\n        updateModal === \"Grocery\" && (\r\n          <GroceryEditModal\r\n            item={item}\r\n            showModal={updateModal}\r\n            closeModal={() => setUpdateModel(false)}\r\n            updateItem={updateItemHandler}\r\n            location={props.authCtx.user.location}\r\n          />\r\n        )\r\n      )}\r\n      {/* {updateModal && (\r\n        <GroceryEditModal\r\n          item={item}\r\n          showModal={updateModal}\r\n          closeModal={() => setUpdateModel(false)}\r\n          updateItem={updateItemHandler}\r\n        />\r\n      )} */}\r\n      {deleteModal && (\r\n        <DeleteConfirmModal\r\n          item={item}\r\n          showModal={deleteModal}\r\n          handleClose={() => setDeleteModal(false)}\r\n          confirmDelete={deleteItems}\r\n          location={props.authCtx.user.location}\r\n        />\r\n      )}\r\n      <h1>{props.title}</h1>\r\n      <div class=\"row item-card\">{ui}</div>\r\n      <div id=\"snackbar-container\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Items;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport $ from \"jquery\";\r\nimport { db, auth, firebase } from \"../services/firebase\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport snackbar from \"../ui/Snackbar/Snackbar\";\r\n\r\nconst Profile = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const [newData, setNewData] = useState({\r\n    name: \"\",\r\n    prfl_img: null,\r\n    mno: \"\"\r\n  });\r\n\r\n  const [password, setPassword] = useState({\r\n    // oldPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (authCtx.user !== null) {\r\n      let user = authCtx.user;\r\n      setNewData({\r\n        name: user.name,\r\n        prfl_img: null,\r\n        mno: user.phone\r\n      });\r\n    }\r\n  }, [authCtx.user]);\r\n\r\n  $(document).ready(function () {\r\n    $(\"#togglePassword\").click(function () {\r\n      var x = document.getElementById(\"newpass\");\r\n      if (x.type === \"password\") {\r\n        x.type = \"text\";\r\n      } else {\r\n        x.type = \"password\";\r\n      }\r\n      $(\"#togglePassword\").toggleClass(\"fa-eye-slash\");\r\n    });\r\n\r\n    $(\"#togglePassword1\").click(function () {\r\n      var x = document.getElementById(\"pass\");\r\n      if (x.type === \"password\") {\r\n        x.type = \"text\";\r\n      } else {\r\n        x.type = \"password\";\r\n      }\r\n      $(\"#togglePassword1\").toggleClass(\"fa-eye-slash\");\r\n    });\r\n  });\r\n\r\n  const getFile1 = () => {\r\n    $(\"#uploadButton1\").on(\"click\", function () {\r\n      $(\"#img\").click();\r\n    });\r\n\r\n    $(\"#img\").change(function () {\r\n      var file = this.files[0];\r\n      console.log(file);\r\n      var reader = new FileReader();\r\n      reader.onloadend = function () {\r\n        $(\"#uploadButton1\").css(\r\n          \"background-image\",\r\n          'url(\"' + reader.result + '\")'\r\n        );\r\n      };\r\n      if (file) {\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  // onChangeHandler()\r\n  // submitHandler()\r\n  const updateUser = (newData) => {\r\n    // console.log(\"updating user details\", newData);\r\n    let authUser = authCtx.user;\r\n    let name = authUser.name;\r\n    let phone = authUser.phone;\r\n    // only image is updated\r\n    // both udpated\r\n    if (newData.prfl_img !== undefined && newData.prfl_img !== null) {\r\n      // version - 8\r\n      let bucketName = \"images\";\r\n      let img = newData.prfl_img;\r\n      let storageRef = firebase.storage().ref();\r\n      let timestamp = +new Date().getTime() + \"-\" + newData.prfl_img.name;\r\n      // console.log(\"timestamp\", timestamp);\r\n      let imgRef = storageRef.child(`${bucketName}/${timestamp}`);\r\n      // let photoUrl = \"\";\r\n      // delete previous photo from storage, but not the default photo\r\n      imgRef\r\n        .put(img)\r\n        .then((snapshot) => {\r\n          imgRef.getDownloadURL().then((imgUrl) => {\r\n            // photoUrl = imgUrl;\r\n            db.collection(\"admin\")\r\n              .doc(authUser.id)\r\n              .update({\r\n                name: newData.name,\r\n                phone: newData.mno,\r\n                img: imgUrl\r\n              })\r\n              .then(() => {\r\n                if (\r\n                  authUser.img !==\r\n                  \"https://www.w3schools.com/howto/img_avatar.png\"\r\n                ) {\r\n                  firebase\r\n                    .storage()\r\n                    .refFromURL(authUser.img)\r\n                    .delete()\r\n                    .then(() =>\r\n                      console.log(\r\n                        \"image deleted successfullty from firebase storage\"\r\n                      )\r\n                    );\r\n                }\r\n                alert(\"successfully updated\");\r\n                // console.log(\"successfully updated data to db\");\r\n                authCtx.setUser({\r\n                  ...authUser,\r\n                  name: newData.name,\r\n                  phone: newData.mno,\r\n                  img: imgUrl\r\n                });\r\n\r\n                document.getElementById(\"img\").value = \"\";\r\n                $(\"#uploadButton\").css(\"background-image\", 'url(\"\")');\r\n              })\r\n              .catch((e) => console.log(\"getDownloadUrl\", e));\r\n          });\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"img put\", e);\r\n        });\r\n    } else {\r\n      // no img\r\n      if (name !== newData.name || phone !== newData.mno) {\r\n        // console.log(\"name, mno\", newData);\r\n        db.collection(\"admin\")\r\n          .doc(authUser.id)\r\n          .update({\r\n            name: newData.name,\r\n            phone: newData.mno\r\n          })\r\n          .then(() => {\r\n            alert(\"successfully updated\");\r\n            console.log(\"successfully updated data to db\");\r\n            authCtx.setUser({\r\n              ...authUser,\r\n              name: newData.name,\r\n              phone: newData.mno\r\n            });\r\n          })\r\n          .catch((e) => console.log(e));\r\n      } else {\r\n        alert(\"change anything to update!!!\");\r\n      }\r\n    }\r\n    // } else {\r\n    //   // User is signed out\r\n    //   // ...\r\n    // }\r\n    // });\r\n  };\r\n\r\n  const updatePassword = (password) => {\r\n    // console.log(\"newPas\", password);\r\n    if (password.confirmPassword !== password.newPassword) {\r\n      alert(\"New Password is not equal to Confirm Password!!!\");\r\n    } else {\r\n      auth.onAuthStateChanged((user) => {\r\n        if (user !== null) {\r\n          // console.log(\"userId\", user.uid);\r\n          user\r\n            .updatePassword(password.newPassword)\r\n            .then(() => {\r\n              // let item = {\r\n              //   Name: \"Password\"\r\n              // };\r\n              // snackbar(item, \"updated successfully\");\r\n              alert(\"password updated successfully!!!\");\r\n              setPassword({\r\n                newPassword: \"\",\r\n                confirmPassword: \"\"\r\n              });\r\n            })\r\n            .catch((e) => {\r\n              if (e.code === \"auth/requires-recent-login\") {\r\n                alert(\r\n                  \"Changing sensitive information, So please try again immediately after login. If password is wrong, try with new password you tried.\"\r\n                );\r\n              }\r\n              console.log(e);\r\n            });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const onChangeHandler = (event) => {\r\n    // console.log(event.target.name);\r\n    let value = null;\r\n    if (event.target.name === \"prfl_img\") {\r\n      value = event.target.files[0];\r\n    } else {\r\n      value = event.target.value;\r\n    }\r\n    if (\r\n      event.target.name === \"newPassword\" ||\r\n      event.target.name === \"confirmPassword\"\r\n    ) {\r\n      setPassword((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          [event.target.name]: value\r\n        };\r\n      });\r\n    } else {\r\n      setNewData((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          [event.target.name]: value\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings\">\r\n      <div className=\"row form\">\r\n        {/* box-shadow bg white */}\r\n        <div className=\"col-md-5\">\r\n          <div class=\"upload-img\">\r\n            <input\r\n              type=\"file\"\r\n              id=\"img\"\r\n              name=\"prfl_img\"\r\n              accept=\".gif, .jpg, .png\"\r\n              onChange={onChangeHandler}\r\n            />\r\n            <label\r\n              onClick={() => {\r\n                getFile1();\r\n                // setImgView(true);\r\n              }}\r\n              htmlFor=\"img\"\r\n              id=\"uploadButton1\"\r\n              style={\r\n                {\r\n                  // backgroundImage: `url('${props.img}')`\r\n                }\r\n              }\r\n            >\r\n              <span>+</span>\r\n            </label>\r\n          </div>\r\n          {authCtx.user !== null && (\r\n            <>\r\n              <p className=\"name\">{authCtx.user.name}</p>\r\n              <p className=\"phn\">{authCtx.user.phone}</p>\r\n              <p className=\"email\">{authCtx.user.email}</p>\r\n              <p className=\"branch\">{authCtx.user.location}</p>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"col-md-7\">\r\n          <form className=\"edit-details\">\r\n            <h4 className=\"title\">Account Details</h4>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-6\">\r\n                <label for=\"name\">Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  value={newData.name}\r\n                  onChange={onChangeHandler}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <label for=\"phone\">Phone:</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  class=\"form-control\"\r\n                  id=\"mno\"\r\n                  name=\"mno\"\r\n                  value={newData.mno}\r\n                  onChange={onChangeHandler}\r\n                />\r\n              </div>\r\n            </div>\r\n            <label for=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={authCtx.user !== null && authCtx.user.email}\r\n              disabled\r\n            />\r\n            <div className=\"footer\">\r\n              <button\r\n                class=\"save\"\r\n                type=\"button\"\r\n                onClick={() => updateUser(newData)}\r\n              >\r\n                Save\r\n              </button>\r\n              {/* <button class=\"cancel\" type=\"button\">\r\n                Clear\r\n              </button> */}\r\n            </div>\r\n            <br />\r\n\r\n            {/* //button */}\r\n            <h4 className=\"title\">Account Security</h4>\r\n            {/* <label for=\"oldpass\">Old Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              class=\"form-control\"\r\n              id=\"oldpass\"\r\n              name=\"oldPassword\"\r\n              value={password.oldPassword}\r\n              onChange={onChangeHandler}\r\n            /> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-6\">\r\n                <label for=\"newpass\">New Password:</label>\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  id=\"newpass\"\r\n                  name=\"newPassword\"\r\n                  value={password.newPassword}\r\n                  onChange={onChangeHandler}\r\n                />\r\n                <i class=\"fas fa-eye\" id=\"togglePassword\"></i>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <label for=\"pass\">Confirm Password:</label>\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  id=\"pass\"\r\n                  name=\"confirmPassword\"\r\n                  value={password.confirmPassword}\r\n                  onChange={onChangeHandler}\r\n                />\r\n                <i\r\n                  class=\"fas fa-eye\"\r\n                  id=\"togglePassword1\"\r\n                  style={{ right: \"15px\" }}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"footer\">\r\n              <button\r\n                class=\"save\"\r\n                type=\"button\"\r\n                onClick={() => updatePassword(password)}\r\n              >\r\n                Save\r\n              </button>\r\n              {/* <button class=\"cancel\" type=\"button\">\r\n                Clear\r\n              </button> */}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {/* <div id=\"snackbar-container\"></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n\r\nconst DeliveryCard = (props) => {\r\n  return (\r\n    <div className=\"col-md-3 delivery-card\">\r\n      {props.users.length === 0 ? (\r\n        <p>No Users!!!</p>\r\n      ) : (\r\n        props.users.map((user) => {\r\n          return (\r\n            <div className=\"card\" key={user.user_id}>\r\n              <img\r\n                className=\"img-fluid\"\r\n                src={user.user_image_url}\r\n                alt={user.user_username}\r\n              />\r\n              <p className=\"name\">\r\n                <b>Name:</b>&ensp;{user.user_username}\r\n              </p>\r\n              <p className=\"no\">\r\n                <b>Mobile:</b>&ensp;{user.user_phone_number}\r\n              </p>\r\n              <p className=\"add\">\r\n                <b>Address:</b>&ensp;{user.user_locality}\r\n              </p>\r\n              <div className=\"footer row\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"acpt\"\r\n                  onClick={() => props.acceptHandler(user)}\r\n                >\r\n                  Accept&nbsp;<i className=\"fas fa-check\"></i>\r\n                </button>\r\n                {user.userStatus === \"registered\" ? (\r\n                  <>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"rjct\"\r\n                      onClick={() => props.rejectHandler(user)}\r\n                    >\r\n                      Reject&nbsp;<i className=\"fas fa-times\"></i>\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"rjct\"\r\n                      onClick={() => props.removeHandler(user)}\r\n                    >\r\n                      Remove&nbsp;<i className=\"fas fa-times\"></i>\r\n                    </button>\r\n                  </>\r\n                )}\r\n                {/* <button\r\n                  type=\"submit\"\r\n                  className=\"rjct\"\r\n                  onClick={() => props.rejectHandler(user)}\r\n                >\r\n                  Reject&nbsp;<i className=\"fas fa-times\"></i>\r\n                </button> */}\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryCard;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  acceptDeliveryUser,\r\n  getDeliveryUsers,\r\n  rejectDeliveryUser,\r\n  removeDeliveryUser,\r\n} from \"../api/DeliveryDB\";\r\nimport DeliveryCard from \"../reusable/DeliveryCard\";\r\nimport { Switch, Route, NavLink } from \"react-router-dom\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport { db } from \"../services/firebase\";\r\n\r\nconst Delivery = () => {\r\n  const [deliveryUsers, setDeliveryUsers] = useState({\r\n    newD: [],\r\n    verified: [],\r\n    rejected: [],\r\n  });\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    if (authCtx.user !== null) {\r\n      let deliveryList = [];\r\n      let location = authCtx.user.location;\r\n      var unsubscribe = db\r\n        .collection(\"DeliveryUsers\")\r\n        .doc(\"Branches\")\r\n        .collection(location)\r\n        .onSnapshot((docs) => {\r\n          docs.forEach((doc) => {\r\n            deliveryList.push(doc.data());\r\n          });\r\n          // getDeliveryUsers(true, location, (deliveryList) => {\r\n          // console.log(\"deliveryList\", deliveryList);\r\n          let newD = [];\r\n          let verified = [];\r\n          let rejected = [];\r\n          deliveryList.forEach((dguy) => {\r\n            if (dguy.verification === \"registered\") {\r\n              newD.push(dguy);\r\n            } else if (dguy.verification === \"rejected\") {\r\n              rejected.push(dguy);\r\n            } else if (dguy.verification === \"verified\") {\r\n              verified.push(dguy);\r\n            }\r\n          });\r\n          setDeliveryUsers({\r\n            newD: newD,\r\n            verified: verified,\r\n            rejected: rejected,\r\n          });\r\n          deliveryList = [];\r\n          // });\r\n        });\r\n\r\n      return () => {\r\n        unsubscribe();\r\n      };\r\n    }\r\n  }, [authCtx.user]);\r\n\r\n  const acceptHandler = (user) => {\r\n    acceptDeliveryUser(authCtx.user.location, user.user_id, (isAccepted) => {\r\n      if (isAccepted) {\r\n        console.log(\"accept\");\r\n        // newD -> verified\r\n        // let updatedUser = {\r\n        //   ...user,\r\n        //   userStatus: \"verified\"\r\n        // };\r\n        // setDeliveryUsers((prevState) => {\r\n        //   if (user.userStatus === \"registered\") {\r\n        //     let newD = [...prevState.newD];\r\n        //     let verified = [...prevState.verified];\r\n        //     let index = newD.findIndex((u) => u.user_id === user.user_id);\r\n        //     newD.splice(index, 1);\r\n        //     verified.push(updatedUser);\r\n        //     return {\r\n        //       ...prevState,\r\n        //       newD: newD,\r\n        //       verified: verified\r\n        //     };\r\n        //   } else {\r\n        //     let rejected = [...prevState.rejected];\r\n        //     let verified = [...prevState.verified];\r\n        //     let index = rejected.findIndex((u) => u.user_id === user.user_id);\r\n        //     rejected.splice(index, 1);\r\n        //     verified.push(updatedUser);\r\n        //     return {\r\n        //       ...prevState,\r\n        //       rejected: rejected,\r\n        //       verified: verified\r\n        //     };\r\n        //   }\r\n        // });\r\n        // newD.splice(index, noOfElementsToBeDeleted)\r\n      } else {\r\n        console.log(\"error-not accepted\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const rejectHandler = (user) => {\r\n    rejectDeliveryUser(authCtx.user.location, user.user_id, (isRejected) => {\r\n      if (isRejected) {\r\n        console.log(\"rejected\");\r\n        // let updatedUser = {\r\n        //   ...user,\r\n        //   userStatus: \"\",\r\n        // };\r\n        // setDeliveryUsers((prevState) => {\r\n        //   let newD = [...prevState.newD];\r\n        //   let rejected = [...prevState.rejected];\r\n        //   let index = newD.findIndex((u) => u.user_id === user.user_id);\r\n        //   newD.splice(index, 1);\r\n        //   rejected.push(updatedUser);\r\n        //   return {\r\n        //     ...prevState,\r\n        //     newD: newD,\r\n        //     rejected: rejected,\r\n        //   };\r\n        // });\r\n      } else {\r\n        console.log(\"error-not rejected\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeHandler = (user) => {\r\n    removeDeliveryUser(authCtx.user.location, user.user_id, (isRejected) => {\r\n      if (isRejected) {\r\n        console.log(\"rejected\");\r\n\r\n        setDeliveryUsers((prevState) => {\r\n          // let newD = [...prevState.newD];\r\n          let rejected = [...prevState.rejected];\r\n          let index = rejected.findIndex((u) => u.user_id === user.user_id);\r\n          rejected.splice(index, 1);\r\n        });\r\n      } else {\r\n        console.log(\"error-not rejected\");\r\n      }\r\n    });\r\n  };\r\n\r\n  let ui = null;\r\n  if (deliveryUsers === null) {\r\n    ui = <p>Loading!!!</p>;\r\n  } else if (deliveryUsers.verified.length === 0) {\r\n    ui = <p>No Delivery Persons!!!</p>;\r\n  } else {\r\n    ui = deliveryUsers.verified.map((user, i) => (\r\n      <div className=\"row details\" key={user.user_id}>\r\n        <p className=\"id\">{i + 1}</p>\r\n        <p className=\"name\">{user.user_username}</p>\r\n        <p className=\"number\">{user.user_phone_number}</p>\r\n        <p className=\"add\">{user.user_locality}</p>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"action\"\r\n          onClick={() => rejectHandler(user)}\r\n        >\r\n          Remove\r\n        </button>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row headnav\">\r\n        <div className=\"toggle\">\r\n          <NavLink to=\"/home/delivery/new\" className=\"newreq row\">\r\n            New Request\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"toggle\">\r\n          <NavLink to=\"/home/delivery/reject\" className=\"newreq row\">\r\n            Rejected\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"delivery-person\">\r\n        {/* <div className=\"newreq row\">\r\n        <h2 className=\"col-12\">New Request</h2>\r\n        <DeliveryCard />\r\n      </div> */}\r\n        <Switch>\r\n          <Route path=\"/home/delivery/new\">\r\n            <div className=\"newreq row\">\r\n              <DeliveryCard\r\n                users={deliveryUsers.newD}\r\n                acceptHandler={acceptHandler}\r\n                rejectHandler={rejectHandler}\r\n              />\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/home/delivery/reject\">\r\n            <div className=\"newreq row\">\r\n              <DeliveryCard\r\n                users={deliveryUsers.rejected}\r\n                acceptHandler={acceptHandler}\r\n                removeHandler={removeHandler}\r\n                // rejectHandler={rejectHandler}\r\n              />\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n        <div className=\"person-list\">\r\n          <h2>Delivery Persons List</h2>\r\n          <div className=\"row head\">\r\n            {/* <p className=\"id\">Delivery ID</p> */}\r\n            <p className=\"id\">No.</p>\r\n            <p className=\"name\">Person Name</p>\r\n            <p className=\"number\">Mobile Number</p>\r\n            <p className=\"add\">Address</p>\r\n            <p className=\"action\">Action</p>\r\n          </div>\r\n          {ui}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Delivery;\r\n","import { db } from \"../services/firebase\";\r\n\r\n// read all - food & grocery\r\n// not in use, bcs it needs unsubscribe, which should be directly done in respecive component\r\n// const getDeliveryUsers = (location, setList) => {\r\n//   let list = [];\r\n//   db.collection(\"DeliveryUsers\")\r\n//     .doc(\"Branches\")\r\n//     .collection(location)\r\n//     .where(\"verification\", \"==\", \"verified\")\r\n//     .onSnapshot((docs) => {\r\n//       docs.forEach((doc) => {\r\n//         list.push(doc.data());\r\n//       });\r\n//       setList(list);\r\n//       list = [];\r\n//     });\r\n// };\r\n\r\nconst acceptDeliveryUser = (location, id, setList) => {\r\n  // console.log(\"Accepted\");\r\n  let value = window.confirm(\"Do you want Accept\");\r\n  if (value) {\r\n    db.collection(\"DeliveryUsers\")\r\n      .doc(\"Branches\")\r\n      .collection(location)\r\n      .doc(id)\r\n      .update({\r\n        verification: \"verified\"\r\n      })\r\n      .then(() => {\r\n        setList(true);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n\r\n        setList(false);\r\n      });\r\n  } else {\r\n    console.log(\"Not Accepted\");\r\n    setList(false);\r\n  }\r\n};\r\n\r\nconst rejectDeliveryUser = (location, id, setList) => {\r\n  console.log(\"Accepted\");\r\n  let value = window.confirm(\"Do you want Reject\");\r\n  if (value) {\r\n    db.collection(\"DeliveryUsers\")\r\n      .doc(\"Branches\")\r\n      .collection(location)\r\n      .doc(id)\r\n      .update({\r\n        verification: \"rejected\"\r\n      })\r\n      .then(() => {\r\n        setList(true);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n\r\n        setList(false);\r\n      });\r\n  } else {\r\n    console.log(\"Not Accepted\");\r\n    setList(false);\r\n  }\r\n};\r\n\r\nconst removeDeliveryUser = (location, id, setList) => {\r\n  console.log(\"Deleted\");\r\n  let value = window.confirm(\"Do you want Delete\");\r\n  if (value) {\r\n    console.log(\"Deleted\");\r\n\r\n    // db.collection(\"DeliveryUsers\")\r\n    // .doc(\"Branches\")\r\n    // .collection(location)\r\n    //   .doc(id)\r\n    //   .delete()\r\n    //   .then(() => {\r\n    //     setList(true);\r\n    //   })\r\n    //   .catch((e) => {\r\n    //     console.log(e);\r\n\r\n    //     setList(false);\r\n    //   });\r\n  } else {\r\n    console.log(\"Not Accepted\");\r\n    setList(false);\r\n  }\r\n};\r\n\r\nexport {\r\n  // getDeliveryUsers,\r\n  acceptDeliveryUser,\r\n  rejectDeliveryUser,\r\n  removeDeliveryUser\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Switch, Route, NavLink } from \"react-router-dom\";\r\nimport Dashboard from \"../pages/Dashboard\";\r\nimport Food from \"./FoodItems/Food\";\r\nimport Orders from \"./Orders/Orders\";\r\nimport Grocery from \"./Grocery/Grocery\";\r\nimport AddNew from \"./FoodItems/AddNew/AddNew\";\r\nimport AddNewItem from \"./Grocery/AddNewItem/AddNewItem\";\r\n// import FoodItem from \"./FoodItems/FoodItem\";\r\nimport Items from \"../reusable/Items/Items\";\r\nimport Profile from \"../pages/Profile\";\r\nimport Delivery from \"../pages/Delivery\";\r\n\r\nimport AuthContext from \"../context/auth-context\";\r\n\r\nconst Sidebar = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  return (\r\n    <section>\r\n      {/* <!-- main content --> */}\r\n      <div className=\"container-fluid pt\">\r\n        <div className=\"flex-wrapper\">\r\n          <div className=\"sidebar\">\r\n            <ul className=\"sidebar-list\">\r\n              <li className=\"list-item\">\r\n                <NavLink\r\n                  to=\"/home/dashboard/allorder\"\r\n                  activeClassName=\"active\"\r\n                  className=\"list-link\"\r\n                >\r\n                  {/* <i className=\"fas fa-tachometer-alt\"></i> */}\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    src=\"/images/dashboard.png\"\r\n                    alt=\"dashboard\"\r\n                  />\r\n                  <span>Dashboard</span>\r\n                </NavLink>\r\n              </li>\r\n              {/* <li className=\"list-item\">\r\n                <NavLink\r\n                  to=\"/home/profile\"\r\n                  activeClassName=\"active\"\r\n                  className=\"list-link\"\r\n                >\r\n                  \r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    src=\"/images/user.png\"\r\n                    alt=\"profile\"\r\n                  />\r\n                  <span>Profile</span>\r\n                </NavLink>\r\n              </li> */}\r\n              <li className=\"list-item\">\r\n                <NavLink\r\n                  to=\"/home/fooditems\"\r\n                  activeClassName=\"active\"\r\n                  className=\"list-link\"\r\n                >\r\n                  {/* <i class=\"fas fa-utensils\"></i> */}\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    src=\"/images/cutlery.png\"\r\n                    alt=\"fooditem\"\r\n                  />\r\n                  <span>Food Items</span>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"list-item\">\r\n                <NavLink\r\n                  to=\"/home/grocery\"\r\n                  activeClassName=\"active\"\r\n                  className=\"list-link\"\r\n                >\r\n                  {/* <i className=\"fas fa-shopping-basket\"></i> */}\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    src=\"/images/groceries.png\"\r\n                    alt=\"grocery\"\r\n                  />\r\n                  <span>Grocery</span>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"list-item\">\r\n                <NavLink\r\n                  to=\"/home/orders\"\r\n                  activeClassName=\"active\"\r\n                  className=\"list-link\"\r\n                >\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    src=\"/images/order.png\"\r\n                    alt=\"fooditem\"\r\n                  />\r\n                  <span>Orders</span>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"list-item\">\r\n                <NavLink\r\n                  to=\"/home/delivery\"\r\n                  activeClassName=\"active\"\r\n                  className=\"list-link\"\r\n                >\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    src=\"https://cdn-icons-png.flaticon.com/512/2830/2830312.png\"\r\n                    alt=\"fooditem\"\r\n                  />\r\n                  <span>Delivery</span>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"list-item\">\r\n                <NavLink\r\n                  to=\"/home/profile\"\r\n                  activeClassName=\"active\"\r\n                  className=\"list-link\"\r\n                >\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    // src=\"/images/profile.png\"\r\n                    src={authCtx.user !== null && authCtx.user.img}\r\n                    alt=\"fooditem\"\r\n                  />\r\n                  <span>Profile</span>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"list-item\">\r\n                <div className=\"list-link\" onClick={props.logoutHandler}>\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    src=\"/images/exit.png\"\r\n                    alt=\"fooditem\"\r\n                  />\r\n                  <span>Logout</span>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"rt\">\r\n            <Switch>\r\n              {/* Food */}\r\n              <Route path=\"/home/fooditems/addnew\">\r\n                <AddNew type=\"Food\" />\r\n              </Route>\r\n              <Route path=\"/home/fooditems/breakfast\">\r\n                {/* <BreakFast /> */}\r\n                {/* <FoodItem title=\"BreakFast\" type=\"food\" /> */}\r\n                <Items title=\"BreakFast\" type=\"Food\" authCtx={authCtx} />\r\n              </Route>\r\n              <Route path=\"/home/fooditems/lunch\">\r\n                <Items title=\"Lunch\" type=\"Food\" authCtx={authCtx} />\r\n              </Route>\r\n              <Route path=\"/home/fooditems/dinner\">\r\n                <Items title=\"Dinner\" type=\"Food\" authCtx={authCtx} />\r\n              </Route>\r\n              {/* <Route path=\"/home/fooditems/starters\">\r\n                <Items title=\"Starters\" type=\"food\" authCtx={authCtx} />  \r\n              </Route>\r\n              <Route path=\"/home/fooditems/desserts\">\r\n                <Items title=\"Desserts\" type=\"food\" authCtx={authCtx} />\r\n              </Route>\r\n              <Route path=\"/home/fooditems/bigdeal\">\r\n                <Items title=\"BigDeal\" type=\"food\" authCtx={authCtx} />\r\n              </Route>\r\n              <Route path=\"/home/fooditems/juice\">\r\n                <Items title=\"Juice\" type=\"food\" authCtx={authCtx} />\r\n              </Route> */}\r\n              <Route path=\"/home/fooditems\">\r\n                <Food />\r\n              </Route>\r\n\r\n              {/* Food Orders */}\r\n              <Route path=\"/home/orders\">\r\n                <Orders />\r\n              </Route>\r\n\r\n              {/* Grocery */}\r\n              <Route path=\"/home/grocery/rice\">\r\n                <Items title=\"Rice\" type=\"Grocery\" authCtx={authCtx} />\r\n              </Route>\r\n              <Route path=\"/home/grocery/fruitsvegs\">\r\n                <Items\r\n                  title=\"Fruits_Vegetables\"\r\n                  type=\"Grocery\"\r\n                  authCtx={authCtx}\r\n                />\r\n              </Route>\r\n              {/* <Route path=\"/home/grocery/cannedgoods\">\r\n                <Items title=\"CannedGoods\" type=\"grocery\" authCtx={authCtx} />\r\n              </Route> */}\r\n              <Route path=\"/home/grocery/summer-drinks-beverages\">\r\n                <Items\r\n                  title=\"Summer_Drinks_Beverages\"\r\n                  type=\"Grocery\"\r\n                  authCtx={authCtx}\r\n                />\r\n              </Route>\r\n              <Route path=\"/home/grocery/soaps\">\r\n                <Items title=\"soaps\" type=\"Grocery\" authCtx={authCtx} />\r\n              </Route>\r\n              <Route path=\"/home/grocery/pharmacy\">\r\n                <Items title=\"Pharmacy\" type=\"Grocery\" authCtx={authCtx} />\r\n              </Route>\r\n              <Route path=\"/home/grocery/organics\">\r\n                <Items title=\"Organics\" type=\"Grocery\" authCtx={authCtx} />\r\n              </Route>\r\n              {/* <Route path=\"/home/grocery/cleaners\">\r\n                <Items title=\"Cleaners\" type=\"grocery\" authCtx={authCtx} />\r\n              </Route>\r\n              <Route path=\"/home/grocery/others\">\r\n                <Items title=\"Others\" type=\"grocery\" authCtx={authCtx} />\r\n              </Route> */}\r\n              <Route path=\"/home/grocery/addnewitem\">\r\n                <AddNewItem type=\"Grocery\" />\r\n              </Route>\r\n              <Route path=\"/home/grocery\">\r\n                <Grocery />\r\n              </Route>\r\n\r\n              {/* Delivery */}\r\n              <Route path=\"/home/delivery\">\r\n                <Delivery />\r\n              </Route>\r\n\r\n              {/* Profile */}\r\n              <Route path=\"/home/profile\">\r\n                <Profile />\r\n              </Route>\r\n\r\n              {/* Dashboard */}\r\n              <Route path=\"/home/dashboard/manual\">\r\n                <Dashboard />\r\n              </Route>\r\n              <Route path=\"/home/dashboard/delivered\">\r\n                <Dashboard type=\"food\" />\r\n              </Route>\r\n              <Route path=\"/home/dashboard/ondeliver\">\r\n                <Dashboard type=\"food\" />\r\n              </Route>\r\n              <Route path=\"/home/dashboard/preparing\">\r\n                <Dashboard type=\"food\" />\r\n              </Route>\r\n              <Route path=\"/home/dashboard/neworder\">\r\n                <Dashboard type=\"food\" />\r\n              </Route>\r\n              <Route path=\"/home/dashboard/allorder\">\r\n                <Dashboard type=\"food\" />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { auth } from \"../services/firebase\";\r\nimport IdleTimeoutModal from \"../ui/IdleTimeoutModal\";\r\nimport IdleTimerContainer from \"../helpers/IdleTimerContainer\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { useHistory } from \"react-router\";\r\nimport ReactNotifications from \"react-notifications-component\";\r\n// import AuthContext from \"../context/auth-context\";\r\n\r\nfunction Home(props) {\r\n  const [showTimeoutModal, setShowTimeoutModal] = useState(false);\r\n  const [isTimedout, setIsTimedout] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    history.push(\"/home/dashboard/allorder\");\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setShowTimeoutModal(false);\r\n    setIsTimedout(false);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        // Sign-out successful.\r\n        console.log(\"signed out successfully...\");\r\n        // alert(\"signed out\");\r\n        props.history.replace(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        // An error happened.\r\n        alert(\"Some Error To Logout!!!\");\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const timeoutModalHandler = () => {\r\n    setShowTimeoutModal(true);\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <ReactNotifications />\r\n      <IdleTimeoutModal\r\n        showModal={showTimeoutModal}\r\n        handleClose={handleClose}\r\n        handleLogout={logoutHandler}\r\n      />\r\n      <IdleTimerContainer\r\n        handleLogout={logoutHandler}\r\n        timeout={isTimedout}\r\n        timeoutModal={timeoutModalHandler}\r\n        timedoutHandler={(bool) => {\r\n          setIsTimedout(bool);\r\n        }}\r\n      />\r\n      <Navbar logoutHandler={logoutHandler} />\r\n      <Sidebar logoutHandler={logoutHandler} />\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport { useHistory } from \"react-router\";\r\nimport * as pagenotfound from \"../assets/images/64076-404-not-found-page.json\";\r\n\r\nconst PageNotFound = () => {\r\n  const history = useHistory();\r\n  const defaultOptions1 = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: pagenotfound.default,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\"\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"wrapper\" onClick={() => history.push(\"/\")}>\r\n      <Lottie options={defaultOptions1} height={500} width={1000} />\r\n      {/* <div id=\"info\">\r\n        <h3>This page could not be found</h3>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import \"./styles.css\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport PageNotFound from \"./ui/404Error\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport AuthContext from \"./context/auth-context\";\n\nexport default function App() {\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!authCtx.isLoggedIn) {\n      history.replace(\"/\");\n    } else {\n      history.replace(\"/home\");\n    }\n  }, [authCtx.isLoggedIn]);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/home\" component={Home} />\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"*\" render={() => <PageNotFound />} />\n      </Switch>\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./context/auth-context\";\nimport { OrdersContextProvider } from \"./context/orders-context\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <AuthContextProvider>\n    <OrdersContextProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </OrdersContextProvider>\n  </AuthContextProvider>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__1nGrW\",\"Button\":\"Login_Button__2EPEk\",\"Link\":\"Login_Link__3AVFG\"};"],"sourceRoot":""}